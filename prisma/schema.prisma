generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "darwin"]
}

datasource db {
  provider = "mysql"
  url      = env("NX_DATABASE_URL")
}

model GOASessionSwapOld {
  id           Int      @id @default(autoincrement())
  sessionId    String   @map("session_id")
  currentTutor Int      @map("current_tutor")
  user         User     @relation(fields: [currentTutor], references: [tsp_id])
  swapType     String   @map("swap_type")
  reason       String   @map("reason")
  tempSwap     Boolean  @map("temp_swap")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")

  @@index([sessionId])
  @@map("goa_session_swaps_v2")
}

model GOASessionSwap {
  id                    Int                     @id @default(autoincrement())
  oldTutorId            Int                     @map("old_tsp_id") // Old tutor
  newTutorId            Int                     @map("new_tsp_id") // currentTutor
  swapType              String                  @map("swap_type") // Temp Swap, Permanat Swap
  swapCategory          String                  @map("swap_category") // 
  reason                String                  @map("reason")
  startDate             DateTime?               @map("start_date")
  endDate               DateTime?               @map("end_date")
  slotId                Int                     @map("slot_id")
  createdBy             Int                     @map("updated_by")
  createdAt             DateTime                @default(now()) @map("created_at")
  slot                  GOASlot                 @relation(fields: [slotId], references: [id])
  userOld               TslUser                 @relation("TslUserOldGOASessionSwap", fields: [oldTutorId], references: [tsl_id])
  userNew               TslUser                 @relation("TslUserNewGOASessionSwap", fields: [newTutorId], references: [tsl_id])
  gOASessionSwapDetails GOASessionSwapDetails[]

  // @@index([sessionId])
  @@map("goa_session_swap")
}

model GOASessionSwapDetails {
  id             Int            @id @default(autoincrement())
  sessionSwapId  Int            @map("session_swap_id")
  sessionId      Int            @map("session_id")
  sessionDate    DateTime?      @map("session_date")
  gOASessionSwap GOASessionSwap @relation(fields: [sessionSwapId], references: [id])

  @@map("goa_session_swap_details")
}

model GOASessionsSwaps {
  id                  Int      @id
  effective_date      DateTime
  old_tutor_tsp_id    Int
  old_tutor_tsl_id    Int
  new_tutor_tsp_id    Int
  new_tutor_tsl_id    Int
  slot_id             Int?
  tsl_swapper_id      Int
  learning_session_id Int

  slot GOASlot? @relation(fields: [slot_id], references: [id])

  @@map("goa_sessions_swaps")
}

model GOADemand {
  id             Int      @id @default(autoincrement())
  effective_date DateTime
  amount         Int
  business_unit  String
  slot_id        Int
  hour_status_id Int
  created_at     DateTime
  created_by     Int

  slot        GOASlot      @relation(fields: [slot_id], references: [id])
  hour_status GOAHourState @relation(fields: [hour_status_id], references: [id])

  @@map("goa_demand")
}

model GOABookedSessions {
  id             Int      @id @default(autoincrement()) //change this to string with unique id - nirshadss change
  effective_date DateTime @db.Date()
  amount         Int
  business_unit  String
  slot_id        Int
  hour_status_id Int
  created_at     DateTime
  created_by     Int

  slot        GOASlot      @relation(fields: [slot_id], references: [id])
  hour_status GOAHourState @relation(fields: [hour_status_id], references: [id])

  @@map("goa_booked_sessions")
}

model GOABookedSessionsV2 {
  uniqueKey      String   @id @map("unique_key") @db.VarChar(32)
  effective_date DateTime @db.Date()
  amount         Int
  business_unit  String
  slot_id        Int
  hour_status_id Int
  created_at     DateTime
  created_by     Int

  slot        GOASlot      @relation(fields: [slot_id], references: [id])
  hour_status GOAHourState @relation(fields: [hour_status_id], references: [id])

  @@map("goa_booked_sessions_v2")
}

model GOAIssueClosingDate {
  id             Int      @id @default(autoincrement())
  closing_date   DateTime @db.Date()
  effective_date DateTime @db.Date()

  @@map("goa_issue_closing_date")
}

model GOASessionFlagStatus {
  id              Int      @id @default(autoincrement())
  session_flag_id Int
  reason          String   @db.VarChar(100)
  comment         String   @db.VarChar(500)
  status          Int
  created_at      DateTime
  created_by      Int

  session_flag GOASessionFlags @relation(fields: [session_flag_id], references: [id])

  @@map("goa_session_flag_status")
}

model GOASessionFlags {
  id             Int      @id @default(autoincrement())
  tsp_id         Int
  date           DateTime
  slot_id        Int
  slot_status_id Int
  hour_state_id  Int?
  satutary       Boolean
  concern        String   @db.VarChar(45)
  description    String   @db.VarChar(500)
  document_uri   String?  @db.VarChar(100)
  status         Int
  created_at     DateTime
  updated_at     DateTime

  user                 User                   @relation(fields: [tsp_id], references: [tsp_id])
  slot                 GOASlot                @relation(fields: [slot_id], references: [id])
  slot_status          GOASlotStatus          @relation(fields: [slot_status_id], references: [id])
  hour_state           GOAHourState?          @relation(fields: [hour_state_id], references: [id])
  GOASessionFlagStatus GOASessionFlagStatus[]

  @@map("goa_session_flags")
}

model GOATiers {
  id                   Int                    @id @default(autoincrement())
  discription          String                 @db.VarChar(100)
  tier_code            String                 @db.VarChar(45)
  GOAInvoice           GOAInvoice[]
  GOAInvoiceBatchTiers GOAInvoiceBatchTiers[]
  GOATutorPaymentRates GOATutorPaymentRates[]
  tutor_tier           GOATutorTier[]

  @@map("goa_tiers")
}

model GOATutorTier {
  id             Int       @id @default(autoincrement())
  tsp_id         Int
  tier_id        Int
  effective_date DateTime
  createdBy      Int?      @map("created_by")
  createdAt      DateTime? @default(now()) @map("created_at") @db.DateTime(0)
  tiers          GOATiers  @relation(fields: [tier_id], references: [id])
  user           User      @relation(fields: [tsp_id], references: [tsp_id])

  @@index([tier_id], map: "goa_tutors_tier_tier_id_fkey")
  @@index([tsp_id], map: "goa_tutors_tier_tsp_id_fkey")
  @@map("goa_tutors_tier")
}

model GOALaunchedSessions {
  id                  Int           @id @default(autoincrement())
  tsp_id              Int
  slot_id             Int
  tutor_id            Int?
  tutor_name          String?       @db.Char(255)
  effective_date      DateTime
  created_at          DateTime
  learning_session_id Int
  slot_status_id      Int
  mage_created_at     String?       @map("_mage_created_at") @db.Char(52)
  mage_updated_at     String?       @map("_mage_updated_at") @db.Char(52)
  slot                GOASlot       @relation(fields: [slot_id], references: [id])
  slot_status         GOASlotStatus @relation(fields: [slot_status_id], references: [id])
  user                User          @relation(fields: [tsp_id], references: [tsp_id])

  @@index([slot_id], map: "goa_launched_sessions_slot_id_fkey")
  @@index([slot_status_id], map: "goa_launched_sessions_slot_status_id_fkey")
  @@index([tsp_id], map: "goa_launched_sessions_tsp_id_fkey")
  @@map("goa_launched_sessions")
}

model GOAInvoiceBatchTiers {
  id            Int               @id @default(autoincrement())
  tier_id       Int
  batch_id      Int
  invoice_batch GOAInvoicingBatch @relation(fields: [batch_id], references: [id])
  tier          GOATiers          @relation(fields: [tier_id], references: [id])

  @@index([batch_id], map: "goa_invoice_batch_tiers_batch_id_fkey")
  @@index([tier_id], map: "goa_invoice_batch_tiers_tier_id_fkey")
  @@map("goa_invoice_batch_tiers")
}

model GOAInvoicingBatch {
  id                  Int                    @id @default(autoincrement())
  start_date          DateTime               @db.Date
  end_date            DateTime               @db.Date
  country             String                 @db.VarChar(45)
  status              Int
  updated_by          Int
  created_at          DateTime               @db.DateTime(0)
  tutoring_country    String                 @db.VarChar(45)
  invoice             GOAInvoice[]
  invoice_batch_tiers GOAInvoiceBatchTiers[]

  @@map("goa_invoicing_batch")
}

model GOAInvoice {
  id              Int                 @id @default(autoincrement())
  batch_id        Int
  tsp_id          Int
  total_amount    Float
  status          Int
  updated_by      Int
  created_at      DateTime            @db.DateTime(0)
  comment         String              @db.VarChar(250)
  tier_id         Int
  due_date        DateTime            @db.DateTime(0)
  updated         Int                 @db.TinyInt
  updated_at      DateTime            @db.DateTime(0)
  invoicing_batch GOAInvoicingBatch   @relation(fields: [batch_id], references: [id])
  tiers           GOATiers            @relation(fields: [tier_id], references: [id])
  invoice_details GOAInvoiceDetails[]
  user            User                @relation(fields: [tsp_id], references: [tsp_id])

  @@index([batch_id], map: "goa_invoice_batch_id_fkey")
  @@index([tier_id], map: "goa_invoice_tier_id_fkey")
  @@map("goa_invoice")
}

model GOAInvoiceDetails {
  id                      Int                  @id @default(autoincrement())
  invoice_id              Int
  tutor_payment_rate_id   Int
  total_slot_count        Int
  calculated_total_amount Float
  status                  Int
  updated_by              Int
  created_at              DateTime             @db.DateTime(0)
  updated_at              DateTime             @db.DateTime(0)
  invoice                 GOAInvoice           @relation(fields: [invoice_id], references: [id])
  tutor_payment_rates     GOATutorPaymentRates @relation(fields: [tutor_payment_rate_id], references: [id])

  @@index([invoice_id], map: "goa_invoice_details_invoice_id_fkey")
  @@index([tutor_payment_rate_id], map: "goa_invoice_details_tutor_payment_rate_id_fkey")
  @@map("goa_invoice_details")
}

model GOATutorPaymentRates {
  id               Int                 @id @default(autoincrement())
  rate_code        String              @db.VarChar(100)
  tier_id          Int
  description      String              @db.VarChar(250)
  country          String              @db.VarChar(45)
  amount           Float
  deduction        Boolean
  effective_date   DateTime            @db.DateTime(0)
  updated_by       Int?
  created_at       DateTime?           @db.DateTime(0)
  tutoring_country String              @db.VarChar(45)
  invoice_details  GOAInvoiceDetails[]
  tier             GOATiers            @relation(fields: [tier_id], references: [id])

  @@index([tier_id], map: "goa_tutor_payment_rates_tier_id_fkey")
  @@map("goa_tutor_payment_rates")
}

model TslUser {
  tsl_id         Int           @unique
  tsp_id         Int           @id
  tsl_first_name String
  tsl_last_name  String
  tsl_full_name  String
  tsl_email      String
  tsl_contract   TslContract[]
  user           User          @relation(fields: [tsp_id], references: [tsp_id])

  userOldGOASessionSwap GOASessionSwap[] @relation("TslUserOldGOASessionSwap")
  userNewGOASessionSwap GOASessionSwap[] @relation("TslUserNewGOASessionSwap")

  @@index([tsp_id], map: "tsl_user_tsp_id_fkey")
  @@map("tsl_user")
}

model TslContract {
  id              Int      @id @default(autoincrement())
  tsl_user_id     Int
  contract_id     Int
  contract_status Int
  start_date      DateTime
  end_date        DateTime
  tsl_user        TslUser  @relation(fields: [tsl_user_id], references: [tsl_id])

  @@index([tsl_user_id], map: "tsl_contract_tsl_user_id_fkey")
  @@map("tsl_contract")
}

model GOADaysOFWeek {
  id      Int       @id @default(autoincrement())
  date    String?   @db.VarChar(45)
  slot    GOASlot[]
  GRASlot GRASlot[]

  @@map("goa_days_of_week")
}

model Calendar {
  id               Int          @id @default(autoincrement())
  holidays_type_id Int
  country          String?      @db.VarChar(45)
  effective_date   DateTime?    @db.DateTime(0)
  description      String?      @db.VarChar(200)
  holidays_type    HolidaysType @relation(fields: [holidays_type_id], references: [id])

  @@index([holidays_type_id], map: "calendar_holidays_type_id_fkey")
  @@map("calendar")
}

model HolidaysType {
  id           Int        @id @default(autoincrement())
  holiday_type String?    @db.VarChar(45)
  color_code   String?    @db.VarChar(45)
  calendar     Calendar[]

  @@map("holidays_type")
}

model GOASlot {
  id                              Int                               @id @default(autoincrement())
  date_id                         Int
  status                          String                            @db.VarChar(45)
  created_at                      DateTime                          @db.DateTime(0)
  updated_at                      DateTime                          @db.DateTime(0)
  time_range_id                   Int
  change_request_details          GOAChangeRequestDetails[]
  launched_sessions               GOALaunchedSessions[]
  date                            GOADaysOFWeek                     @relation(fields: [date_id], references: [id])
  time_range                      GOATimeRange                      @relation(fields: [time_range_id], references: [id])
  GOATimeOffDetails               GOATimeOffDetails[]
  GOATutorSlotsDetails            GOATutorSlotsDetails[]
  GOASessionFlags                 GOASessionFlags[]
  GOADemand                       GOADemand[]
  GOABookedSessions               GOABookedSessions[]
  GOASessionsSwaps                GOASessionsSwaps[]
  GOASlotMovement                 GOASlotMovement[]
  GOABookedSessionsV2             GOABookedSessionsV2[]
  CapautSessionsToday             CapautSessionsToday[]
  GoaSessionsToday                GoaSessionsToday[]
  GoaSessionsFuture               GoaSessionsFuture[]
  GOASessionSwap                  GOASessionSwap[]
  GoaTslReservationBookingDetails GoaTslReservationBookingDetails[]

  @@index([date_id], map: "goa_slot_date_id_fkey")
  @@index([time_range_id], map: "goa_slot_time_range_id_fkey")
  @@map("goa_slot")
}

model GOASlotMovement {
  id             Int                 @id @default(autoincrement())
  slotId         Int
  goaSlot        GOASlot             @relation(fields: [slotId], references: [id])
  effectiveDate  DateTime            @db.Date
  movementTypeId Int
  movementType   GOASlotMovementType @relation(fields: [movementTypeId], references: [id])

  @@map("goa_slot_movement")
}

model GOASlotMovementType {
  id              Int               @id @default(autoincrement())
  code            String            @unique
  name            String
  GOASlotMovement GOASlotMovement[]

  @@map("goa_slot_movment_type")
}

model GOATypeOfLeave {
  id            Int          @id @default(autoincrement())
  type_of_leave String       @db.VarChar(45)
  time_off      GOATimeOff[]

  @@map("goa_type_of_leave")
}

model GOATimeRange {
  id      Int       @id @default(autoincrement())
  hh_time String    @db.VarChar(45)
  oh_time String    @db.VarChar(45)
  slot    GOASlot[]

  @@map("goa_time_range")
}

model DaylightSaving {
  id              Int      @id @default(autoincrement())
  start_Date      DateTime
  end_Date        DateTime
  effective_hours Float    @db.Float

  @@map("day_light_saving")
}

model GOASlotStatus {
  id                     Int                       @id @default(autoincrement())
  code                   String                    @unique @db.VarChar(45)
  description            String                    @db.VarChar(250)
  change_request_details GOAChangeRequestDetails[]
  launched_sessions      GOALaunchedSessions[]
  timeoff_details        GOATimeOffDetails[]
  GOATutorSlotsDetails   GOATutorSlotsDetails[]
  GOASessionFlags        GOASessionFlags[]

  @@map("goa_slot_status")
}

model GOATutorSlotsDetails {
  id               Int            @id @default(autoincrement())
  tutor_slot_id    Int
  slot_id          Int
  slot_status_id   Int
  effective_date   DateTime       @db.Date
  hour_status      String         @db.VarChar(45)
  created_at       DateTime
  created_by       Int
  slot             GOASlot        @relation(fields: [slot_id], references: [id])
  slot_status      GOASlotStatus  @relation(fields: [slot_status_id], references: [id])
  tutor_time_slots GOATutorsSlots @relation(fields: [tutor_slot_id], references: [id])

  @@index([slot_id], map: "goa_tutors_slots_details_slot_id_fkey")
  @@index([slot_status_id], map: "goa_tutors_slots_details_slot_status_id_fkey")
  @@index([tutor_slot_id], map: "goa_tutors_slots_details_tutor_slot_id_fkey")
  @@map("goa_tutors_slots_details")
}

model GOATutorsSlots {
  id                   Int                    @id @default(autoincrement())
  tsp_id               Int
  effective_date       DateTime               @db.Date
  hour_status          String                 @db.VarChar(45)
  created_at           DateTime               @db.DateTime(0)
  updated_at           DateTime               @db.DateTime(0)
  user                 User                   @relation(fields: [tsp_id], references: [tsp_id])
  GOATutorSlotsDetails GOATutorSlotsDetails[]

  @@index([tsp_id], map: "goa_tutors_slots_tsp_id_fkey")
  @@map("goa_tutors_slots")
}

model GOATimeOff {
  id              Int                 @id @default(autoincrement())
  email_status    Boolean
  created_at      DateTime            @default(now())
  updated_at      DateTime            @default(now())
  comment         String              @db.Text
  effective_date  DateTime            @db.Date
  hour_state      String
  reason          String              @db.VarChar(45)
  penalty         String
  leave_type_id   Int?
  status          Int
  tsp_id          Int
  type_of_leave   GOATypeOfLeave?     @relation(fields: [leave_type_id], references: [id])
  user            User                @relation(fields: [tsp_id], references: [tsp_id])
  timeoff_details GOATimeOffDetails[]

  @@index([leave_type_id], map: "goa_time_off_leave_type_id_fkey")
  @@index([tsp_id], map: "goa_time_off_tsp_id_fkey")
  @@map("goa_time_off")
}

model GOATimeOffDetails {
  id             Int           @id @default(autoincrement())
  time_off_id    Int
  slot_id        Int
  slot_status_id Int
  hour_status    String
  effective_date DateTime
  req_status     Int
  created_at     DateTime      @default(now())
  updated_at     DateTime      @default(now())
  penalty        String?
  reason         String?       @db.VarChar(45)
  comment        String?       @db.Text
  cancel_reason  String?       @db.VarChar(45)
  cancel_comment String?       @db.Text
  slot           GOASlot       @relation(fields: [slot_id], references: [id])
  slot_status    GOASlotStatus @relation(fields: [slot_status_id], references: [id])
  time_off       GOATimeOff    @relation(fields: [time_off_id], references: [id])

  @@index([slot_id], map: "goa_time_off_details_slot_id_fkey")
  @@index([slot_status_id], map: "goa_time_off_details_slot_status_id_fkey")
  @@index([time_off_id], map: "goa_time_off_details_time_off_id_fkey")
  @@map("goa_time_off_details")
}

model GOAChangeRequests {
  id                     Int                       @id @default(autoincrement())
  tsp_id                 Int
  reason                 String
  comment                String?
  checked_status         Int
  created_at             DateTime
  tsl_platform_update    Boolean
  hour_state             String
  effective_date         DateTime?                 @db.Date
  change_request_details GOAChangeRequestDetails[]
  user                   User                      @relation(fields: [tsp_id], references: [tsp_id])

  @@index([tsp_id], map: "goa_change_requests_tsp_id_fkey")
  @@map("goa_change_requests")
}

model GOAChangeRequestDetails {
  id                Int               @id @default(autoincrement())
  change_request_id Int
  slot_id           Int
  slot_status_id    Int
  hour_status       String
  effective_date    DateTime          @db.Date
  request_status    Int
  created_at        DateTime          @default(now())
  updated_at        DateTime          @default(now())
  change_request    GOAChangeRequests @relation(fields: [change_request_id], references: [id])
  slot              GOASlot           @relation(fields: [slot_id], references: [id])
  slot_status       GOASlotStatus     @relation(fields: [slot_status_id], references: [id])

  @@index([change_request_id], map: "goa_change_request_details_change_request_id_fkey")
  @@index([slot_id], map: "goa_change_request_details_slot_id_fkey")
  @@index([slot_status_id], map: "goa_change_request_details_slot_status_id_fkey")
  @@map("goa_change_request_details")
}

model GOATutorHourState {
  id                       Int                        @id @default(autoincrement())
  created_at               DateTime
  tsp_id                   Int
  user                     User                       @relation(fields: [tsp_id], references: [tsp_id])
  GOATutorHourStateDetails GOATutorHourStateDetails[]

  @@index([tsp_id], map: "goa_tutor_hour_state_tsp_id_fkey")
  @@map("goa_tutor_hour_state")
}

model GOATutorHourStateDetails {
  id                  Int               @id @default(autoincrement())
  tutor_hour_state_id Int
  hour_state_id       Int
  effective_date      DateTime
  created_at          DateTime
  hour_state          GOAHourState      @relation(fields: [hour_state_id], references: [id])
  tutor_hour_state    GOATutorHourState @relation(fields: [tutor_hour_state_id], references: [id])

  @@index([hour_state_id], map: "goa_tutor_hour_state_details_hour_state_id_fkey")
  @@index([tutor_hour_state_id], map: "goa_tutor_hour_state_details_tutor_hour_state_id_fkey")
  @@map("goa_tutor_hour_state_details")
}

model GOAHourState {
  id                       Int                        @id @default(autoincrement())
  name                     String
  GOATutorHourStateDetails GOATutorHourStateDetails[]
  GOASessionFlags          GOASessionFlags[]
  GOADemand                GOADemand[]
  GOABookedSessions        GOABookedSessions[]
  GOABookedSessionsV2      GOABookedSessionsV2[]

  @@map("goa_hour_state")
}

model GOAUsBookedSession {
  id                   Int      @id @default(autoincrement())
  sessionID            String   @unique() @map("session_id")
  status               String   @map("status")
  sessionScheduledDate DateTime @map("session_scheduled_date") @db.Date()
  sessionScheduledTime String   @map("session_scheduled_time")
  length               Int      @map("length")
  tutorUserID          String   @map("tutor_user_id")
  tspId                Int?     @map("tsp_id")
  tutorEmail           String   @map("tutor_email")
  tutorName            String   @map("tutor_name")
  createdAt            DateTime @default(now()) @map("created_at")
  updatedAt            DateTime @updatedAt @map("updated_at")

  @@map("goa_us_booked_sessions")
}

model GOAMailLog {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  message   String   @map("message")

  @@map("goa_mail_logs")
}

model ApprovedBankData {
  tspId        Int      @id @map("tsp_id")
  bankName     String?  @map("bank_name") @db.VarChar(200)
  bBranch      String?  @map("b_branch") @db.VarChar(200)
  bBranchCode  String?  @map("b_branch_code") @db.VarChar(45)
  bAccountNo   String?  @map("b_account_no") @db.VarChar(45)
  bAccountName String?  @map("b_account_name") @db.VarChar(200)
  bSwift       String?  @map("b_swift") @db.VarChar(45)
  bPassbookUrl String?  @map("b_passbook_url") @db.VarChar(500)
  ifscCode     String?  @map("ifsc_code") @db.VarChar(200)
  ibanNumber   String?  @map("iban_number") @db.VarChar(200)
  bankStatus   String?  @map("bank_status") @db.VarChar(100)
  approvedBy   Int?     @map("approved_by")
  approvedAt   DateTime @default(now()) @map("approved_at") @db.DateTime(0)
  updatedFlag  Int      @default(0) @map("updated_flag") @db.TinyInt
  user         User     @relation(fields: [tspId], references: [tsp_id], onDelete: NoAction, onUpdate: NoAction, map: "FK_1272")

  @@index([tspId], map: "fkIdx_1273")
  @@map("approved_bank_data")
}

model ApprovedContactData {
  tspId                 Int      @id @map("tsp_id")
  personalEmail         String?  @map("personal_email") @db.VarChar(100)
  workEmail             String?  @map("work_email") @db.VarChar(100)
  mobileNumber          String?  @map("mobile_number") @db.VarChar(45)
  mobileNumberVerified  Int      @default(0) @map("mobile_number_verified") @db.TinyInt
  landlineNumber        String?  @map("landline_number") @db.VarChar(45)
  residingAddressL1     String?  @map("residing_address_l1") @db.VarChar(200)
  residingAddressL2     String?  @map("residing_address_l2") @db.VarChar(200)
  residingCity          String?  @map("residing_city") @db.VarChar(100)
  residingDistrict      String?  @map("residing_district") @db.VarChar(100)
  residingProvince      String?  @map("residing_province") @db.VarChar(100)
  residingCountry       String?  @map("residing_country") @db.VarChar(100)
  sameResidingPermanent String?  @map("same_residing_permanent") @db.VarChar(45)
  permanentAddressL1    String?  @map("permanent_address_l1") @db.VarChar(200)
  permanentAddressL2    String?  @map("permanent_address_l2") @db.VarChar(200)
  permanentCity         String?  @map("permanent_city") @db.VarChar(100)
  permanentDistrict     String?  @map("permanent_district") @db.VarChar(100)
  permanentProvince     String?  @map("permanent_province") @db.VarChar(100)
  permanentCountry      String?  @map("permanent_country") @db.VarChar(45)
  emgContactName        String?  @map("emg_contact_name") @db.VarChar(100)
  emgRelationship       String?  @map("emg_relationship") @db.VarChar(100)
  emgContactNum         String?  @map("emg_contact_num") @db.VarChar(45)
  residingPin           String?  @map("residing_pin") @db.VarChar(45)
  permanentPin          String?  @map("permanent_pin") @db.VarChar(45)
  approvedBy            Int?     @map("approved_by")
  approvedAt            DateTime @default(now()) @map("approved_at") @db.DateTime(0)
  updatedFlag           Int      @default(0) @map("updated_flag") @db.TinyInt
  user                  User     @relation(fields: [tspId], references: [tsp_id], onDelete: NoAction, onUpdate: NoAction, map: "FK_994")

  @@index([tspId], map: "fkIdx_995")
  @@map("approved_contact_data")
}

model ApprovedContractData {
  tsp_id                     Int       @id
  contract_url               String?   @db.VarChar(1000)
  contract_no                Int
  contract_type              String?   @db.VarChar(100)
  contract_start_d           DateTime? @db.Date
  contract_end_d             DateTime? @db.Date
  hr_admin_approval          String?   @db.VarChar(45)
  hr_comment                 String?   @db.VarChar(200)
  updated_by                 Int?
  updated_at                 DateTime? @db.DateTime(0)
  approved_by                Int?
  approved_at                DateTime? @db.DateTime(0)
  contract_assigned_at       DateTime? @db.Date
  contract_uploaded_at       DateTime? @db.Date
  contract_audited_at        DateTime? @db.Date
  contract_audited_by        Int?
  contract_url_status        String?   @db.VarChar(30)
  contract_url_reject_reason String?   @db.VarChar(200)
  user                       User      @relation(fields: [tsp_id], references: [tsp_id], onDelete: NoAction, onUpdate: NoAction)

  @@map("approved_contract_data")
}

model HrisContractData {
  id                         Int       @id @default(autoincrement())
  tsp_id                     Int
  contract_url               String?   @db.VarChar(1000)
  contract_no                Int
  contract_type              String?   @db.VarChar(100)
  contract_start_d           DateTime? @db.Date
  contract_end_d             DateTime? @db.Date
  hr_admin_approval          String?   @db.VarChar(45)
  hr_comment                 String?   @db.VarChar(200)
  updated_by                 Int?
  updated_at                 DateTime? @db.DateTime(0)
  approved_by                Int?
  approved_at                DateTime? @db.DateTime(0)
  contract_assigned_at       DateTime? @db.Date
  contract_uploaded_at       DateTime? @db.Date
  contract_audited_at        DateTime? @db.Date
  contract_audited_by        Int?
  contract_url_status        String?   @db.VarChar(30)
  contract_url_reject_reason String?   @db.VarChar(200)
  user                       User      @relation(fields: [tsp_id], references: [tsp_id], onDelete: NoAction, onUpdate: NoAction)

  @@map("hris_contract_data")
}

model HrisContractDataBackup {
  id                         Int       @id @default(autoincrement())
  tsp_id                     Int
  contract_url               String?   @db.VarChar(1000)
  contract_no                Int
  contract_type              String?   @db.VarChar(100)
  contract_start_d           DateTime? @db.Date
  contract_end_d             DateTime? @db.Date
  hr_admin_approval          String?   @db.VarChar(45)
  hr_comment                 String?   @db.VarChar(200)
  updated_by                 Int?
  updated_at                 DateTime? @db.DateTime(0)
  approved_by                Int?
  approved_at                DateTime? @db.DateTime(0)
  contract_assigned_at       DateTime? @db.Date
  contract_uploaded_at       DateTime? @db.Date
  contract_audited_at        DateTime? @db.Date
  contract_audited_by        Int?
  contract_url_status        String?   @db.VarChar(30)
  contract_url_reject_reason String?   @db.VarChar(200)
  user                       User      @relation(fields: [tsp_id], references: [tsp_id], onDelete: NoAction, onUpdate: NoAction)

  @@map("hris_contract_data_backup")
}

model ApprovedEducationData {
  tspId            Int      @id @map("tsp_id")
  olState          String?  @map("ol_state") @db.VarChar(100)
  olSyllabus       String?  @map("ol_syllabus") @db.VarChar(100)
  olYear           Int?     @map("ol_year")
  olMaths          String?  @map("ol_maths") @db.VarChar(45)
  olEnglish        String?  @map("ol_english") @db.VarChar(45)
  olCertificateUrl String?  @map("ol_certificate_url") @db.VarChar(500)
  alSyllabus       String?  @map("al_syllabus") @db.VarChar(200)
  alYear           Int?     @map("al_year")
  alStream         String?  @map("al_stream") @db.VarChar(200)
  alCertificateUrl String?  @map("al_certificate_url") @db.VarChar(500)
  alSubject1       String?  @map("al_subject1") @db.VarChar(200)
  alSubject1Result String?  @map("al_subject1_result") @db.VarChar(20)
  alSubject2       String?  @map("al_subject2") @db.VarChar(200)
  alSubject2Result String?  @map("al_subject2_result") @db.VarChar(20)
  alSubject3       String?  @map("al_subject3") @db.VarChar(200)
  alSubject3Result String?  @map("al_subject3_result") @db.VarChar(20)
  alSubject4       String?  @map("al_subject4") @db.VarChar(200)
  alSubject4Result String?  @map("al_subject4_result") @db.VarChar(20)
  alSubject5       String?  @map("al_subject5") @db.VarChar(200)
  alSubject5Result String?  @map("al_subject5_result") @db.VarChar(20)
  alCheck          String?  @map("al_check") @db.VarChar(45)
  other            String?  @db.VarChar(200)
  approvedBy       Int?     @map("approved_by")
  approvedAt       DateTime @default(now()) @map("approved_at") @db.DateTime(0)
  updatedFlag      Int      @default(0) @map("updated_flag") @db.TinyInt
  user             User     @relation(fields: [tspId], references: [tsp_id], onDelete: NoAction, onUpdate: NoAction, map: "FK_1098")

  @@map("approved_education_data")
}

model ApprovedHealthData {
  tspId              Int      @id @map("tsp_id")
  hd1Heart           String?  @map("hd1_heart") @db.VarChar(10)
  hd1HeartState      String?  @map("hd1_heart_state") @db.VarChar(30)
  hd2Neck            String?  @map("hd2_neck") @db.VarChar(10)
  hd2NeckState       String?  @map("hd2_neck_state") @db.VarChar(30)
  hd3High            String?  @map("hd3_high") @db.VarChar(10)
  hd3HighState       String?  @map("hd3_high_state") @db.VarChar(30)
  hd4Arthritis       String?  @map("hd4_arthritis") @db.VarChar(10)
  hd4ArthritisState  String?  @map("hd4_arthritis_state") @db.VarChar(30)
  hd5Terminally      String?  @map("hd5_terminally") @db.VarChar(10)
  hd5TerminallyState String?  @map("hd5_terminally_state") @db.VarChar(30)
  hd6Unusual         String?  @map("hd6_unusual") @db.VarChar(10)
  hd6UnusualState    String?  @map("hd6_unusual_state") @db.VarChar(30)
  hd7Asthma          String?  @map("hd7_asthma") @db.VarChar(10)
  hd7AsthmaState     String?  @map("hd7_asthma_state") @db.VarChar(30)
  hd8Fainting        String?  @map("hd8_fainting") @db.VarChar(10)
  hd8FaintingState   String?  @map("hd8_fainting_state") @db.VarChar(30)
  hd9Depression      String?  @map("hd9_depression") @db.VarChar(10)
  hd9DepressionState String?  @map("hd9_depression_state") @db.VarChar(30)
  hd10Throat         String?  @map("hd10_throat") @db.VarChar(10)
  hd10ThroatState    String?  @map("hd10_throat_state") @db.VarChar(30)
  hd12Vision         String?  @map("hd12_vision") @db.VarChar(10)
  hd12VisionState    String?  @map("hd12_vision_state") @db.VarChar(30)
  hd11Other          String?  @map("hd11_other") @db.VarChar(10)
  hd11OtherExplain   String?  @map("hd11_other_explain") @db.VarChar(200)
  healthUrl_1        String?  @map("health_url_1") @db.VarChar(500)
  healthUrl_2        String?  @map("health_url_2") @db.VarChar(500)
  healthUrl_3        String?  @map("health_url_3") @db.VarChar(500)
  healthUrl_4        String?  @map("health_url_4") @db.VarChar(500)
  healthUrl_5        String?  @map("health_url_5") @db.VarChar(500)
  healthUrlCount     Int?     @map("health_url_count")
  approvedBy         Int?     @map("approved_by")
  approvedAt         DateTime @default(now()) @map("approved_at") @db.DateTime(0)
  updatedFlag        Int      @default(0) @map("updated_flag") @db.TinyInt
  user               User     @relation(fields: [tspId], references: [tsp_id], onDelete: NoAction, onUpdate: NoAction, map: "FK_936_clone")

  @@index([tspId], map: "fkIdx_937_clone")
  @@map("approved_health_data")
}

model ApprovedItData {
  tspId                   Int      @id @map("tsp_id")
  havePc                  String?  @map("have_pc") @db.VarChar(45)
  pcType                  String?  @map("pc_type") @db.VarChar(45)
  pcOwnership             String?  @map("pc_ownership") @db.VarChar(45)
  pcBrand                 String?  @map("pc_brand") @db.VarChar(45)
  pcBrandOther            String?  @map("pc_brand_other") @db.VarChar(150)
  pcModel                 String?  @map("pc_model") @db.VarChar(150)
  pcBitVersion            String?  @map("pc_bit_version") @db.VarChar(45)
  laptopSerial            String?  @map("laptop_serial") @db.VarChar(45)
  laptopBatteryAge        String?  @map("laptop_battery_age") @db.VarChar(45)
  laptopBatteryRuntime    String?  @map("laptop_battery_runtime") @db.VarChar(45)
  pcOs                    String?  @map("pc_os") @db.VarChar(45)
  pcOsOther               String?  @map("pc_os_other") @db.VarChar(150)
  pcProcessor             String?  @map("pc_processor") @db.VarChar(150)
  pcProcessorOther        String?  @map("pc_processor_other") @db.VarChar(150)
  pcRam                   String?  @map("pc_ram") @db.VarChar(45)
  hdType                  String?  @map("hd_type") @db.VarChar(45)
  hdCapacity              String?  @map("hd_capacity") @db.VarChar(45)
  pcBrowsers              String?  @map("pc_browsers") @db.VarChar(500)
  pcAntivirus             String?  @map("pc_antivirus") @db.VarChar(45)
  pcAntivirusOther        String?  @map("pc_antivirus_other") @db.VarChar(150)
  lastServiceDate         String?  @map("last_service_date") @db.VarChar(45)
  pcIPAddress             String?  @map("pc_ip_address") @db.VarChar(45)
  ramUrl                  String?  @map("ram_url") @db.VarChar(500)
  pcUrl                   String?  @map("pc_url") @db.VarChar(500)
  desktopUps              String?  @map("desktop_ups") @db.VarChar(45)
  desktopUpsUrl           String?  @map("desktop_ups_url") @db.VarChar(500)
  desktopUpsRuntime       String?  @map("desktop_ups_runtime") @db.VarChar(45)
  haveHeadset             String?  @map("have_headset") @db.VarChar(45)
  headsetUsb              String?  @map("headset_usb") @db.VarChar(45)
  headsetConnectivityType String?  @map("headset_connectivity_type") @db.VarChar(150)
  headsetMuteBtn          String?  @map("headset_mute_btn") @db.VarChar(45)
  headsetNoiseCancel      String?  @map("headset_noise_cancel") @db.VarChar(45)
  headsetSpecs            String?  @map("headset_specs") @db.VarChar(150)
  headsetUrl              String?  @map("headset_url") @db.VarChar(500)
  primaryConnectionType   String?  @map("primary_connection_type") @db.VarChar(45)
  primaryIsp              String?  @map("primary_isp") @db.VarChar(45)
  primaryIspOther         String?  @map("primary_isp_other") @db.VarChar(150)
  primaryConnectedCount   String?  @map("primary_connected_count") @db.VarChar(45)
  primaryDownloadSpeed    String?  @map("primary_download_speed") @db.VarChar(45)
  primaryUploadSpeed      String?  @map("primary_upload_speed") @db.VarChar(45)
  primaryPing             String?  @map("primary_ping") @db.VarChar(45)
  haveSecondaryConnection String?  @map("have_secondary_connection") @db.VarChar(45)
  secondaryConnectionType String?  @map("secondary_connection_type") @db.VarChar(45)
  secondaryIsp            String?  @map("secondary_isp") @db.VarChar(45)
  secondaryIspOther       String?  @map("secondary_isp_other") @db.VarChar(150)
  secondaryDownloadSpeed  String?  @map("secondary_download_speed") @db.VarChar(45)
  secondaryUploadSpeed    String?  @map("secondary_upload_speed") @db.VarChar(45)
  secondaryPing           String?  @map("secondary_ping") @db.VarChar(45)
  primarySpeedUrl         String?  @map("primary_speed_url") @db.VarChar(500)
  secondarySpeedUrl       String?  @map("secondary_speed_url") @db.VarChar(500)
  responsibleItCheck      String?  @map("responsible_it_check") @db.VarChar(45)
  approvedBy              Int?     @map("approved_by")
  approvedAt              DateTime @default(now()) @map("approved_at") @db.DateTime(0)
  updatedFlag             Int      @default(0) @map("updated_flag") @db.TinyInt
  user                    User     @relation(fields: [tspId], references: [tsp_id], onDelete: NoAction, onUpdate: NoAction, map: "FK_1243")

  @@index([tspId], map: "fkIdx_1244")
  @@map("approved_it_data")
}

model HrisMetaData {
  id        Int      @id @default(autoincrement()) @map("id")
  category  String   @default("") @map("category") @db.VarChar(100)
  createdAt DateTime @default(now()) @map("created_at") @db.DateTime(0)
  createdBy Int?     @map("created_by")
  updatedAt DateTime @default(now()) @map("updated_at") @db.DateTime(0)
  updatedBy Int?     @map("updated_by")

  HrisMetaDataSub HrisMetaDataSub[]

  @@map("hris_meta_data")
}

model HrisMetaDataSub {
  id             Int      @id @default(autoincrement()) @map("id")
  hrisMetaDataId Int      @map("hris_meta_data_id")
  subCategory    String   @default("") @map("sub_category") @db.VarChar(100)
  status         Int      @default(1) @map("status") @db.TinyInt
  createdAt      DateTime @default(now()) @map("created_at") @db.DateTime(0)
  createdBy      Int?     @map("created_by")
  updatedAt      DateTime @default(now()) @map("updated_at") @db.DateTime(0)
  updatedBy      Int?     @map("updated_by")

  hrisMetaData      HrisMetaData        @relation(fields: [hrisMetaDataId], references: [id])
  HrisMetaDataValue HrisMetaDataValue[]

  @@map("hris_meta_data_sub")
}

model HrisMetaDataValue {
  id                Int      @id @default(autoincrement()) @map("id")
  hrisMetaDataSubId Int      @map("hris_meta_data_sub_id")
  valueName         String   @default("") @map("value_name") @db.VarChar(100)
  value             String   @default("") @map("value") @db.VarChar(100)
  status            Int      @default(1) @map("status") @db.TinyInt
  createdAt         DateTime @default(now()) @map("created_at") @db.DateTime(0)
  createdBy         Int?     @map("created_by")
  updatedAt         DateTime @default(now()) @map("updated_at") @db.DateTime(0)
  updatedBy         Int?     @map("updated_by")

  HrisMetaDataSub HrisMetaDataSub @relation(fields: [hrisMetaDataSubId], references: [id])
  HrisItData      HrisItData[]

  @@map("hris_meta_data_value")
}

model ApprovedPersonalData {
  tspId                     Int       @id @map("tsp_id")
  fullName                  String?   @map("full_name") @db.VarChar(300)
  nameWithInitials          String?   @map("name_with_initials") @db.VarChar(200)
  firstName                 String?   @map("first_name") @db.VarChar(200)
  surname                   String?   @db.VarChar(200)
  gender                    String?   @db.VarChar(45)
  dob                       DateTime? @db.Date
  birthCertificateUrl       String?   @map("birth_certificate_url") @db.VarChar(500)
  religion                  String?   @db.VarChar(45)
  maritalState              String?   @map("marital_state") @db.VarChar(45)
  spouseName                String?   @map("spouse_name") @db.VarChar(200)
  spouseNic                 String?   @map("spouse_nic") @db.VarChar(20)
  spouseDob                 String?   @map("spouse_dob") @db.VarChar(20)
  marriageCertificate       String?   @map("marriage_certificate") @db.VarChar(500)
  haveChildren              String?   @map("have_children") @db.VarChar(45)
  nic                       String?   @db.VarChar(45)
  nicUrl                    String?   @map("nic_url") @db.VarChar(500)
  haveAffiliations          String?   @map("have_affiliations") @db.VarChar(45)
  shortName                 String?   @map("short_name") @db.VarChar(200)
  age                       Int?
  ppUrl                     String?   @map("pp_url") @db.VarChar(500)
  XfamilyAffiliations_pd_id Int?      @map("xfamily_affiliations_pd_id")
  nationality               String?   @db.VarChar(45)
  typeOfId                  String?   @map("type_of_id") @db.VarChar(45)
  passportCountry           String?   @map("passport_country") @db.VarChar(45)
  passportExpirationDate    DateTime? @map("passport_expiration_date") @db.Date
  haveRtwDocument           String?   @map("have_rtw_document") @db.VarChar(45)
  rtwDocumentUrl            String?   @map("rtw_document_url") @db.VarChar(500)
  haveRtwExpirationDate     String?   @map("have_rtw_expiration_date") @db.VarChar(45)
  rtwExpirationDate         DateTime? @map("rtw_expiration_date") @db.Date
  idLanguage                String?   @map("id_language") @db.VarChar(500)
  preferredName             String?   @map("preferred_name") @db.VarChar(100)
  includeFamilyInInsurance  String?   @map("include_family_in_insurance") @db.VarChar(100)
  whomIncludeInInsurance    String?   @map("whom_include_in_insurance") @db.VarChar(100)
  bio                       String?   @map("bio") @db.Text
  approvedBy                Int?      @map("approved_by")
  approvedAt                DateTime? @default(now()) @map("approved_at") @db.DateTime(0)
  updatedFlag               Int?      @default(0) @map("updated_flag") @db.TinyInt
  user                      User      @relation(fields: [tspId], references: [tsp_id], onDelete: NoAction, onUpdate: NoAction, map: "FK_770")

  @@index([tspId], map: "fkIdx_771")
  @@map("approved_personal_data")
}

model NTHRISJobData {
  id                    Int       @id @default(autoincrement())
  tspId                 Int       @map("tsp_id")
  jobProfile            String?   @map("job_profile") @db.VarChar(100)
  jobPosition           String?   @map("job_position") @db.VarChar(100)
  jobTitle              String?   @map("job_title") @db.VarChar(100)
  department            String?   @map("department") @db.VarChar(100)
  subDepartment         String?   @map("sub_department") @db.VarChar(100)
  team                  String?   @map("team") @db.VarChar(100)
  reportingManager      String?   @map("reporting_manager") @db.VarChar(100)
  employmentType        String?   @map("employment_type") @db.VarChar(100)
  payGrade              String?   @map("pay_grade") @db.VarChar(100)
  managementLevel       String?   @map("management_level") @db.VarChar(100)
  departmentLevel       String?   @map("department_level") @db.VarChar(100)
  bCardStatus           String?   @map("b_card_status") @db.VarChar(100)
  bCardUrl              String?   @map("b_card_url") @db.VarChar(255)
  basicSalary           String?   @map("basic_salary") @db.VarChar(100)
  applicableAllowances  String?   @map("applicable_allowances") @db.VarChar(100)
  location              String?   @map("location") @db.VarChar(100)
  shift                 String?   @map("shift") @db.VarChar(100)
  workHoursType         String?   @map("work_hours_type") @db.VarChar(100)
  sessionApplicability  String?   @map("session_applicability") @db.VarChar(100)
  bCardReceived         String?   @map("b_card_received") @db.VarChar(100)
  probationStatus       String?   @map("probation_status") @db.VarChar(100)
  epfNumber             String?   @map("epf_number") @db.VarChar(100)
  epfNumberRejectReason String?   @map("epf_number_reject_reason") @db.VarChar(100)
  epfNumberStatus       String?   @map("epf_number_status") @db.VarChar(100)
  employeeStatus        String?   @map("employee_status") @db.VarChar(100)
  employeeStatusReason  String?   @map("employee_status_reason") @db.VarChar(255)
  gsCertificate         String?   @map("gs_certificate") @db.VarChar(100)
  pcCertificate         String?   @map("pcc_certificate") @db.VarChar(100)
  dbsReport             String?   @map("dbs_report") @db.VarChar(100)
  fbicCertificate       String?   @map("fbic_certificate") @db.VarChar(100)
  updated_by            Int?
  updated_at            DateTime? @db.DateTime(0)
  approved_by           Int?
  approved_at           DateTime? @db.DateTime(0)
  user                  User      @relation(fields: [tspId], references: [tsp_id], onDelete: NoAction, onUpdate: NoAction)

  @@map("nthris_job_data")
}

model ApprovedJobData {
  tspId                Int       @id @map("tsp_id")
  jobProfile           String?   @map("job_profile") @db.VarChar(100)
  jobPosition          String?   @map("job_position") @db.VarChar(100)
  jobTitle             String?   @map("job_title") @db.VarChar(100)
  department           String?   @map("department") @db.VarChar(100)
  subDepartment        String?   @map("sub_department") @db.VarChar(100)
  team                 String?   @map("team") @db.VarChar(100)
  reportingManager     String?   @map("reporting_manager") @db.VarChar(100)
  epfNumber            String?   @map("epf_number") @db.VarChar(100)
  employmentType       String?   @map("employment_type") @db.VarChar(100)
  payGrade             String?   @map("pay_grade") @db.VarChar(100)
  managementLevel      String?   @map("management_level") @db.VarChar(100)
  departmentLevel      String?   @map("department_level") @db.VarChar(100)
  bCardStatus          String?   @map("b_card_status") @db.VarChar(100)
  bCardUrl             String?   @map("b_card_url") @db.VarChar(255)
  basicSalary          String?   @map("basic_salary") @db.VarChar(100)
  applicableAllowances String?   @map("applicable_allowances") @db.VarChar(100)
  location             String?   @map("location") @db.VarChar(100)
  shift                String?   @map("shift") @db.VarChar(100)
  workHoursType        String?   @map("work_hours_type") @db.VarChar(100)
  sessionApplicability String?   @map("session_applicability") @db.VarChar(100)
  bCardReceived        String?   @map("b_card_received") @db.VarChar(100)
  probationStatus      String?   @map("probation_status") @db.VarChar(100)
  employeeStatus       String?   @map("employee_status") @db.VarChar(100)
  employeeStatusReason String?   @map("employee_status_reason") @db.VarChar(255)
  gsCertificate        String?   @map("gs_certificate") @db.VarChar(100)
  pcCertificate        String?   @map("pcc_certificate") @db.VarChar(100)
  dbsReport            String?   @map("dbs_report") @db.VarChar(100)
  fbicCertificate      String?   @map("fbic_certificate") @db.VarChar(100)
  approvedBy           Int?      @map("approved_by")
  approvedAt           DateTime? @default(now()) @map("approved_at") @db.DateTime(0)
  user                 User?     @relation(fields: [tspId], references: [tsp_id], onDelete: NoAction, onUpdate: NoAction)

  @@map("approved_job_data")
}

model ApprovedQualificationsData {
  tspId            Int      @id @map("tsp_id")
  haveStartedHq    String?  @map("have_started_hq") @db.VarChar(45)
  hqCourseType     String?  @map("hq_course_type") @db.VarChar(100)
  hqFieldStudy     String?  @map("hq_field_study") @db.VarChar(100)
  hqHasCompleted   String?  @map("hq_has_completed") @db.VarChar(45)
  hqStartYear      Int?     @map("hq_start_year")
  hqCompletionYear Int?     @map("hq_completion_year")
  hqIsLocal        String?  @map("hq_is_local") @db.VarChar(100)
  hqMainInst       String?  @map("hq_main_inst") @db.VarChar(200)
  hqAffiInst       String?  @map("hq_affi_inst") @db.VarChar(200)
  hqDocUrl         String?  @map("hq_doc_url") @db.VarChar(500)
  approvedBy       Int?     @map("approved_by")
  approvedAt       DateTime @default(now()) @map("approved_at") @db.DateTime(0)
  updatedFlag      Int      @default(0) @map("updated_flag") @db.TinyInt
  user             User     @relation(fields: [tspId], references: [tsp_id], onDelete: NoAction, onUpdate: NoAction, map: "FK_919_clone")

  @@index([tspId], map: "fkIdx_920_clone")
  @@map("approved_qualifications_data")
}

model ApprovedRight2workData {
  tspId                  Int       @id @map("tsp_id")
  contractUrl            String?   @map("contract_url") @db.VarChar(500)
  gsIssuedDate           DateTime? @map("gs_issued_date") @db.Date
  gsUrl                  String?   @map("gs_url") @db.VarChar(500)
  pccIssuedDate          DateTime? @map("pcc_issued_date") @db.Date
  gsUploadedAt           DateTime? @map("gs_uploaded_at") @db.Date
  pccReferenceNo         String?   @map("pcc_reference_no") @db.VarChar(45)
  pccUrl                 String?   @map("pcc_url") @db.VarChar(500)
  pccUploadedAt          DateTime? @map("pcc_uploaded_at") @db.Date
  pccExpireDate          DateTime? @map("pcc_expire_date") @db.Date
  pccState               String?   @map("pcc_state") @db.VarChar(45)
  requireBackgroundCheck String?   @map("require_background_check") @db.VarChar(45)
  contractStartDate      String?   @map("contract_start_date") @db.VarChar(500)
  contractEndDate        String?   @map("contract_end_date") @db.VarChar(500)
  contractType           String?   @map("contract_type") @db.VarChar(500)
  approvedBy             Int?      @map("approved_by")
  approvedAt             DateTime  @default(now()) @map("approved_at") @db.DateTime(0)
  updatedFlag            Int       @default(0) @map("updated_flag") @db.TinyInt
  user                   User      @relation(fields: [tspId], references: [tsp_id], onDelete: NoAction, onUpdate: NoAction, map: "FK_1578")

  @@index([tspId], map: "fkIdx_1579")
  @@map("approved_right2work_data")
}

model ApprovedWorkExpData {
  tspId               Int       @id @map("tsp_id")
  havePreTsg          String?   @map("have_pre_tsg") @db.VarChar(45)
  preTsgType          String?   @map("pre_tsg_type") @db.VarChar(100)
  preTsgStart         DateTime? @map("pre_tsg_start") @db.Date
  preTsgEnd           DateTime? @map("pre_tsg_end") @db.Date
  preWorkExp          String?   @map("pre_work_exp") @db.VarChar(45)
  isCurrentlyEmployed String?   @map("is_currently_employed") @db.VarChar(45)
  currentEmpName      String?   @map("current_emp_name") @db.VarChar(200)
  currentEmpType      String?   @map("current_emp_type") @db.VarChar(100)
  currentEmpTitle     String?   @map("current_emp_title") @db.VarChar(200)
  currentEmpStart     DateTime? @map("current_emp_start") @db.Date
  currentEmpTeaching  String?   @map("current_emp_teaching") @db.VarChar(45)
  currentEmpDocUrl    String?   @map("current_emp_doc_url") @db.VarChar(500)
  acknowledgmentCheck String?   @map("acknowledgment_check") @db.VarChar(45)
  approvedBy          Int?      @map("approved_by")
  approvedAt          DateTime  @default(now()) @map("approved_at") @db.DateTime(0)
  tutoringPartner     String?   @map("tutoring_partner") @db.VarChar(45)
  updatedFlag         Int       @default(0) @map("updated_flag") @db.TinyInt
  user                User      @relation(fields: [tspId], references: [tsp_id], onDelete: NoAction, onUpdate: NoAction, map: "FK_1195")

  @@index([tspId], map: "fkIdx_1196")
  @@map("approved_work_exp_data")
}

model ApprovedXotherQualiData {
  localId                Int              @unique @map("local_id")
  otherQualifactionId    Int?             @unique @map("other_quali_id")
  courseType             String?          @map("course_type") @db.VarChar(100)
  fieldStudy             String?          @map("field_study") @db.VarChar(100)
  hasCompleted           String?          @map("has_completed") @db.VarChar(45)
  startYear              DateTime?        @map("start_year") @db.Date
  completionYear         DateTime?        @map("completion_year") @db.Date
  isLocal                String?          @map("is_local") @db.VarChar(45)
  mainInst               String?          @map("main_inst") @db.VarChar(200)
  affiInst               String?          @map("affi_inst") @db.VarChar(200)
  docUrl                 String?          @map("doc_url") @db.VarChar(500)
  areaOfStudy            String?          @map("area_of_study") @db.VarChar(45)
  tspId                  Int?             @map("tsp_id")
  isHighestQualification Boolean?         @default(false) @map("is_highest_qualification")
  otherQualificationData XotherQualiData? @relation(fields: [otherQualifactionId], references: [id])
  user                   User?            @relation(fields: [tspId], references: [tsp_id], onDelete: NoAction, onUpdate: NoAction)

  @@map("approved_xother_quali_data")
}

model ApprovedXotherWorkExpData {
  localId           Int                @unique @map("local_id")
  otherWorkExpId    Int?               @unique @map("other_work_exp_id")
  employerName      String?            @map("employer_name") @db.VarChar(100)
  employmentType    String?            @map("employment_type") @db.VarChar(100)
  jobTitle          String?            @map("job_title") @db.VarChar(100)
  currentlyEmployed String?            @map("currently_employed") @db.VarChar(20)
  startDate         DateTime?          @map("start_date") @db.Date
  endDate           DateTime?          @map("end_date") @db.Date
  teachingExp       String?            @map("teaching_exp") @db.VarChar(20)
  docUrl            String?            @map("doc_url") @db.VarChar(200)
  tspId             Int?               @map("tsp_id")
  otherWorkExpData  XotherWorkExpData? @relation(fields: [otherWorkExpId], references: [id])
  user              User?              @relation(fields: [tspId], references: [tsp_id], onDelete: NoAction, onUpdate: NoAction)

  @@map("approved_xother_work_exp_data")
}

model ApprovedXotherEducationData {
  localId                Int       @unique @map("local_id")
  otherEducationId       Int?      @unique @map("other_work_exp_id")
  alSubject              String?   @map("al_subject1") @db.VarChar(200)
  alSubject1Status       String?   @map("al_subject1_status") @db.VarChar(45)
  alSubject1RejectReason String?   @map("al_subject1_reject_reason") @db.VarChar(200)
  alSubject1Result       String?   @map("al_subject1_result") @db.VarChar(20)
  updatedBy              Int?      @map("updated_by")
  updatedAt              DateTime? @default(now()) @map("updated_at") @db.DateTime(0)

  @@map("approved_xother_education_data")
}

model Banks {
  id              Int      @id @default(autoincrement())
  bank_name       String?  @db.VarChar(200)
  bank_swift_code String?  @db.VarChar(45)
  bank_code       String?  @db.VarChar(45)
  branch_code     String?  @db.VarChar(45)
  updated_by      String?  @db.VarChar(45)
  updated_at      DateTime @default(now()) @map("updated_at") @db.DateTime(0)

  @@map("banks")
}

model HrisAccess {
  record_id   Int      @id @default(autoincrement())
  tsp_id      Int
  access      Int
  access_type String?  @db.VarChar(45)
  module      String?  @db.VarChar(45)
  created_by  Int?
  updated_by  Int?
  created_at  DateTime @default(now()) @db.DateTime(0)
  updated_at  DateTime @default(now()) @db.DateTime(0)
  user        User     @relation(fields: [tsp_id], references: [tsp_id], onDelete: NoAction, onUpdate: NoAction, map: "FK_940")

  @@unique([tsp_id, access, access_type, module])
  @@index([tsp_id], map: "FK_942")
  @@map("hris_access")
}

model HrisAssignedAuditor {
  id        Int      @id @default(autoincrement())
  tspId     Int?     @map("tsp_id")
  auditorId Int?     @map("auditor_id")
  createdBy Int      @map("created_by")
  createdAt DateTime @default(now()) @map("created_at") @db.DateTime(0)
  user      User?    @relation(fields: [tspId], references: [tsp_id], onDelete: NoAction, onUpdate: NoAction)

  @@map("hris_assigned_auditor")
}

model HrisAuditedData {
  id                Int      @id @default(autoincrement())
  tspId             Int      @map("tsp_id")
  tutorStatus       String?  @map("tutor_status") @db.VarChar(45)
  eligibilityStatus String?  @map("eligibility_status") @db.VarChar(45)
  createdBy         Int      @map("created_by")
  createdAt         DateTime @default(now()) @map("created_at") @db.DateTime(0)
  user              User     @relation(fields: [tspId], references: [tsp_id], onDelete: NoAction, onUpdate: NoAction)

  @@map("hris_audited_data")
}

model HrisBankData {
  id                       Int       @id @default(autoincrement())
  tspId                    Int       @map("tsp_id")
  bankName                 String?   @map("bank_name") @db.VarChar(200)
  bankNameStatus           String?   @map("bank_name_status") @db.VarChar(45)
  bankNameRejectReason     String?   @map("bank_name_reject_reason") @db.VarChar(200)
  bBranch                  String?   @map("b_branch") @db.VarChar(200)
  bBranchStatus            String?   @map("b_branch_status") @db.VarChar(45)
  bBranchRejectReason      String?   @map("b_branch_reject_reason") @db.VarChar(200)
  bBranchCode              String?   @map("b_branch_code") @db.VarChar(45)
  bAccountNo               String?   @map("b_account_no") @db.VarChar(45)
  bAccountNoStatus         String?   @map("b_account_no_status") @db.VarChar(45)
  bAccountNoRejectReason   String?   @map("b_account_no_reject_reason") @db.VarChar(200)
  bAccountName             String?   @map("b_account_name") @db.VarChar(200)
  bAccountNameStatus       String?   @map("b_account_name_status") @db.VarChar(45)
  bAccountNameRejectReason String?   @map("b_account_name_reject_reason") @db.VarChar(200)
  bSwift                   String?   @map("b_swift") @db.VarChar(45)
  bPassbookUrl             String?   @map("b_passbook_url") @db.VarChar(500)
  bPassbookUrlStatus       String?   @map("b_passbook_url_status") @db.VarChar(45)
  bPassbookUrlRejectReason String?   @map("b_passbook_url_reject_reason") @db.VarChar(200)
  ifscCode                 String?   @map("ifsc_code") @db.VarChar(200)
  ibanNumber               String?   @map("iban_number") @db.VarChar(200)
  bankStatus               String?   @map("bank_status") @db.VarChar(100)
  recordApproved           String?   @map("record_approved") @db.VarChar(45)
  updatedBy                Int?      @map("updated_by")
  updatedAt                DateTime? @map("updated_at") @db.DateTime(0)
  auditedBy                Int?      @map("audited_by")
  auditedAt                DateTime? @map("audited_at") @db.DateTime(0)
  user                     User      @relation(fields: [tspId], references: [tsp_id], onDelete: NoAction, onUpdate: NoAction, map: "FK_932")

  @@index([tspId], map: "fkIdx_933")
  @@map("hris_bank_data")
}

model HrisContactData {
  id                             Int       @id @default(autoincrement())
  tspId                          Int       @map("tsp_id")
  personalEmail                  String?   @map("personal_email") @db.VarChar(100)
  workEmail                      String?   @map("work_email") @db.VarChar(100)
  workEmailStatus                String?   @map("work_email_status") @db.VarChar(45)
  workEmailRejectReason          String?   @map("work_email_reject_reason") @db.VarChar(200)
  mobileNumber                   String?   @map("mobile_number") @db.VarChar(45)
  mobileNumberStatus             String?   @map("mobile_number_status") @db.VarChar(45)
  mobileNumberRejectReason       String?   @map("mobile_number_reject_reason") @db.VarChar(200)
  mobileNumberVerified           Int       @default(0) @map("mobile_number_verified") @db.TinyInt
  landlineNumber                 String?   @map("landline_number") @db.VarChar(45)
  landlineNumberStatus           String?   @map("landline_number_status") @db.VarChar(45)
  landlineNumberRejectReason     String?   @map("landline_number_reject_reason") @db.VarChar(200)
  residingAddressL1              String?   @map("residing_address_l1") @db.VarChar(200)
  residingAddressL1Status        String?   @map("residing_address_l1_status") @db.VarChar(45)
  residingAddressL1RejectReason  String?   @map("residing_address_l1_reject_reason") @db.VarChar(200)
  residingAddressL2              String?   @map("residing_address_l2") @db.VarChar(200)
  residingAddressL2Status        String?   @map("residing_address_l2_status") @db.VarChar(45)
  residingAddressL2RejectReason  String?   @map("residing_address_l2_reject_reason") @db.VarChar(200)
  residingCity                   String?   @map("residing_city") @db.VarChar(100)
  residingCityStatus             String?   @map("residing_city_status") @db.VarChar(45)
  residingCityRejectReason       String?   @map("residing_city_reject_reason") @db.VarChar(200)
  residingDistrict               String?   @map("residing_district") @db.VarChar(100)
  residingDistrictStatus         String?   @map("residing_district_status") @db.VarChar(45)
  residingDistrictRejectReason   String?   @map("residing_district_reject_reason") @db.VarChar(200)
  residingProvince               String?   @map("residing_province") @db.VarChar(100)
  residingProvinceStatus         String?   @map("residing_province_status") @db.VarChar(45)
  residingProvinceRejectReason   String?   @map("residing_province_reject_reason") @db.VarChar(200)
  residingCountry                String?   @map("residing_country") @db.VarChar(100)
  residingCountryStatus          String?   @map("residing_country_status") @db.VarChar(45)
  residingCountryRejectReason    String?   @map("residing_country_reject_reason") @db.VarChar(200)
  sameResidingPermanent          String?   @map("same_residing_permanent") @db.VarChar(45)
  permanentAddressL1             String?   @map("permanent_address_l1") @db.VarChar(200)
  permanentAddressL1Status       String?   @map("permanent_address_l1_status") @db.VarChar(45)
  permanentAddressL1RejectReason String?   @map("permanent_address_l1_reject_reason") @db.VarChar(200)
  permanentAddressL2             String?   @map("permanent_address_l2") @db.VarChar(200)
  permanentAddressL2Status       String?   @map("permanent_address_l2_status") @db.VarChar(45)
  permanentAddressL2RejectReason String?   @map("permanent_address_l2_reject_reason") @db.VarChar(200)
  permanentCity                  String?   @map("permanent_city") @db.VarChar(100)
  permanentCityStatus            String?   @map("permanent_city_status") @db.VarChar(45)
  permanentCityRejectReason      String?   @map("permanent_city_reject_reason") @db.VarChar(200)
  permanentDistrict              String?   @map("permanent_district") @db.VarChar(100)
  permanentDistrictStatus        String?   @map("permanent_district_status") @db.VarChar(45)
  permanentDistrictRejectReason  String?   @map("permanent_district_reject_reason") @db.VarChar(200)
  permanentProvince              String?   @map("permanent_province") @db.VarChar(100)
  permanentProvinceStatus        String?   @map("permanent_province_status") @db.VarChar(45)
  permanentProvinceRejectReason  String?   @map("permanent_province_reject_reason") @db.VarChar(200)
  permanentCountry               String?   @map("permanent_country") @db.VarChar(45)
  permanentCountryStatus         String?   @map("permanent_country_status") @db.VarChar(45)
  permanentCountryRejectReason   String?   @map("permanent_country_reject_reason") @db.VarChar(200)
  emgContactName                 String?   @map("emg_contact_name") @db.VarChar(100)
  emgRelationship                String?   @map("emg_relationship") @db.VarChar(100)
  emgContactNum                  String?   @map("emg_contact_num") @db.VarChar(45)
  emgContactNumStatus            String?   @map("emg_contact_num_status") @db.VarChar(45)
  emgContactNumRejectReason      String?   @map("emg_contact_num_reject_reason") @db.VarChar(200)
  residingPin                    String?   @map("residing_pin") @db.VarChar(45)
  residingPinStatus              String?   @map("residing_pin_status") @db.VarChar(45)
  residingPinRejectReason        String?   @map("residing_pin_reject_reason") @db.VarChar(200)
  permanentPin                   String?   @map("permanent_pin") @db.VarChar(45)
  permanentPinStatus             String?   @map("permanent_pin_status") @db.VarChar(45)
  permanentPinRejectReason       String?   @map("permanent_pin_reject_reason") @db.VarChar(200)
  updatedBy                      Int?      @map("updated_by")
  updatedAt                      DateTime? @map("updated_at") @db.DateTime(0)
  auditedBy                      Int?      @map("audited_by")
  auditedAt                      DateTime? @map("audited_at") @db.DateTime(0)
  recordApproved                 String?   @map("record_approved") @db.VarChar(45)
  user                           User      @relation(fields: [tspId], references: [tsp_id], onDelete: NoAction, onUpdate: NoAction, map: "FK_464")

  @@index([tspId], map: "fkIdx_465")
  @@map("hris_contact_data")
}

model HrisEducationData {
  id                           Int                   @id @default(autoincrement())
  tspId                        Int                   @map("tsp_id")
  olState                      String?               @map("ol_state") @db.VarChar(100)
  olSyllabus                   String?               @map("ol_syllabus") @db.VarChar(100)
  olSyllabusStatus             String?               @map("ol_syllabus_status") @db.VarChar(45)
  olSyllabusRejectReason       String?               @map("ol_syllabus_reject_reason") @db.VarChar(200)
  olYear                       Int?                  @map("ol_year")
  olYearStatus                 String?               @map("ol_year_status") @db.VarChar(200)
  olYearRejectReason           String?               @map("ol_year_reject_reason") @db.VarChar(200)
  olMaths                      String?               @map("ol_maths") @db.VarChar(45)
  olMathsStatus                String?               @map("ol_maths_status") @db.VarChar(45)
  olMathsRejectReason          String?               @map("ol_maths_reject_reason") @db.VarChar(200)
  olEnglish                    String?               @map("ol_english") @db.VarChar(45)
  olEnglishStatus              String?               @map("ol_english_status") @db.VarChar(45)
  olEnglishRejectReason        String?               @map("ol_english_reject_reason") @db.VarChar(200)
  olCertificateUrl             String?               @map("ol_certificate_url") @db.VarChar(500)
  olCertificateUrlStatus       String?               @map("ol_certificate_url_status") @db.VarChar(45)
  olCertificateUrlRejectReason String?               @map("ol_certificate_url_reject_reason") @db.VarChar(200)
  alSyllabus                   String?               @map("al_syllabus") @db.VarChar(200)
  alSyllabusStatus             String?               @map("al_syllabus_status") @db.VarChar(45)
  alSyllabusRejectReason       String?               @map("al_syllabus_reject_reason") @db.VarChar(200)
  alYear                       Int?                  @map("al_year")
  alYearStatus                 String?               @map("al_year_status") @db.VarChar(45)
  alYearRejectReason           String?               @map("al_year_reject_reason") @db.VarChar(200)
  alStream                     String?               @map("al_stream") @db.VarChar(200)
  alStreamStatus               String?               @map("al_stream_status") @db.VarChar(45)
  alStreamRejectReason         String?               @map("al_stream_reject_reason") @db.VarChar(200)
  alCertificateUrl             String?               @map("al_certificate_url") @db.VarChar(500)
  alCertificateUrlStatus       String?               @map("al_certificate_url_status") @db.VarChar(45)
  alCertificateUrlRejectReason String?               @map("al_certificate_url_reject_reason") @db.VarChar(200)
  alSubject1                   String?               @map("al_subject1") @db.VarChar(200)
  alSubject1Status             String?               @map("al_subject1_status") @db.VarChar(45)
  alSubject1RejectReason       String?               @map("al_subject1_reject_reason") @db.VarChar(200)
  alSubject1Result             String?               @map("al_subject1_result") @db.VarChar(20)
  alSubject2                   String?               @map("al_subject2") @db.VarChar(200)
  alSubject2Status             String?               @map("al_subject2_status") @db.VarChar(45)
  alSubject2RejectReason       String?               @map("al_subject2_reject_reason") @db.VarChar(200)
  alSubject2Result             String?               @map("al_subject2_result") @db.VarChar(20)
  alSubject3                   String?               @map("al_subject3") @db.VarChar(200)
  alSubject3Status             String?               @map("al_subject3_status") @db.VarChar(45)
  alSubject3RejectReason       String?               @map("al_subject3_reject_reason") @db.VarChar(300)
  alSubject3Result             String?               @map("al_subject3_result") @db.VarChar(20)
  alSubject4                   String?               @map("al_subject4") @db.VarChar(200)
  alSubject4Status             String?               @map("al_subject4_status") @db.VarChar(45)
  alSubject4RejectReason       String?               @map("al_subject4_reject_reason") @db.VarChar(200)
  alSubject4Result             String?               @map("al_subject4_result") @db.VarChar(20)
  alSubject5                   String?               @map("al_subject5") @db.VarChar(200)
  alSubject5Status             String?               @map("al_subject5_status") @db.VarChar(45)
  alSubject5RejectReason       String?               @map("al_subject5_reject_reason") @db.VarChar(200)
  alSubject5Result             String?               @map("al_subject5_result") @db.VarChar(20)
  alCheck                      String?               @map("al_check") @db.VarChar(45)
  updatedBy                    Int?                  @map("updated_by")
  updatedAt                    DateTime?             @map("updated_at") @db.DateTime(0)
  auditedBy                    Int?                  @map("audited_by")
  auditedAt                    DateTime?             @map("audited_at") @db.DateTime(0)
  recordApproved               String?               @map("record_approved") @db.VarChar(45)
  other                        String?               @db.VarChar(200)
  user                         User?                 @relation(fields: [tspId], references: [tsp_id], onDelete: NoAction, onUpdate: NoAction, map: "FK_529")
  xother_education_data        XotherEducationData[]

  @@map("hris_education_data")
}

model HrisSupportDocuments {
  id                     Int       @id @default(autoincrement())
  tspId                  Int       @map("tsp_id")
  document01Type         String?   @map("document01_type") @db.VarChar(45)
  document01Comment      String?   @map("document01_comment") @db.VarChar(200)
  document01Url          String?   @map("document01_url") @db.Text
  document01Status       String?   @map("document01_status") @db.VarChar(45)
  document01RejectReason String?   @map("document01_reject_reason") @db.VarChar(200)
  document02Type         String?   @map("document02_type") @db.VarChar(45)
  document02Comment      String?   @map("document02_comment") @db.VarChar(200)
  document02Url          String?   @map("document02_url") @db.Text
  document02Status       String?   @map("document02_status") @db.VarChar(45)
  document02RejectReason String?   @map("document02_reject_reason") @db.VarChar(200)
  document03Type         String?   @map("document03_type") @db.VarChar(45)
  document03Comment      String?   @map("document03_comment") @db.VarChar(200)
  document03Url          String?   @map("document03_url") @db.Text
  document03Status       String?   @map("document03_status") @db.VarChar(45)
  document03RejectReason String?   @map("document03_reject_reason") @db.VarChar(200)
  document04Type         String?   @map("document04_type") @db.VarChar(45)
  document04Comment      String?   @map("document04_comment") @db.VarChar(200)
  document04Url          String?   @map("document04_url") @db.Text
  document04Status       String?   @map("document04_status") @db.VarChar(45)
  document04RejectReason String?   @map("document04_reject_reason") @db.VarChar(200)
  document05Type         String?   @map("document05_type") @db.VarChar(45)
  document05Comment      String?   @map("document05_comment") @db.VarChar(200)
  document05Url          String?   @map("document05_url") @db.Text
  document05Status       String?   @map("document05_status") @db.VarChar(45)
  document05RejectReason String?   @map("document05_reject_reason") @db.VarChar(200)
  document06Type         String?   @map("document06_type") @db.VarChar(45)
  document06Comment      String?   @map("document06_comment") @db.VarChar(200)
  document06Url          String?   @map("document06_url") @db.Text
  document06Status       String?   @map("document06_status") @db.VarChar(45)
  document06RejectReason String?   @map("document06_reject_reason") @db.VarChar(200)
  document07Type         String?   @map("document07_type") @db.VarChar(45)
  document07Comment      String?   @map("document07_comment") @db.VarChar(200)
  document07Url          String?   @map("document07_url") @db.Text
  document07Status       String?   @map("document07_status") @db.VarChar(45)
  document07RejectReason String?   @map("document07_reject_reason") @db.VarChar(200)
  document08Type         String?   @map("document08_type") @db.VarChar(45)
  document08Comment      String?   @map("document08_comment") @db.VarChar(200)
  document08Url          String?   @map("document08_url") @db.Text
  document08Status       String?   @map("document08_status") @db.VarChar(45)
  document08RejectReason String?   @map("document08_reject_reason") @db.VarChar(200)
  document09Type         String?   @map("document09_type") @db.VarChar(45)
  document09Comment      String?   @map("document09_comment") @db.VarChar(200)
  document09Url          String?   @map("document09_url") @db.Text
  document09Status       String?   @map("document09_status") @db.VarChar(45)
  document09RejectReason String?   @map("document09_reject_reason") @db.VarChar(200)
  document10Type         String?   @map("document10_type") @db.VarChar(45)
  document10Comment      String?   @map("document10_comment") @db.VarChar(200)
  document10Url          String?   @map("document10_url") @db.Text
  document10Status       String?   @map("document10_status") @db.VarChar(45)
  document10RejectReason String?   @map("document10_reject_reason") @db.VarChar(200)
  document11Type         String?   @map("document11_type") @db.VarChar(45)
  document11Comment      String?   @map("document11_comment") @db.VarChar(200)
  document11Url          String?   @map("document11_url") @db.Text
  document11Status       String?   @map("document11_status") @db.VarChar(45)
  document11RejectReason String?   @map("document11_reject_reason") @db.VarChar(200)
  document12Type         String?   @map("document12_type") @db.VarChar(45)
  document12Comment      String?   @map("document12_comment") @db.VarChar(200)
  document12Url          String?   @map("document12_url") @db.Text
  document12Status       String?   @map("document12_status") @db.VarChar(45)
  document12RejectReason String?   @map("document12_reject_reason") @db.VarChar(200)
  document13Type         String?   @map("document13_type") @db.VarChar(45)
  document13Comment      String?   @map("document13_comment") @db.VarChar(200)
  document13Url          String?   @map("document13_url") @db.Text
  document13Status       String?   @map("document13_status") @db.VarChar(45)
  document13RejectReason String?   @map("document13_reject_reason") @db.VarChar(200)
  document14Type         String?   @map("document14_type") @db.VarChar(45)
  document14Comment      String?   @map("document14_comment") @db.VarChar(200)
  document14Url          String?   @map("document14_url") @db.Text
  document14Status       String?   @map("document14_status") @db.VarChar(45)
  document14RejectReason String?   @map("document14_reject_reason") @db.VarChar(200)
  document15Type         String?   @map("document15_type") @db.VarChar(45)
  document15Comment      String?   @map("document15_comment") @db.VarChar(200)
  document15Url          String?   @map("document15_url") @db.Text
  document15Status       String?   @map("document15_status") @db.VarChar(45)
  document15RejectReason String?   @map("document15_reject_reason") @db.VarChar(200)
  document16Type         String?   @map("document16_type") @db.VarChar(45)
  document16Comment      String?   @map("document16_comment") @db.VarChar(200)
  document16Url          String?   @map("document16_url") @db.Text
  document16Status       String?   @map("document16_status") @db.VarChar(45)
  document16RejectReason String?   @map("document16_reject_reason") @db.VarChar(200)
  document17Type         String?   @map("document17_type") @db.VarChar(45)
  document17Comment      String?   @map("document17_comment") @db.VarChar(200)
  document17Url          String?   @map("document17_url") @db.Text
  document17Status       String?   @map("document17_status") @db.VarChar(45)
  document17RejectReason String?   @map("document17_reject_reason") @db.VarChar(200)
  document18Type         String?   @map("document18_type") @db.VarChar(45)
  document18Comment      String?   @map("document18_comment") @db.VarChar(200)
  document18Url          String?   @map("document18_url") @db.Text
  document18Status       String?   @map("document18_status") @db.VarChar(45)
  document18RejectReason String?   @map("document18_reject_reason") @db.VarChar(200)
  document19Type         String?   @map("document19_type") @db.VarChar(45)
  document19Comment      String?   @map("document19_comment") @db.VarChar(200)
  document19Url          String?   @map("document19_url") @db.Text
  document19Status       String?   @map("document19_status") @db.VarChar(45)
  document19RejectReason String?   @map("document19_reject_reason") @db.VarChar(200)
  document20Type         String?   @map("document20_type") @db.VarChar(45)
  document20Comment      String?   @map("document20_comment") @db.VarChar(200)
  document20Url          String?   @map("document20_url") @db.Text
  document20Status       String?   @map("document20_status") @db.VarChar(45)
  document20RejectReason String?   @map("document20_reject_reason") @db.VarChar(200)
  updatedBy              Int?      @map("updated_by")
  updatedAt              DateTime? @map("updated_at") @db.DateTime(0)
  auditedBy              Int?      @map("audited_by")
  auditedAt              DateTime? @map("audited_at") @db.DateTime(0)
  user                   User      @relation(fields: [tspId], references: [tsp_id], onDelete: NoAction, onUpdate: NoAction)

  @@map("hris_support_documents")
}

model ApprovedXotherAdminDocs {
  id              Int      @id @default(autoincrement())
  tspId           Int      @map("tsp_id")
  documentType    String?  @map("document_type") @db.VarChar(45)
  documentName    String?  @map("document_name") @db.VarChar(100)
  documentComment String?  @map("document_comment") @db.VarChar(200)
  documentUrl     String?  @map("document_url") @db.VarChar(500)
  documentEnable  Int      @default(1) @map("document_enable") @db.TinyInt
  updatedBy       Int?     @map("updated_by")
  updatedAt       DateTime @default(now()) @map("updated_at") @db.DateTime(0)
  user            User     @relation(fields: [tspId], references: [tsp_id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([tspId, documentUrl])
  @@map("approved_xother_admin_docs")
}

model HrisTutorResourceDocs {
  id              Int      @id @default(autoincrement())
  documentType    String?  @map("document_type") @db.VarChar(45)
  documentName    String?  @map("document_name") @db.VarChar(100)
  documentComment String?  @map("document_comment") @db.VarChar(200)
  documentUrl     String?  @map("document_url") @db.VarChar(500)
  documentEnable  Int      @default(1) @map("document_enable") @db.TinyInt
  documentGroup   String?  @map("document_group") @db.VarChar(45)
  updatedBy       Int?     @map("updated_by")
  updatedAt       DateTime @default(now()) @map("updated_at") @db.DateTime(0)

  @@map("hris_tutor_resource_docs")
}

model ApprovedSupportDocuments {
  tspId             Int      @id @map("tsp_id")
  document01Type    String?  @map("document01_type") @db.VarChar(45)
  document01Comment String?  @map("document01_comment") @db.VarChar(200)
  document01Url     String?  @map("document01_url") @db.Text
  document02Type    String?  @map("document02_type") @db.VarChar(45)
  document02Comment String?  @map("document02_comment") @db.VarChar(200)
  document02Url     String?  @map("document02_url") @db.Text
  document03Type    String?  @map("document03_type") @db.VarChar(45)
  document03Comment String?  @map("document03_comment") @db.VarChar(200)
  document03Url     String?  @map("document03_url") @db.Text
  document04Type    String?  @map("document04_type") @db.VarChar(45)
  document04Comment String?  @map("document04_comment") @db.VarChar(200)
  document04Url     String?  @map("document04_url") @db.Text
  document05Type    String?  @map("document05_type") @db.VarChar(45)
  document05Comment String?  @map("document05_comment") @db.VarChar(200)
  document05Url     String?  @map("document05_url") @db.Text
  document06Type    String?  @map("document06_type") @db.VarChar(45)
  document06Comment String?  @map("document06_comment") @db.VarChar(200)
  document06Url     String?  @map("document06_url") @db.Text
  document07Type    String?  @map("document07_type") @db.VarChar(45)
  document07Comment String?  @map("document07_comment") @db.VarChar(200)
  document07Url     String?  @map("document07_url") @db.Text
  document08Type    String?  @map("document08_type") @db.VarChar(45)
  document08Comment String?  @map("document08_comment") @db.VarChar(200)
  document08Url     String?  @map("document08_url") @db.Text
  document09Type    String?  @map("document09_type") @db.VarChar(45)
  document09Comment String?  @map("document09_comment") @db.VarChar(200)
  document09Url     String?  @map("document09_url") @db.Text
  document10Type    String?  @map("document10_type") @db.VarChar(45)
  document10Comment String?  @map("document10_comment") @db.VarChar(200)
  document10Url     String?  @map("document10_url") @db.Text
  document11Type    String?  @map("document11_type") @db.VarChar(45)
  document11Comment String?  @map("document11_comment") @db.VarChar(200)
  document11Url     String?  @map("document11_url") @db.Text
  document12Type    String?  @map("document12_type") @db.VarChar(45)
  document12Comment String?  @map("document12_comment") @db.VarChar(200)
  document12Url     String?  @map("document12_url") @db.Text
  document13Type    String?  @map("document13_type") @db.VarChar(45)
  document13Comment String?  @map("document13_comment") @db.VarChar(200)
  document13Url     String?  @map("document13_url") @db.Text
  document14Type    String?  @map("document14_type") @db.VarChar(45)
  document14Comment String?  @map("document14_comment") @db.VarChar(200)
  document14Url     String?  @map("document14_url") @db.Text
  document15Type    String?  @map("document15_type") @db.VarChar(45)
  document15Comment String?  @map("document15_comment") @db.VarChar(200)
  document15Url     String?  @map("document15_url") @db.Text
  document16Type    String?  @map("document16_type") @db.VarChar(45)
  document16Comment String?  @map("document16_comment") @db.VarChar(200)
  document16Url     String?  @map("document16_url") @db.Text
  document17Type    String?  @map("document17_type") @db.VarChar(45)
  document17Comment String?  @map("document17_comment") @db.VarChar(200)
  document17Url     String?  @map("document17_url") @db.Text
  document18Type    String?  @map("document18_type") @db.VarChar(45)
  document18Comment String?  @map("document18_comment") @db.VarChar(200)
  document18Url     String?  @map("document18_url") @db.Text
  document19Type    String?  @map("document19_type") @db.VarChar(45)
  document19Comment String?  @map("document19_comment") @db.VarChar(200)
  document19Url     String?  @map("document19_url") @db.Text
  document20Type    String?  @map("document20_type") @db.VarChar(45)
  document20Comment String?  @map("document20_comment") @db.VarChar(200)
  document20Url     String?  @map("document20_url") @db.Text
  approvedBy        Int?     @map("approved_by")
  approvedAt        DateTime @default(now()) @map("approved_at") @db.DateTime(0)
  updatedFlag       Int      @default(0) @map("updated_flag") @db.TinyInt
  user              User     @relation(fields: [tspId], references: [tsp_id], onDelete: NoAction, onUpdate: NoAction)

  @@map("approved_support_documents")
}

model HrisHealthData {
  id                      Int       @id @default(autoincrement())
  tspId                   Int       @map("tsp_id")
  hd1Heart                String?   @map("hd1_heart") @db.VarChar(10)
  hd1HeartState           String?   @map("hd1_heart_state") @db.VarChar(30)
  hd2Neck                 String?   @map("hd2_neck") @db.VarChar(10)
  hd2NeckState            String?   @map("hd2_neck_state") @db.VarChar(30)
  hd3High                 String?   @map("hd3_high") @db.VarChar(10)
  hd3HighState            String?   @map("hd3_high_state") @db.VarChar(30)
  hd4Arthritis            String?   @map("hd4_arthritis") @db.VarChar(10)
  hd4ArthritisState       String?   @map("hd4_arthritis_state") @db.VarChar(30)
  hd5Terminally           String?   @map("hd5_terminally") @db.VarChar(10)
  hd5TerminallyState      String?   @map("hd5_terminally_state") @db.VarChar(30)
  hd6Unusual              String?   @map("hd6_unusual") @db.VarChar(10)
  hd6UnusualState         String?   @map("hd6_unusual_state") @db.VarChar(30)
  hd7Asthma               String?   @map("hd7_asthma") @db.VarChar(10)
  hd7AsthmaState          String?   @map("hd7_asthma_state") @db.VarChar(30)
  hd8Fainting             String?   @map("hd8_fainting") @db.VarChar(10)
  hd8FaintingState        String?   @map("hd8_fainting_state") @db.VarChar(30)
  hd9Depression           String?   @map("hd9_depression") @db.VarChar(10)
  hd9DepressionState      String?   @map("hd9_depression_state") @db.VarChar(30)
  hd10Throat              String?   @map("hd10_throat") @db.VarChar(10)
  hd10ThroatState         String?   @map("hd10_throat_state") @db.VarChar(30)
  hd12Vision              String?   @map("hd12_vision") @db.VarChar(10)
  hd12VisionState         String?   @map("hd12_vision_state") @db.VarChar(30)
  hd11Other               String?   @map("hd11_other") @db.VarChar(10)
  hd11OtherExplain        String?   @map("hd11_other_explain") @db.VarChar(200)
  hdPageStatus            String?   @map("hd_page_status") @db.VarChar(45)
  hdPageRejectReason      String?   @map("hd_page_reject_reason") @db.VarChar(200)
  recordApproved          String?   @map("record_approved") @db.VarChar(45)
  healthUrl_1             String?   @map("health_url_1") @db.VarChar(500)
  healthUrl_1Status       String?   @map("health_url_1_status") @db.VarChar(45)
  healthUrl_1RejectReason String?   @map("health_url_1_reject_reason") @db.VarChar(200)
  healthUrl_2             String?   @map("health_url_2") @db.VarChar(500)
  healthUrl_2Status       String?   @map("health_url_2_status") @db.VarChar(45)
  healthUrl_2RejectReason String?   @map("health_url_2_reject_reason") @db.VarChar(200)
  healthUrl_3             String?   @map("health_url_3") @db.VarChar(500)
  healthUrl_3Status       String?   @map("health_url_3_status") @db.VarChar(45)
  healthUrl_3RejectReason String?   @map("health_url_3_reject_reason") @db.VarChar(200)
  healthUrl_4             String?   @map("health_url_4") @db.VarChar(500)
  healthUrl_4Status       String?   @map("health_url_4_status") @db.VarChar(45)
  healthUrl_4RejectReason String?   @map("health_url_4_reject_reason") @db.VarChar(200)
  healthUrl_5             String?   @map("health_url_5") @db.VarChar(500)
  healthUrl_5Status       String?   @map("health_url_5_status") @db.VarChar(45)
  healthUrl_5RejectReason String?   @map("health_url_5_reject_reason") @db.VarChar(200)
  healthUrlCount          Int?      @map("health_url_count")
  updatedBy               Int?      @map("updated_by")
  updatedAt               DateTime? @map("updated_at") @db.DateTime(0)
  auditedBy               Int?      @map("audited_by")
  auditedAt               DateTime? @map("audited_at") @db.DateTime(0)
  user                    User      @relation(fields: [tspId], references: [tsp_id], onDelete: NoAction, onUpdate: NoAction, map: "FK_936")

  @@index([tspId], map: "fkIdx_937")
  @@map("hris_health_data")
}

model ApprovedJobRequisition {
  tspId           Int       @id @map("tsp_id")
  batch           String?   @db.VarChar(45)
  department      String?   @db.VarChar(45)
  division        String?   @db.VarChar(45)
  center          String?   @db.VarChar(45)
  supervisorName  String?   @map("supervisor_name") @db.VarChar(100)
  supervisorTspId Int?      @map("supervisor_tsp_id")
  employmentType  String?   @map("employment_type") @db.VarChar(45)
  jobTitle        String?   @map("job_title") @db.VarChar(45)
  tutorLine       String?   @map("tutor_line") @db.VarChar(45)
  comment         String?   @db.VarChar(200)
  approvalStatus  String?   @map("approval_status") @db.VarChar(45)
  rejectReason    String?   @map("reject_reason") @db.VarChar(200)
  updatedBy       Int?      @map("updated_by")
  updatedAt       DateTime  @default(now()) @map("updated_at") @db.DateTime(0)
  approvedBy      Int?      @map("approved_by")
  approvedAt      DateTime? @map("approved_at") @db.DateTime(0)
  user            User      @relation("approved_job_requisition_users", fields: [tspId], references: [tsp_id], onDelete: NoAction, onUpdate: NoAction)
  updaters        User?     @relation("approved_job_requisition_updaters", fields: [updatedBy], references: [tsp_id], onDelete: NoAction, onUpdate: NoAction)
  approvers       User?     @relation("approved_job_requisition_approvers", fields: [approvedBy], references: [tsp_id], onDelete: NoAction, onUpdate: NoAction)

  @@map("approved_job_requisition")
}

model HrisJobRequisition {
  id              Int      @id @default(autoincrement())
  tspId           Int      @map("tsp_id")
  batch           String?  @db.VarChar(45)
  department      String?  @db.VarChar(45)
  division        String?  @db.VarChar(45)
  center          String?  @db.VarChar(45)
  supervisorName  String?  @map("supervisor_name") @db.VarChar(100)
  supervisorTspId Int?     @map("supervisor_tsp_id")
  employmentType  String?  @map("employment_type") @db.VarChar(45)
  jobTitle        String?  @map("job_title") @db.VarChar(45)
  tutorLine       String?  @map("tutor_line") @db.VarChar(45)
  comment         String?  @db.VarChar(200)
  approvalStatus  String?  @map("approval_status") @db.VarChar(45)
  rejectReason    String?  @map("reject_reason") @db.VarChar(200)
  updatedBy       Int?     @map("updated_by")
  updatedAt       DateTime @default(now()) @map("updated_at") @db.DateTime(0)
  user            User     @relation(fields: [tspId], references: [tsp_id], onDelete: NoAction, onUpdate: NoAction)

  @@map("hris_job_requisition")
}

model HrisRefereeData {
  id                      Int       @id @default(autoincrement())
  tspId                   Int       @map("tsp_id")
  refereeTitle1           String?   @map("referee_title_1") @db.VarChar(10)
  refereeFirstName1       String?   @map("referee_first_name_1") @db.VarChar(100)
  refereeLastName1        String?   @map("referee_last_name_1") @db.VarChar(100)
  refereeRelationship1    String?   @map("referee_relationship_1") @db.VarChar(45)
  refereeEmail1           String?   @map("referee_email_1") @db.VarChar(100)
  refereeTelephoneNumber1 String?   @map("referee_telephone_number_1") @db.VarChar(20)
  refereeConfirmation1    String?   @map("referee_confirmation_1") @db.VarChar(45)
  refereeTitle2           String?   @map("referee_title_2") @db.VarChar(10)
  refereeFirstName2       String?   @map("referee_first_name_2") @db.VarChar(100)
  refereeLastName2        String?   @map("referee_last_name_2") @db.VarChar(100)
  refereeRelationship2    String?   @map("referee_relationship_2") @db.VarChar(45)
  refereeEmail2           String?   @map("referee_email_2") @db.VarChar(100)
  refereeTelephoneNumber2 String?   @map("referee_telephone_number_2") @db.VarChar(20)
  refereeConfirmation2    String?   @map("referee_confirmation_2") @db.VarChar(45)
  acknowledgement1        String?   @map("acknowledgement_1") @db.VarChar(45)
  acknowledgement2        String?   @map("acknowledgement_2") @db.VarChar(45)
  referee1Status          String?   @map("referee_1_status") @db.VarChar(45)
  referee1RejectReason    String?   @map("referee_1_reject_reason") @db.VarChar(200)
  referee2Status          String?   @map("referee_2_status") @db.VarChar(45)
  referee2RejectReason    String?   @map("referee_2_reject_reason") @db.VarChar(200)
  confirmation            String?   @map("confirmation") @db.VarChar(45)
  updatedBy               Int?      @map("updated_by")
  updatedAt               DateTime? @map("updated_at") @db.DateTime(0)
  auditedBy               Int?      @map("audited_by")
  auditedAt               DateTime? @map("audited_at") @db.DateTime(0)

  user User @relation(fields: [tspId], references: [tsp_id], onDelete: NoAction, onUpdate: NoAction, map: "FK_835")

  @@index([tspId], map: "fkIdx_834")
  @@map("hris_referee_data")
}

model ApprovedRefereeData {
  tspId                   Int       @id @map("tsp_id")
  refereeTitle1           String?   @map("referee_title_1") @db.VarChar(10)
  refereeFirstName1       String?   @map("referee_first_name_1") @db.VarChar(100)
  refereeLastName1        String?   @map("referee_last_name_1") @db.VarChar(100)
  refereeRelationship1    String?   @map("referee_relationship_1") @db.VarChar(45)
  refereeEmail1           String?   @map("referee_email_1") @db.VarChar(100)
  refereeTelephoneNumber1 String?   @map("referee_telephone_number_1") @db.VarChar(20)
  refereeConfirmation1    String?   @map("referee_confirmation_1") @db.VarChar(45)
  refereeTitle2           String?   @map("referee_title_2") @db.VarChar(10)
  refereeFirstName2       String?   @map("referee_first_name_2") @db.VarChar(100)
  refereeLastName2        String?   @map("referee_last_name_2") @db.VarChar(100)
  refereeRelationship2    String?   @map("referee_relationship_2") @db.VarChar(45)
  refereeEmail2           String?   @map("referee_email_2") @db.VarChar(100)
  refereeTelephoneNumber2 String?   @map("referee_telephone_number_2") @db.VarChar(20)
  refereeConfirmation2    String?   @map("referee_confirmation_2") @db.VarChar(45)
  acknowledgement1        String?   @map("acknowledgement_1") @db.VarChar(45)
  acknowledgement2        String?   @map("acknowledgement_2") @db.VarChar(45)
  confirmation            String?   @map("confirmation") @db.VarChar(45)
  emailFlag1              Int?      @map("email_flag_1")
  emailFlag2              Int?      @map("email_flag_2")
  emailedFormAt1          DateTime? @map("emailed_form_at_1") @db.DateTime(0)
  emailedFormAt2          DateTime? @map("emailed_form_at_2") @db.DateTime(0)
  submissionFlag1         Int?      @map("submission_flag_1")
  submissionFlag2         Int?      @map("submission_flag_2")
  approvedBy              Int?      @map("approved_by")
  approvedAt              DateTime  @default(now()) @map("approved_at") @db.DateTime(0)
  updatedFlag             Int       @default(0) @map("updated_flag") @db.TinyInt
  user                    User      @relation(fields: [tspId], references: [tsp_id], onDelete: NoAction, onUpdate: NoAction)

  @@map("approved_referee_data")
}

model HrisReferenceCollected {
  id                                 Int       @id @default(autoincrement())
  refereeId                          String?   @map("referee_id") @db.VarChar(45)
  refereeEmail                       String?   @map("referee_email") @db.VarChar(100)
  refereeName                        String?   @map("referee_name") @db.VarChar(200)
  applicantName                      String?   @map("applicant_name") @db.VarChar(100)
  refereeApplicantHowKnow            String?   @map("referee_applicant_how_know") @db.Text
  refereeApplicantKnowDuration       String?   @map("referee_applicant_know_duration") @db.VarChar(45)
  refereeApplicantNotWorkChildren    String?   @map("referee_applicant_not_work_children") @db.Text
  refereeApplicantEmploymentConsider String?   @map("referee_applicant_employment_consider") @db.Text
  refereeApplicantPositionTutor      String?   @map("referee_applicant_position_tutor") @db.VarChar(45)
  tspId                              Int?      @map("tsp_id")
  refereeCount                       Int?      @map("referee_count")
  submittedAt                        DateTime? @default(now()) @map("submitted_at") @db.DateTime(0)
  updatedAt                          DateTime? @default(now()) @map("updated_at") @db.DateTime(0)
  user                               User?     @relation(fields: [tspId], references: [tsp_id], onDelete: NoAction, onUpdate: NoAction)

  @@map("hris_reference_collected")
}

model HrisItData {
  id                                  Int               @id @default(autoincrement())
  tspId                               Int               @map("tsp_id")
  havePc                              String?           @map("have_pc") @db.VarChar(45)
  havePcStatus                        String?           @map("have_pc_status") @db.VarChar(45)
  havePcRejectReason                  String?           @map("have_pc_reject_reason") @db.Text
  pcType                              String?           @map("pc_type") @db.VarChar(45)
  pcTypeStatus                        String?           @map("pc_type_status") @db.VarChar(45)
  pcTypeRejectReason                  String?           @map("pc_type_reject_reason") @db.Text
  pcOwnership                         String?           @map("pc_ownership") @db.VarChar(45)
  pcOwnershipStatus                   String?           @map("pc_ownership_status") @db.VarChar(45)
  pcOwnershipRejectReason             String?           @map("pc_ownership_reject_reason") @db.Text
  pcBrand                             String?           @map("pc_brand") @db.VarChar(45)
  pcBrandStatus                       String?           @map("pc_brand_status") @db.VarChar(45)
  pcBrandRejectReason                 String?           @map("pc_brand_reject_reason") @db.Text
  pcBrandOther                        String?           @map("pc_brand_other") @db.VarChar(150)
  pcBrandOtherStatus                  String?           @map("pc_brand_other_status") @db.VarChar(45)
  pcBrandOtherRejectReason            String?           @map("pc_brand_other_reject_reason") @db.Text
  pcModel                             String?           @map("pc_model") @db.VarChar(150)
  pcModelStatus                       String?           @map("pc_model_status") @db.VarChar(45)
  pcModelRejectReason                 String?           @map("pc_model_reject_reason") @db.Text
  pcBitVersion                        String?           @map("pc_bit_version") @db.VarChar(45)
  pcBitVersionStatus                  String?           @map("pc_bit_version_status") @db.VarChar(45)
  pcBitVersionRejectReason            String?           @map("pc_bit_version_reject_reason") @db.Text
  laptopSerial                        String?           @map("laptop_serial") @db.VarChar(45)
  laptopSerialStatus                  String?           @map("laptop_serial_status") @db.VarChar(45)
  laptopSerialRejectReason            String?           @map("laptop_serial_reject_reason") @db.Text
  laptopBatteryAge                    String?           @map("laptop_battery_age") @db.VarChar(45)
  laptopBatteryAgeStatus              String?           @map("laptop_battery_age_status") @db.VarChar(45)
  laptopBatteryAgeRejectReason        String?           @map("laptop_battery_age_reject_reason") @db.Text
  laptopBatteryRuntime                String?           @map("laptop_battery_runtime") @db.VarChar(45)
  laptopBatteryRuntimeStatus          String?           @map("laptop_battery_runtime_status") @db.VarChar(45)
  laptopBatteryRuntimeRejectReason    String?           @map("laptop_battery_runtime_reject_reason") @db.Text
  pcOs                                String?           @map("pc_os") @db.VarChar(45)
  pcOsStatus                          String?           @map("pc_os_status") @db.VarChar(45)
  pcOsRejectReason                    String?           @map("pc_os_reject_reason") @db.Text
  pcOsOther                           String?           @map("pc_os_other") @db.VarChar(150)
  pcOsOtherStatus                     String?           @map("pc_os_other_status") @db.VarChar(45)
  pcOsOtherRejectReason               String?           @map("pc_os_other_reject_reason") @db.Text
  pcProcessor                         String?           @map("pc_processor") @db.VarChar(150)
  pcProcessorStatus                   String?           @map("pc_processor_status") @db.VarChar(45)
  pcProcessorRejectReason             String?           @map("pc_processor_reject_reason") @db.Text
  pcProcessorOther                    String?           @map("pc_processor_other") @db.VarChar(150)
  pcProcessorOtherStatus              String?           @map("pc_processor_other_status") @db.VarChar(45)
  pcProcessorOtherRejectReason        String?           @map("pc_processor_other_reject_reason") @db.Text
  pcRam                               String?           @map("pc_ram") @db.VarChar(45)
  pcRamStatus                         String?           @map("pc_ram_status") @db.VarChar(45)
  pcRamRejectReason                   String?           @map("pc_ram_reject_reason") @db.Text
  hdType                              String?           @map("hd_type") @db.VarChar(45)
  hdTypeStatus                        String?           @map("hd_type_status") @db.VarChar(45)
  hdTypeRejectReason                  String?           @map("hd_type_reject_reason") @db.Text
  hdCapacity                          String?           @map("hd_capacity") @db.VarChar(45)
  hdCapacityStatus                    String?           @map("hd_capacity_status") @db.VarChar(45)
  hdCapacityRejectReason              String?           @map("hd_capacity_reject_reason") @db.Text
  pcBrowsers                          String?           @map("pc_browsers") @db.VarChar(500)
  pcBrowsersStatus                    String?           @map("pc_browsers_status") @db.VarChar(45)
  pcBrowsersRejectReason              String?           @map("pc_browsers_reject_reason") @db.Text
  pcAntivirus                         String?           @map("pc_antivirus") @db.VarChar(45)
  pcAntivirusStatus                   String?           @map("pc_antivirus_status") @db.VarChar(45)
  pcAntivirusRejectReason             String?           @map("pc_antivirus_reject_reason") @db.Text
  pcAntivirusOther                    String?           @map("pc_antivirus_other") @db.VarChar(150)
  pcAntivirusOtherStatus              String?           @map("pc_antivirus_other_status") @db.VarChar(45)
  pcAntivirusOtherRejectReason        String?           @map("pc_antivirus_other_reject_reason") @db.Text
  lastServiceDate                     String?           @map("last_service_date") @db.VarChar(45)
  lastServiceDateStatus               String?           @map("last_service_date_status") @db.VarChar(45)
  lastServiceDateRejectReason         String?           @map("last_service_date_reject_reason") @db.Text
  pcIPAddress                         String?           @map("pc_ip_address") @db.VarChar(45)
  pcIPAddressStatus                   String?           @map("pc_ip_address_status") @db.VarChar(45)
  pcIPAddressRejectReason             String?           @map("pc_ip_address_reject_reason") @db.Text
  ramUrl                              String?           @map("ram_url") @db.VarChar(500)
  ramUrlStatus                        String?           @map("ram_url_status") @db.VarChar(45)
  ramUrlRejectReason                  String?           @map("ram_url_reject_reason") @db.Text
  pcUrl                               String?           @map("pc_url") @db.VarChar(500)
  pcUrlStatus                         String?           @map("pc_url_status") @db.VarChar(45)
  pcUrlRejectReason                   String?           @map("pc_url_reject_reason") @db.Text
  desktopUps                          String?           @map("desktop_ups") @db.VarChar(45)
  desktopUpsStatus                    String?           @map("desktop_ups_status") @db.VarChar(45)
  desktopUpsRejectReason              String?           @map("desktop_ups_reject_reason") @db.Text
  desktopUpsUrl                       String?           @map("desktop_ups_url") @db.VarChar(500)
  desktopUpsUrlStatus                 String?           @map("desktop_ups_url_status") @db.VarChar(45)
  desktopUpsUrlRejectReason           String?           @map("desktop_ups_url_reject_reason") @db.Text
  desktopUpsRuntime                   String?           @map("desktop_ups_runtime") @db.VarChar(45)
  desktopUpsRuntimeStatus             String?           @map("desktop_ups_runtime_status") @db.VarChar(45)
  desktopUpsRuntimeRejectReason       String?           @map("desktop_ups_runtime_reject_reason") @db.Text
  haveHeadset                         String?           @map("have_headset") @db.VarChar(45)
  haveHeadsetStatus                   String?           @map("have_headset_status") @db.VarChar(45)
  haveHeadsetRejectReason             String?           @map("have_headset_reject_reason") @db.Text
  headsetUsb                          String?           @map("headset_usb") @db.VarChar(45)
  headsetUsbStatus                    String?           @map("headset_usb_status") @db.VarChar(45)
  headsetUsbRejectReason              String?           @map("headset_usb_reject_reason") @db.Text
  headsetConnectivityType             String?           @map("headset_connectivity_type") @db.VarChar(150)
  headsetConnectivityTypeStatus       String?           @map("headset_connectivity_type_status") @db.VarChar(45)
  headsetConnectivityTypeRejectReason String?           @map("headset_connectivity_type_reject_reason") @db.Text
  headsetMuteBtn                      String?           @map("headset_mute_btn") @db.VarChar(45)
  headsetMuteBtnStatus                String?           @map("headset_mute_btn_status") @db.VarChar(45)
  headsetMuteBtnRejectReason          String?           @map("headset_mute_btn_reject_reason") @db.Text
  headsetNoiseCancel                  String?           @map("headset_noise_cancel") @db.VarChar(45)
  headsetNoiseCancelStatus            String?           @map("headset_noise_cancel_status") @db.VarChar(45)
  headsetNoiseCancelRejectReason      String?           @map("headset_noise_cancel_reject_reason") @db.Text
  headsetSpecs                        String?           @map("headset_specs") @db.VarChar(150)
  headsetSpecsStatus                  String?           @map("headset_specs_status") @db.VarChar(45)
  headsetSpecsRejectReason            String?           @map("headset_specs_reject_reason") @db.Text
  headsetUrl                          String?           @map("headset_url") @db.VarChar(500)
  headsetUrlStatus                    String?           @map("headset_url_status") @db.VarChar(45)
  headsetUrlRejectReason              String?           @map("headset_url_reject_reason") @db.Text
  primaryConnectionType               String?           @map("primary_connection_type") @db.VarChar(45)
  primaryConnectionTypeStatus         String?           @map("primary_connection_type_status") @db.VarChar(45)
  primaryConnectionTypeRejectReason   String?           @map("primary_connection_type_reject_reason") @db.Text
  primaryIsp                          String?           @map("primary_isp") @db.VarChar(45)
  primaryIspStatus                    String?           @map("primary_isp_status") @db.VarChar(45)
  primaryIspRejectReason              String?           @map("primary_isp_reject_reason") @db.Text
  primaryIspOther                     String?           @map("primary_isp_other") @db.VarChar(150)
  primaryIspOtherStatus               String?           @map("primary_isp_other_status") @db.VarChar(45)
  primaryIspOtherRejectReason         String?           @map("primary_isp_other_reject_reason") @db.Text
  primaryConnectedCount               String?           @map("primary_connected_count") @db.VarChar(45)
  primaryConnectedCountStatus         String?           @map("primary_connected_count_status") @db.VarChar(45)
  primaryConnectedCountRejectReason   String?           @map("primary_connected_count_reject_reason") @db.Text
  primaryDownloadSpeed                String?           @map("primary_download_speed") @db.VarChar(45)
  primaryDownloadSpeedStatus          String?           @map("primary_download_speed_status") @db.VarChar(45)
  primaryDownloadSpeedRejectReason    String?           @map("primary_download_speed_reject_reason") @db.Text
  primaryUploadSpeed                  String?           @map("primary_upload_speed") @db.VarChar(45)
  primaryUploadSpeedStatus            String?           @map("primary_upload_speed_status") @db.VarChar(45)
  primaryUploadSpeedRejectReason      String?           @map("primary_upload_speed_reject_reason") @db.Text
  primaryPing                         String?           @map("primary_ping") @db.VarChar(45)
  primaryPingStatus                   String?           @map("primary_ping_status") @db.VarChar(45)
  primaryPingRejectReason             String?           @map("primary_ping_reject_reason") @db.Text
  haveSecondaryConnection             String?           @map("have_secondary_connection") @db.VarChar(45)
  haveSecondaryConnectionStatus       String?           @map("have_secondary_connection_status") @db.VarChar(45)
  haveSecondaryConnectionRejectReason String?           @map("have_secondary_connection_reject_reason") @db.Text
  secondaryConnectionType             String?           @map("secondary_connection_type") @db.VarChar(45)
  secondaryConnectionTypeStatus       String?           @map("secondary_connection_type_status") @db.VarChar(45)
  secondaryConnectionTypeRejectReason String?           @map("secondary_connection_type_reject_reason") @db.Text
  secondaryIsp                        String?           @map("secondary_isp") @db.VarChar(45)
  secondaryIspStatus                  String?           @map("secondary_isp_status") @db.VarChar(45)
  secondaryIspRejectReason            String?           @map("secondary_isp_reject_reason") @db.Text
  secondaryIspOther                   String?           @map("secondary_isp_other") @db.VarChar(150)
  secondaryIspOtherStatus             String?           @map("secondary_isp_other_status") @db.VarChar(45)
  secondaryIspOtherRejectReason       String?           @map("secondary_isp_other_reject_reason") @db.Text
  secondaryDownloadSpeed              String?           @map("secondary_download_speed") @db.VarChar(45)
  secondaryDownloadSpeedStatus        String?           @map("secondary_download_speed_status") @db.VarChar(45)
  secondaryDownloadSpeedRejectReason  String?           @map("secondary_download_speed_reject_reason") @db.Text
  secondaryUploadSpeed                String?           @map("secondary_upload_speed") @db.VarChar(45)
  secondaryUploadSpeedStatus          String?           @map("secondary_upload_speed_status") @db.VarChar(45)
  secondaryUploadSpeedRejectReason    String?           @map("secondary_upload_speed_reject_reason") @db.Text
  secondaryPing                       String?           @map("secondary_ping") @db.VarChar(45)
  secondaryPingStatus                 String?           @map("secondary_ping_status") @db.VarChar(45)
  secondaryPingRejectReason           String?           @map("secondary_ping_reject_reason") @db.Text
  primarySpeedUrl                     String?           @map("primary_speed_url") @db.VarChar(500)
  primarySpeedUrlStatus               String?           @map("primary_speed_url_status") @db.VarChar(45)
  primarySpeedUrlRejectReason         String?           @map("primary_speed_url_reject_reason") @db.Text
  secondarySpeedUrl                   String?           @map("secondary_speed_url") @db.VarChar(500)
  secondarySpeedUrlStatus             String?           @map("secondary_speed_url_status") @db.VarChar(45)
  secondarySpeedUrlRejectReason       String?           @map("secondary_speed_url_reject_reason") @db.Text
  responsibleItCheck                  String?           @map("responsible_it_check") @db.VarChar(45)
  updatedBy                           Int?              @map("updated_by")
  updatedAt                           DateTime?         @map("updated_at") @db.DateTime(0)
  auditedBy                           Int?              @map("audited_by")
  auditedAt                           DateTime?         @map("audited_at") @db.DateTime(0)
  statusId                            Int               @default(79)
  user                                User              @relation(fields: [tspId], references: [tsp_id], onDelete: NoAction, onUpdate: NoAction, map: "FK_924")
  hrisMetaDataValue                   HrisMetaDataValue @relation(fields: [statusId], references: [id])

  @@index([tspId], map: "fkIdx_925")
  @@index([statusId], map: "hris_it_data_statusId_fkey")
  @@map("hris_it_data")
}

model HrisOperationsInputs {
  id                         Int       @id @default(autoincrement())
  tsp_id                     Int
  ops__tutor_status          String?   @db.VarChar(45)
  operation_manager          String?   @db.VarChar(200)
  session_availability_count String?   @db.VarChar(100)
  updated_by                 String?   @db.VarChar(45)
  updated_at                 DateTime? @db.DateTime(0)
  user                       User      @relation(fields: [tsp_id], references: [tsp_id], onDelete: NoAction, onUpdate: NoAction, map: "FK_1020")

  @@index([tsp_id], map: "fkIdx_1021")
  @@map("hris_operations_inputs")
}

model HrisPersonalData {
  id                                 Int                      @id @default(autoincrement())
  tspId                              Int                      @map("tsp_id")
  fullName                           String?                  @map("full_name") @db.VarChar(300)
  fullNameStatus                     String?                  @map("full_name_status") @db.VarChar(45)
  fullNameRejectReason               String?                  @map("full_name_reject_reason") @db.VarChar(200)
  nameWithInitials                   String?                  @map("name_with_initials") @db.VarChar(200)
  nameWithInitialsStatus             String?                  @map("name_with_initials_status") @db.VarChar(45)
  nameWithInitialsRejectReason       String?                  @map("name_with_initials_reject_reason") @db.VarChar(200)
  firstName                          String?                  @map("first_name") @db.VarChar(200)
  firstNameStatus                    String?                  @map("first_name_status") @db.VarChar(45)
  firstNameRejectReason              String?                  @map("first_name_reject_reason") @db.VarChar(200)
  surname                            String?                  @db.VarChar(200)
  surnameStatus                      String?                  @map("surname_status") @db.VarChar(45)
  surnameRejectReason                String?                  @map("surname_reject_reason") @db.VarChar(200)
  gender                             String?                  @db.VarChar(45)
  dob                                DateTime?                @db.Date
  dobStatus                          String?                  @map("dob_status") @db.VarChar(45)
  dobRejectReason                    String?                  @map("dob_reject_reason") @db.VarChar(100)
  birthCertificateUrl                String?                  @map("birth_certificate_url") @db.VarChar(500)
  birthCertificateUrlStatus          String?                  @map("birth_certificate_url_status") @db.VarChar(45)
  birthCertificateUrlRejectReason    String?                  @map("birth_certificate_url_reject_reason") @db.VarChar(200)
  religion                           String?                  @db.VarChar(45)
  maritalState                       String?                  @map("marital_state") @db.VarChar(45)
  spouseName                         String?                  @map("spouse_name") @db.VarChar(200)
  spouseNic                          String?                  @map("spouse_nic") @db.VarChar(20)
  spouseDob                          String?                  @map("spouse_dob") @db.VarChar(20)
  marriageCertificate                String?                  @map("marriage_certificate") @db.VarChar(500)
  marriageCertificateStatus          String?                  @map("marriage_certificate_status") @db.VarChar(45)
  marriageCertificateRejectReason    String?                  @map("marriage_certificate_reject_reason") @db.VarChar(500)
  haveChildren                       String?                  @map("have_children") @db.VarChar(45)
  nic                                String?                  @db.VarChar(45)
  nicStatus                          String?                  @map("nic_status") @db.VarChar(45)
  nicRejectReason                    String?                  @map("nic_reject_reason") @db.VarChar(200)
  nicUrl                             String?                  @map("nic_url") @db.VarChar(500)
  nicUrlStatus                       String?                  @map("nic_url_status") @db.VarChar(45)
  nicUrlRejectReason                 String?                  @map("nic_url_reject_reason") @db.VarChar(200)
  haveAffiliations                   String?                  @map("have_affiliations") @db.VarChar(45)
  shortName                          String?                  @map("short_name") @db.VarChar(200)
  age                                Int?
  ppUrl                              String?                  @map("pp_url") @db.VarChar(500)
  ppUrlStatus                        String?                  @map("pp_url_status") @db.VarChar(45)
  ppUrlRejectReason                  String?                  @map("pp_url_reject_reason") @db.VarChar(200)
  updatedBy                          Int?                     @map("updated_by")
  updatedAt                          DateTime?                @map("updated_at") @db.DateTime(0)
  auditedBy                          Int?                     @map("audited_by")
  auditedAt                          DateTime?                @map("audited_at") @db.DateTime(0)
  nationality                        String?                  @db.VarChar(45)
  typeOfId                           String?                  @map("type_of_id") @db.VarChar(45)
  typeOfIdStatus                     String?                  @map("type_of_id_status") @db.VarChar(45)
  typeOfIdRejectReason               String?                  @map("type_of_id_reject_reason") @db.VarChar(200)
  passportCountry                    String?                  @map("passport_country") @db.VarChar(45)
  passportCountryStatus              String?                  @map("passport_country_status") @db.VarChar(45)
  passportCountryRejectReason        String?                  @map("passport_country_reject_reason") @db.VarChar(200)
  passportExpirationDate             DateTime?                @map("passport_expiration_date") @db.Date
  passportExpirationDateStatus       String?                  @map("passport_expiration_date_status") @db.VarChar(45)
  passportExpirationDateRejectReason String?                  @map("passport_expiration_date_reject_reason") @db.VarChar(200)
  haveRtwDocument                    String?                  @map("have_rtw_document") @db.VarChar(45)
  haveRtwDocumentStatus              String?                  @map("have_rtw_document_status") @db.VarChar(45)
  haveRtwDocumentRejectReason        String?                  @map("have_rtw_document_reject_reason") @db.VarChar(200)
  rtwDocumentUrl                     String?                  @map("rtw_document_url") @db.VarChar(500)
  rtwDocumentUrlStatus               String?                  @map("rtw_document_url_status") @db.VarChar(45)
  rtwDocumentUrlRejectReason         String?                  @map("rtw_document_url_reject_reason") @db.VarChar(200)
  haveRtwExpirationDate              String?                  @map("have_rtw_expiration_date") @db.VarChar(45)
  haveRtwExpirationDateStatus        String?                  @map("have_rtw_expiration_date_status") @db.VarChar(45)
  haveRtwExpirationDateRejectReason  String?                  @map("have_rtw_expiration_date_reject_reason") @db.VarChar(200)
  rtwExpirationDate                  DateTime?                @map("rtw_expiration_date") @db.Date
  rtwExpirationDateStatus            String?                  @map("rtw_expiration_date_status") @db.VarChar(45)
  rtwExpirationDateRejectReason      String?                  @map("rtw_expiration_date_reject_reason") @db.VarChar(200)
  idLanguage                         String?                  @map("id_language") @db.VarChar(500)
  idLanguageStatus                   String?                  @map("id_language_status") @db.VarChar(45)
  idLanguageRejectReason             String?                  @map("id_language_reject_reason") @db.VarChar(200)
  preferredName                      String?                  @map("preferred_name") @db.VarChar(100)
  includeFamilyInInsurance           String?                  @map("include_family_in_insurance") @db.VarChar(100)
  whomIncludeInInsurance             String?                  @map("whom_include_in_insurance") @db.VarChar(100)
  user                               User                     @relation(fields: [tspId], references: [tsp_id], onDelete: NoAction, onUpdate: NoAction, map: "FK_410")
  xfamily_affiliations               XfamilyAffiliations[]
  xfamily_members_parents            XfamilyMembersParents[]
  xfamily_members_children           XfamilyMembersChildren[]

  @@index([tspId], map: "fkIdx_411")
  @@map("hris_personal_data")
}

model HrisProgress {
  tspId                         Int       @id @map("tsp_id")
  personalDataEmp               Int       @default(0) @map("personal_data_emp")
  personalDataAuditor           Int       @default(0) @map("personal_data_auditor")
  personalDataSidebarProg       Int       @default(0) @map("personal_data_sidebar_prog")
  contactDataEmp                Int       @default(0) @map("contact_data_emp")
  contactDataAuditor            Int       @default(0) @map("contact_data_auditor")
  contactDataSidebarProg        Int       @default(0) @map("contact_data_sidebar_prog")
  educationDataEmp              Int       @default(0) @map("education_data_emp")
  educationDataAuditor          Int       @default(0) @map("education_data_auditor")
  educationDataSidebarProg      Int       @default(0) @map("education_data_sidebar_prog")
  qualificationsDataEmp         Int       @default(0) @map("qualifications_data_emp")
  qualificationsDataAuditor     Int       @default(0) @map("qualifications_data_auditor")
  qualificationsDataSidebarProg Int       @default(0) @map("qualifications_data_sidebar_prog")
  workExpEmp                    Int       @default(0) @map("work_exp_emp")
  workExpAuditor                Int       @default(0) @map("work_exp_auditor")
  workExpSidebarProg            Int       @default(0) @map("work_exp_sidebar_prog")
  availabilityDataEmp           Int       @default(0) @map("availability_data_emp")
  availabilityDataAuditor       Int       @default(0) @map("availability_data_auditor")
  availabilityDataSidebarProg   Int       @default(0) @map("availability_data_sidebar_prog")
  itDataEmp                     Int       @default(0) @map("it_data_emp")
  itDataAuditor                 Int       @default(0) @map("it_data_auditor")
  itDataSidebarProg             Int       @default(0) @map("it_data_sidebar_prog")
  bankDataEmp                   Int       @default(0) @map("bank_data_emp")
  bankDataAuditor               Int       @default(0) @map("bank_data_auditor")
  bankDataSidebarProg           Int       @default(0) @map("bank_data_sidebar_prog")
  healthDataEmp                 Int       @default(0) @map("health_data_emp")
  healthDataAuditor             Int       @default(0) @map("health_data_auditor")
  healthDataSidebarProg         Int       @default(0) @map("health_data_sidebar_prog")
  right2workInfoEmp             Int       @default(0) @map("right2work_info_emp")
  right2workInfoAuditor         Int       @default(0) @map("right2work_info_auditor")
  right2workInfoSidebarProg     Int       @default(0) @map("right2work_info_sidebar_prog")
  refereeDataEmp                Int       @default(0) @map("referee_data_emp")
  refereeDataAuditor            Int       @default(0) @map("referee_data_auditor")
  refereeDataSidebarProg        Int       @default(0) @map("referee_data_sidebar_prog")
  eligibilityStatus             String?   @map("eligibility_status") @db.VarChar(45)
  ipAddress                     String?   @map("ip_address") @db.VarChar(45)
  demoAttempt                   Int       @default(0) @map("demo_attempt")
  discrepancyComment            String?   @map("discrepancy_comment") @db.VarChar(250)
  personalDataCount             String?   @map("personal_data_count") @db.VarChar(45)
  contactDataCount              String?   @map("contact_data_count") @db.VarChar(45)
  educationalDataCount          String?   @map("educational_data_count") @db.VarChar(45)
  qualificationDataCount        String?   @map("qualification_data_count") @db.VarChar(45)
  workExperienceDataCount       String?   @map("work_experience_data_count") @db.VarChar(45)
  bankDataCount                 String?   @map("bank_data_count") @db.VarChar(45)
  refereeDataCount              String?   @map("referee_data_count") @db.VarChar(45)
  healthDataCount               String?   @map("health_data_count") @db.VarChar(45)
  itDataCount                   String?   @map("it_data_count") @db.VarChar(45)
  availabilityDataCount         String?   @map("availability_data_count") @db.VarChar(45)
  right2workDataCount           String?   @map("right2work_data_count") @db.VarChar(45)
  supportDataAuditor            Int       @default(0) @map("support_data_auditor")
  supportDataCount              String?   @map("support_data_count") @db.VarChar(45)
  isJobRequisitionDoneLeastOnce Boolean?  @default(false) @map("is_job_requisition_done_least_one")
  submitedAt                    DateTime? @map("submited_at") @db.DateTime(0)
  auditorAssignedAt             DateTime? @map("auditor_assigned_at") @db.DateTime(0)
  initialAuditPassDate          DateTime? @map("initial_audit_pass_date") @db.Date
  contractAuditPassDate         DateTime? @map("contract_audit_pass_date") @db.Date
  finalAuditPassDate            DateTime? @map("final_audit_pass_date") @db.Date
  dbsAuditPassDate              DateTime? @map("dbs_audit_pass_date") @db.Date
  tspActivatedAt                DateTime? @map("tsp_activated_at") @db.DateTime(0)
  auditorId                     Int?      @map("auditor_id")
  tutorStatus                   String?   @map("tutor_status") @db.VarChar(45)
  profileStatus                 String?   @map("profile_status") @db.VarChar(45)
  lmsEmail                      String?   @unique @map("lms_email") @db.VarChar(200)
  createdAt                     DateTime  @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt                     DateTime  @default(now()) @map("updated_at") @db.DateTime(0)
  auditor                       User?     @relation("auditor_progress", fields: [auditorId], references: [tsp_id])
  user                          User      @relation("user_progress", fields: [tspId], references: [tsp_id])
  // lmsUser                       LmsUser?  @relation(fields: [lmsEmail], references: [email])

  @@map("hris_progress")
}

model HrisQualificationsData {
  id                           Int               @id @default(autoincrement())
  tspId                        Int               @map("tsp_id")
  haveStartedHq                String?           @map("have_started_hq") @db.VarChar(45)
  hqCourseType                 String?           @map("hq_course_type") @db.VarChar(100)
  hqCourseTypeStatus           String?           @map("hq_course_type_status") @db.VarChar(45)
  hqCourseTypeRejectReason     String?           @map("hq_course_type_reject_reason") @db.VarChar(200)
  hqFieldStudy                 String?           @map("hq_field_study") @db.VarChar(100)
  hqFieldStudyStatus           String?           @map("hq_field_study_status") @db.VarChar(45)
  hqFieldStudyRejectReason     String?           @map("hq_field_study_reject_reason") @db.VarChar(200)
  hqHasCompleted               String?           @map("hq_has_completed") @db.VarChar(45)
  hqHasCompletedStatus         String?           @map("hq_has_completed_status") @db.VarChar(45)
  hqHasCompletedRejectReason   String?           @map("hq_has_completed_reject_reason") @db.VarChar(200)
  hqStartYear                  Int?              @map("hq_start_year")
  hqStartYearStatus            String?           @map("hq_start_year_status") @db.VarChar(45)
  hqStartYearRejectReason      String?           @map("hq_start_year_reject_reason") @db.VarChar(200)
  hqCompletionYear             Int?              @map("hq_completion_year")
  hqCompletionYearStatus       String?           @map("hq_completion_year_status") @db.VarChar(45)
  hqCompletionYearRejectReason String?           @map("hq_completion_year_reject_reason") @db.VarChar(200)
  hqIsLocal                    String?           @map("hq_is_local") @db.VarChar(100)
  hqIsLocalStatus              String?           @map("hq_is_local_status") @db.VarChar(45)
  hqIsLocalRejectReason        String?           @map("hq_is_local_reject_reason") @db.VarChar(200)
  hqMainInst                   String?           @map("hq_main_inst") @db.VarChar(200)
  hqMainInstStatus             String?           @map("hq_main_inst_status") @db.VarChar(45)
  hqMainInstRejectReason       String?           @map("hq_main_inst_reject_reason") @db.VarChar(200)
  hqAffiInst                   String?           @map("hq_affi_inst") @db.VarChar(200)
  hqAffiInstStatus             String?           @map("hq_affi_inst_status") @db.VarChar(45)
  hqAffiInstRejectReason       String?           @map("hq_affi_inst_reject_reason") @db.VarChar(200)
  hqDocUrl                     String?           @map("hq_doc_url") @db.VarChar(500)
  hqDocUrlStatus               String?           @map("hq_doc_url_status") @db.VarChar(45)
  hqDocUrlRejectReason         String?           @map("hq_doc_url_reject_reason") @db.VarChar(200)
  updatedBy                    Int?              @map("updated_by")
  updatedAt                    DateTime?         @map("updated_at") @db.DateTime(0)
  auditedBy                    Int?              @map("audited_by")
  auditedAt                    DateTime?         @map("audited_at") @db.DateTime(0)
  recordApproved               String?           @map("record_approved") @db.VarChar(45)
  user                         User              @relation(fields: [tspId], references: [tsp_id], onDelete: NoAction, onUpdate: NoAction, map: "FK_919")
  xother_quali_data            XotherQualiData[]

  @@index([tspId], map: "fkIdx_920")
  @@map("hris_qualifications_data")
}

model HrisRight2workData {
  id                            Int       @id @default(autoincrement())
  tspId                         Int       @map("tsp_id")
  contractUrl                   String?   @map("contract_url") @db.VarChar(500)
  contractUrlStatus             String?   @map("contract_url_status") @db.VarChar(45)
  contractUrlRejectReason       String?   @map("contract_url_reject_reason") @db.VarChar(200)
  gsIssuedDate                  DateTime? @map("gs_issued_date") @db.Date
  gsIssuedDateStatus            String?   @map("gs_issued_date_status") @db.VarChar(45)
  gsIssuedDateRejectReason      String?   @map("gs_issued_date_reject_reason") @db.VarChar(200)
  gsUrl                         String?   @map("gs_url") @db.VarChar(500)
  gsUrlStatus                   String?   @map("gs_url_status") @db.VarChar(45)
  gsUrlRejectReason             String?   @map("gs_url_reject_reason") @db.VarChar(200)
  gsUploadedAt                  DateTime? @map("gs_uploaded_at") @db.Date
  pccIssuedDate                 DateTime? @map("pcc_issued_date") @db.Date
  pccIssuedDateStatus           String?   @map("pcc_issued_date_status") @db.VarChar(45)
  pccIssuedDateRejectReason     String?   @map("pcc_issued_date_reject_reason") @db.VarChar(200)
  pccReferenceNo                String?   @map("pcc_reference_no") @db.VarChar(45)
  pccReferenceNoStatus          String?   @map("pcc_reference_no_status") @db.VarChar(45)
  pccReferenceNoRejectReason    String?   @map("pcc_reference_no_reject_reason") @db.VarChar(200)
  pccUrl                        String?   @map("pcc_url") @db.VarChar(500)
  pccUrlStatus                  String?   @map("pcc_url_status") @db.VarChar(45)
  pccUrlRejectReason            String?   @map("pcc_url_reject_reason") @db.VarChar(200)
  pccUploadedAt                 DateTime? @map("pcc_uploaded_at") @db.Date
  pccExpireDate                 DateTime? @map("pcc_expire_date") @db.Date
  pccState                      String?   @map("pcc_state") @db.VarChar(45)
  requireBackgroundCheck        String?   @map("require_background_check") @db.VarChar(45)
  contractStartDate             DateTime? @map("contract_start_date") @db.Date
  contractStartDateStatus       String?   @map("contract_start_date_status") @db.VarChar(45)
  contractStartDateRejectReason String?   @map("contract_start_date_reject_reason") @db.VarChar(200)
  contractEndDate               DateTime? @map("contract_end_date") @db.Date
  contractEndDateStatus         String?   @map("contract_end_date_status") @db.VarChar(45)
  contractEndDateRejectReason   String?   @map("contract_end_date_reject_reason") @db.VarChar(200)
  contractType                  String?   @map("contract_type") @db.VarChar(500)
  contractTypeStatus            String?   @map("contract_type_status") @db.VarChar(45)
  contractTypeRejectReason      String?   @map("contract_type_reject_reason") @db.VarChar(200)
  recordApproved                String?   @map("record_approved") @db.VarChar(45)
  updatedBy                     Int?      @map("updated_by")
  updatedAt                     DateTime? @map("updated_at") @db.DateTime(0)
  auditedBy                     Int?      @map("audited_by")
  auditedAt                     DateTime? @map("audited_at") @db.DateTime(0)
  user                          User      @relation(fields: [tspId], references: [tsp_id], onDelete: NoAction, onUpdate: NoAction, map: "FK_1569")

  @@index([tspId], map: "fkIdx_1570")
  @@map("hris_right2work_data")
}

model HrisWorkExpData {
  id                              Int                 @id @default(autoincrement())
  tspId                           Int                 @map("tsp_id")
  havePreTsg                      String?             @map("have_pre_tsg") @db.VarChar(45)
  havePreTsgStatus                String?             @map("have_pre_tsg_status") @db.VarChar(45)
  havePreTsgRejectReason          String?             @map("have_pre_tsg_reject_reason") @db.VarChar(200)
  preTsgType                      String?             @map("pre_tsg_type") @db.VarChar(100)
  preTsgStart                     DateTime?           @map("pre_tsg_start") @db.Date
  preTsgEnd                       DateTime?           @map("pre_tsg_end") @db.Date
  preWorkExp                      String?             @map("pre_work_exp") @db.VarChar(45)
  preWorkExpStatus                String?             @map("pre_work_exp_status") @db.VarChar(45)
  preWorkExpRejectReason          String?             @map("pre_work_exp_reject_reason") @db.VarChar(200)
  isCurrentlyEmployed             String?             @map("is_currently_employed") @db.VarChar(45)
  isCurrentlyEmployedStatus       String?             @map("is_currently_employed_status") @db.VarChar(45)
  isCurrentlyEmployedRejectReason String?             @map("is_currently_employed_reject_reason") @db.VarChar(200)
  currentEmpName                  String?             @map("current_emp_name") @db.VarChar(200)
  currentEmpType                  String?             @map("current_emp_type") @db.VarChar(100)
  currentEmpTitle                 String?             @map("current_emp_title") @db.VarChar(200)
  currentEmpStart                 DateTime?           @map("current_emp_start") @db.Date
  currentEmpTeaching              String?             @map("current_emp_teaching") @db.VarChar(45)
  currentEmpDocUrl                String?             @map("current_emp_doc_url") @db.VarChar(500)
  currentEmpDocUrlStatus          String?             @map("current_emp_doc_url_status") @db.VarChar(45)
  currentEmpDocUrlRejectReason    String?             @map("current_emp_doc_url_reject_reason") @db.VarChar(200)
  acknowledgmentCheck             String?             @map("acknowledgment_check") @db.VarChar(45)
  updatedBy                       Int?                @map("updated_by")
  updatedAt                       DateTime?           @map("updated_at") @db.DateTime(0)
  auditedBy                       Int?                @map("audited_by")
  auditedAt                       DateTime?           @map("audited_at") @db.DateTime(0)
  recordApproved                  String?             @map("record_approved") @db.VarChar(45)
  tutoringPartner                 String?             @map("tutoring_partner") @db.VarChar(45)
  user                            User                @relation(fields: [tspId], references: [tsp_id], onDelete: NoAction, onUpdate: NoAction, map: "FK_565")
  xother_work_exp_data            XotherWorkExpData[]

  @@index([tspId], map: "fkIdx_566")
  @@map("hris_work_exp_data")
}

model StemCriteria {
  id                     Int     @id @default(autoincrement())
  field_of_qualification String  @unique @db.VarChar(100)
  category               String? @db.VarChar(45)
  is_stem                Int?    @db.TinyInt

  @@map("stem_criteria")
}

model TmApprovedStatus {
  id                Int       @id @default(autoincrement())
  tutorTspId        Int       @unique @map("tutor_tsp_id")
  employeeStatus    String?   @map("employee_status") @db.VarChar(45)
  movementType      String?   @map("movement_type") @db.VarChar(45)
  subStatus         String?   @map("sub_status") @db.VarChar(45)
  statusDescription String?   @map("status_description") @db.VarChar(200)
  updatedAt         DateTime  @default(now()) @map("updated_at") @db.DateTime(0)
  updatedBy         Int?      @map("updated_by")
  department        String?   @db.VarChar(45)
  tutorLine         String?   @map("tutor_line") @db.VarChar(45)
  division          String?   @db.VarChar(45)
  supervisorTspId   Int?      @map("supervisor_tsp_id")
  supervisorName    String?   @map("supervisor_name") @db.VarChar(100)
  acTspId           Int?      @map("ac_tsp_id")
  acName            String?   @map("ac_name") @db.VarChar(100)
  acSecondaryTspId  Int?      @map("ac_secondary_tsp_id")
  acSecondaryName   String?   @map("ac_secondary_name") @db.VarChar(100)
  batch             String?   @db.VarChar(45)
  employmentType    String?   @map("employment_type") @db.VarChar(45)
  jobTitle          String?   @map("job_title") @db.VarChar(45)
  center            String?   @db.VarChar(45)
  lwd               DateTime? @map("lwd") @db.Date
  createdAt         DateTime  @default(now()) @map("created_at") @db.DateTime(0)
  user              User      @relation(fields: [tutorTspId], references: [tsp_id], onDelete: NoAction, onUpdate: NoAction)

  @@map("tm_approved_status")
}

model TmMasterTb {
  id                   Int       @id @default(autoincrement())
  tutorTspId           Int       @map("tutor_tsp_id")
  movementType         String?   @map("movement_type") @db.VarChar(45)
  withdrawalReason     String?   @map("withdrawal_reason") @db.VarChar(200)
  nextStatus           String?   @map("next_status") @db.VarChar(100)
  supervisorTspId      Int?      @map("supervisor_tsp_id")
  supervisorName       String?   @map("supervisor_name") @db.VarChar(100)
  resignationReason    String?   @map("resignation_reason") @db.VarChar(200)
  resignationGivenDate DateTime? @map("resignation_given_date") @db.Date
  returnDate           DateTime? @map("return_date") @db.Date
  description          String?   @db.VarChar(200)
  acTspId              Int?      @map("ac_tsp_id")
  acName               String?   @map("ac_name") @db.VarChar(100)
  department           String?   @db.VarChar(45)
  tutorLine            String?   @map("tutor_line") @db.VarChar(45)
  division             String?   @db.VarChar(45)
  tutorTierId          Int?      @map("tutor_tier_id")
  tutorTierDescription String?   @map("tutor_tier_description") @db.VarChar(45)
  effectiveDate        DateTime? @map("effective_date") @db.Date
  document             String?   @db.Text
  comment              String?   @db.VarChar(500)
  m1Approval           String?   @map("m1_approval") @db.VarChar(10)
  l1Approval           String?   @map("l1_approval") @db.VarChar(10)
  l2Approval           String?   @map("l2_approval") @db.VarChar(10)
  rejectReason         String?   @map("reject_reason") @db.VarChar(220)
  createdAt            DateTime  @default(now()) @map("created_at") @db.DateTime(0)
  createdBy            Int?      @map("created_by")
  updatedAt            DateTime  @default(now()) @map("updated_at") @db.DateTime(0)
  m1At                 DateTime? @map("m1_at") @db.DateTime(0)
  m1By                 Int?      @map("m1_by")
  l1At                 DateTime? @map("l1_at") @db.DateTime(0)
  l1By                 Int?      @map("l1_by")
  l2At                 DateTime? @map("l2_at") @db.DateTime(0)
  l2By                 Int?      @map("l2_by")
  movementStatus       String?   @map("movement_status") @db.VarChar(10)
  referenceId          Int?      @map("reference_id")
  user                 User      @relation(fields: [tutorTspId], references: [tsp_id], onDelete: NoAction, onUpdate: NoAction)

  @@map("tm_master_tb")
}

model TmScheduledMovements {
  id                  Int       @id @default(autoincrement())
  tutorTspId          Int       @map("tutor_tsp_id")
  exMovementType      String    @map("ex_movement_type") @db.VarChar(100)
  nxEmployeeStatus    String?   @map("nx_employee_status") @db.VarChar(100)
  nxMovementType      String?   @map("nx_movement_type") @db.VarChar(100)
  nxSubStatus         String?   @map("nx_sub_status") @db.VarChar(100)
  nxStatusDescription String?   @map("nx_status_description") @db.VarChar(100)
  nxDepartment        String?   @map("nx_department") @db.VarChar(100)
  nxTutorLine         String?   @map("nx_tutor_line") @db.VarChar(100)
  nxDivision          String?   @map("nx_division") @db.VarChar(100)
  nxSupervisorTspId   Int?      @map("nx_supervisor_tsp_id")
  nxSupervisorName    String?   @map("nx_supervisor_name") @db.VarChar(100)
  nxAcTspId           Int?      @map("nx_ac_tsp_id")
  nxAcName            String?   @map("nx_ac_name") @db.VarChar(100)
  createdAt           DateTime? @map("created_at") @db.DateTime(0)
  createdBy           Int?      @map("created_by")
  scheduledDate       DateTime? @map("scheduled_date") @db.Date
  cronAt              DateTime? @map("cron_at") @db.DateTime(0)
  cronStatus          Int       @default(0) @map("cron_status")
  cronAt3days         DateTime? @map("cron_at_3days") @db.DateTime(0)
  cronStatus3days     Int       @default(0) @map("cron_status_3days")
  user                User      @relation(fields: [tutorTspId], references: [tsp_id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([tutorTspId, exMovementType])
  @@map("tm_scheduled_movements")
}

model TmMetaData {
  id           Int      @id @default(autoincrement())
  category     String   @default("") @db.VarChar(100)
  sub_category String   @default("") @db.VarChar(100)
  value_name   String   @default("") @db.VarChar(100)
  value        String   @default("") @db.VarChar(100)
  status       Int      @default(1) @db.TinyInt
  created_at   DateTime @default(now()) @db.DateTime(0)
  created_by   Int?
  updated_at   DateTime @default(now()) @db.DateTime(0)
  updated_by   Int?

  @@unique([category, sub_category, value_name, value])
  @@map("tm_meta_data")
}

model User {
  tsp_id                          Int                             @id
  username                        String                          @unique @db.VarChar(200)
  password                        String                          @db.VarChar(100)
  level                           Int?
  isDeactivated                   Boolean                         @default(false) @map("is_deactivated")
  last_login_at                   DateTime?                       @db.DateTime(0)
  last_logout_at                  DateTime?                       @db.DateTime(0)
  isTemporaryDisabled             Boolean                         @default(false) @map("is_temporary_disabled")
  created_at                      DateTime?                       @default(now()) @db.DateTime(0)
  updated_at                      DateTime?                       @updatedAt @db.DateTime(0)
  approved_bank_data              ApprovedBankData?
  approved_contact_data           ApprovedContactData?
  approved_contract_data          ApprovedContractData?
  HrisContractData                HrisContractData[]
  HrisContractDataBackup          HrisContractDataBackup[]
  approved_education_data         ApprovedEducationData?
  approved_health_data            ApprovedHealthData?
  approved_it_data                ApprovedItData?
  approved_personal_data          ApprovedPersonalData?
  approved_qualifications_data    ApprovedQualificationsData?
  approved_right2work_data        ApprovedRight2workData?
  approved_work_exp_data          ApprovedWorkExpData?
  approved_referee_data           ApprovedRefereeData?
  approved_support_documents      ApprovedSupportDocuments?
  gra_cron_tracker                graCronTracker?
  BookingHistory                  BookingHistory[]                @relation("interviewerBooking")
  candidateBookingHistory         BookingHistory[]                @relation("candidateBooking")
  BookingStatus2                  BookingStatus[]                 @relation("candidate ")
  BookingStatus                   BookingStatus[]                 @relation("interviewer")
  CandidateLevel                  CandidateLevel?
  InterviewerAppointmentTypeRef   InterviewerAppointmentTypeRef[]
  VpMeetingLink                   VpMeetingLink?
  DemoAssessment                  DemoAssessment[]
  faCreatedBy                     DemoAssessment[]                @relation("faCreatedBy")
  faUpdatedBy                     DemoAssessment[]                @relation("faUpdatedBy")
  faTriggeredBy                   DemoAssessment[]                @relation("faTriggeredBy")
  DemoTalentlms                   DemoTalentlms[]
  FlexiCandidate                  FlexiCandidate?
  hris_access                     HrisAccess[]
  hris_assigned_auditor           HrisAssignedAuditor[]
  hris_audited_data               HrisAuditedData[]
  hris_bank_data                  HrisBankData[]
  hris_contact_data               HrisContactData[]
  hris_education_data             HrisEducationData[]
  hris_health_data                HrisHealthData[]
  hris_it_data                    HrisItData[]
  hris_operations_inputs          HrisOperationsInputs[]
  hris_personal_data              HrisPersonalData[]
  hris_support_documents          HrisSupportDocuments[]
  user_hris_progress              HrisProgress?                   @relation("user_progress")
  auditor_hris_progress           HrisProgress[]                  @relation("auditor_progress")
  hris_qualifications_data        HrisQualificationsData[]
  hris_right2work_data            HrisRight2workData[]
  hris_work_exp_data              HrisWorkExpData[]
  piRef                           PiRef[]
  tm_approved_status              TmApprovedStatus?
  tm_master_tb                    TmMasterTb[]
  tm_scheduled_movements          TmScheduledMovements[]
  graRegistrationData             GraRegistrationData?
  EducationResult                 EducationResult[]
  teachingInterview               TeachingInterview[]
  tiCreatedBy                     TeachingInterview[]             @relation("tiCreatedBy")
  candidateLevelId                Int?
  HrisRefereeData                 HrisRefereeData[]
  HrisReferenceCollected          HrisReferenceCollected[]
  auditorNoteByAuditor            AuditorNote[]                   @relation("hris_auditor_note_auditor")
  auditorNoteByCandidate          AuditorNote[]                   @relation("hris_auditor_note_candidate")
  ApprovedJobRequisition          ApprovedJobRequisition?         @relation("approved_job_requisition_users")
  ApprovedJobRequisitionUpdaters  ApprovedJobRequisition[]        @relation("approved_job_requisition_updaters")
  ApprovedJobRequisitionApprovers ApprovedJobRequisition[]        @relation("approved_job_requisition_approvers")
  HrisJobRequisition              HrisJobRequisition[]
  AccessUsersOnGroups             AccessUsersOnGroups[]
  AccessUsersOnModules            AccessUsersOnModules[]
  sesRevampEvaluation             SesRevampEvaluation[]
  GOAChangeRequests               GOAChangeRequests[]
  GOALaunchedSessions             GOALaunchedSessions[]
  GOATimeOff                      GOATimeOff[]
  GOATutorHourState               GOATutorHourState[]
  GOATutorsSlots                  GOATutorsSlots[]
  GOATutorTier                    GOATutorTier[]
  TslUser                         TslUser[]
  hrisPccCron                     HrisPccCron[]
  approved_dbs_data               ApprovedDbsData?
  hris_dbs_data                   HrisDbsData[]
  approved_xother_quali_data      ApprovedXotherQualiData[]
  approved_xother_work_exp_data   ApprovedXotherWorkExpData[]
  GOASessionFlags                 GOASessionFlags[]
  GOAInvoice                      GOAInvoice[]
  NTProfile                       NonTutorDirectory?
  userSimsMaster                  SimsMaster[]                    @relation("UserSimsMaster")
  userCreatedBy                   SimsMaster[]                    @relation("UserCreatedBy")
  userUpdatedBy                   SimsMaster[]                    @relation("UserUpdatedBy")
  userRelationshipManagerId       SimsMaster[]                    @relation("UserRelationshipManagerId")
  ApprovedXotherAdminDocs         ApprovedXotherAdminDocs[]
  NTHRISJobData                   NTHRISJobData[]
  ApprovedJobData                 ApprovedJobData?
  CapautSessionsToday             CapautSessionsToday[]
  GRASlot                         GRASlot[]
  GoaSessionsToday                GoaSessionsToday[]
  GoaSessionsFuture               GoaSessionsFuture[]
  initialAssessment               InitialAssessment[]
  iaCreatedBy                     InitialAssessment[]             @relation("iaCreatedBy")
  ftAssessment                    FtAssessment[]
  ftaCreatedBy                    FtAssessment[]                  @relation("ftaCreatedBy")
  ftaUpdatedBy                    FtAssessment[]                  @relation("ftaUpdatedBy")
  ftaTriggeredBy                  FtAssessment[]                  @relation("ftaTriggeredBy")
  bsTutorJourneyTracker           BsTutorJourneyTracker[]
  bstjtCreatedBy                  BsTutorJourneyTracker[]         @relation("bstjtCreatedBy")

  GOASessionSwapOld GOASessionSwapOld[]

  @@map("user")
}

model XfamilyAffiliations {
  id                    Int              @id @default(autoincrement())
  pdId                  Int              @map("pd_id")
  userId                Int              @map("user_id")
  affiliateName         String?          @map("affiliate_name") @db.VarChar(200)
  affiliateRelationship String?          @map("affiliate_relationship") @db.VarChar(45)
  affiliateJob          String?          @map("affiliate_job") @db.VarChar(100)
  updatedBy             Int?             @map("updated_by")
  updatedAt             DateTime?        @default(now()) @map("updated_at") @db.DateTime(0)
  hris_personal_data    HrisPersonalData @relation(fields: [pdId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_704")

  @@index([pdId], map: "fkIdx_705")
  @@map("xfamily_affiliations")
}

model XotherQualiData {
  id                         Int                      @id @unique @default(autoincrement())
  qId                        Int                      @map("q_id")
  tspId                      Int                      @map("user_id")
  localId                    Int?                     @map("local_id")
  courseType                 String?                  @map("course_type") @db.VarChar(100)
  courseTypeStatus           String?                  @map("course_type_status") @db.VarChar(45)
  courseTypeRejectReason     String?                  @map("course_type_reject_reason") @db.VarChar(200)
  fieldStudy                 String?                  @map("field_study") @db.VarChar(100)
  fieldStudyStatus           String?                  @map("field_study_status") @db.VarChar(45)
  fieldStudyRejectReason     String?                  @map("field_study_reject_reason") @db.VarChar(200)
  hasMathStat                Boolean?                 @map("has_math_stat")
  hasMathStatStatus          String?                  @map("has_math_stat_status") @db.VarChar(45)
  hasMathStatRejectReason    String?                  @map("has_math_stat_reject_reason") @db.VarChar(200)
  hasCompleted               String?                  @map("has_completed") @db.VarChar(45)
  hasCompletedStatus         String?                  @map("has_completed_status") @db.VarChar(45)
  hasCompletedRejectReason   String?                  @map("has_completed_reject_reason") @db.VarChar(200)
  startYear                  DateTime?                @map("start_year") @db.Date
  startYearStatus            String?                  @map("start_year_status") @db.VarChar(45)
  startYearRejectReason      String?                  @map("start_year_reject_reason") @db.VarChar(200)
  completionYear             DateTime?                @map("completion_year") @db.Date
  completionYearStatus       String?                  @map("completion_year_status") @db.VarChar(45)
  completionYearRejectReason String?                  @map("completion_year_reject_reason") @db.VarChar(200)
  isLocal                    String?                  @map("is_local") @db.VarChar(45)
  isLocalStatus              String?                  @map("is_local_status") @db.VarChar(45)
  isLocalRejectReason        String?                  @map("is_local_reject_reason") @db.VarChar(200)
  mainInst                   String?                  @map("main_inst") @db.VarChar(200)
  mainInstStatus             String?                  @map("main_inst_status") @db.VarChar(45)
  mainInstRejectReason       String?                  @map("main_inst_reject_reason") @db.VarChar(200)
  affiInst                   String?                  @map("affi_inst") @db.VarChar(200)
  affiInstStatus             String?                  @map("affi_inst_status") @db.VarChar(45)
  affiInstRejectReason       String?                  @map("affi_inst_reject_reason") @db.VarChar(200)
  docUrl                     String?                  @map("doc_url") @db.VarChar(500)
  docUrlStatus               String?                  @map("doc_url_status") @db.VarChar(45)
  docUrlRejectReason         String?                  @map("doc_url_reject_reason") @db.VarChar(200)
  areaOfStudy                String?                  @map("area_of_study") @db.VarChar(45)
  areaOfStudyRejectReason    String?                  @map("area_of_study_reject_reason") @db.VarChar(200)
  areaOfStudyStatus          String?                  @map("area_of_study_status") @db.VarChar(45)
  updatedBy                  Int?                     @map("updated_by")
  updatedAt                  DateTime?                @default(now()) @map("updated_at") @db.DateTime(0)
  isHighestQualification     Boolean?                 @default(false) @map("is_highest_qualification")
  hris_qualifications_data   HrisQualificationsData   @relation(fields: [qId], references: [id])
  approvedXotherQualiData    ApprovedXotherQualiData?

  @@map("xother_quali_data")
}

model XotherWorkExpData {
  id                        Int                        @id @default(autoincrement())
  weId                      Int                        @map("we_id")
  localId                   Int?                       @map("local_id")
  employerName              String?                    @map("employer_name") @db.VarChar(100)
  employmentType            String?                    @map("employment_type") @db.VarChar(100)
  jobTitle                  String?                    @map("job_title") @db.VarChar(100)
  currentlyEmployed         String?                    @map("currently_employed") @db.VarChar(20)
  startDate                 DateTime?                  @map("start_date") @db.Date
  endDate                   DateTime?                  @map("end_date") @db.Date
  teachingExp               String?                    @map("teaching_exp") @db.VarChar(20)
  docUrl                    String?                    @map("doc_url") @db.VarChar(200)
  docUrlStatus              String?                    @map("doc_url_status") @db.VarChar(45)
  docUrlRejectReason        String?                    @map("doc_url_reject_reason") @db.VarChar(200)
  updatedBy                 Int?                       @map("updated_by")
  updatedAt                 DateTime?                  @default(now()) @map("updated_at") @db.DateTime(0)
  hris_work_exp_data        HrisWorkExpData            @relation(fields: [weId], references: [id])
  ApprovedXotherWorkExpData ApprovedXotherWorkExpData?

  @@map("xother_work_exp_data")
}

model XotherEducationData {
  id                          Int               @id @default(autoincrement())
  eId                         Int               @map("e_id")
  alSubject                   String?           @map("al_subject") @db.VarChar(200)
  alSubjectStatus             String?           @map("al_subject_status") @db.VarChar(45)
  alSubjectRejectReason       String?           @map("al_subject_reject_reason") @db.VarChar(200)
  alSubjectResult             String?           @map("al_subject_result") @db.VarChar(20)
  alSubjectResultStatus       String?           @map("al_subject_result_status") @db.VarChar(45)
  alSubjectResultRejectReason String?           @map("al_subject_result_reject_reason") @db.VarChar(200)
  hris_education_data         HrisEducationData @relation(fields: [eId], references: [id])

  @@map("xother_education_data")
}

model XfamilyMembersParents {
  id                 Int              @id @default(autoincrement())
  pdId               Int              @map("pd_id")
  userId             Int              @map("user_id")
  memberName         String?          @map("member_name") @db.VarChar(200)
  relationship       String?          @map("relationship") @db.VarChar(45)
  memberDob          String?          @map("member_dob") @db.VarChar(100)
  memberNic          String?          @map("member_nic") @db.VarChar(100)
  updatedBy          Int?             @map("updated_by")
  updatedAt          DateTime?        @default(now()) @map("updated_at") @db.DateTime(0)
  hris_personal_data HrisPersonalData @relation(fields: [pdId], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@map("xfamily_members_parents")
}

model XfamilyMembersChildren {
  id                 Int              @id @default(autoincrement())
  pdId               Int              @map("pd_id")
  userId             Int              @map("user_id")
  childName          String?          @map("child_name") @db.VarChar(200)
  childDob           String?          @map("child_dob") @db.VarChar(100)
  updatedBy          Int?             @map("updated_by")
  updatedAt          DateTime?        @default(now()) @map("updated_at") @db.DateTime(0)
  hris_personal_data HrisPersonalData @relation(fields: [pdId], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@map("xfamily_members_children")
}

model OtpRegister {
  email     String    @unique @db.VarChar(250)
  otp       String    @db.VarChar(45)
  createdAt DateTime? @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt DateTime? @default(now()) @map("updated_at") @db.DateTime(0)

  @@map("otp_register")
}

model InterviewSlot {
  slot_id      Int       @id @default(autoincrement())
  interview_id Int
  date         String?   @db.VarChar(1000)
  slot         String?
  slot_time    String?
  updated_at   DateTime? @default(now()) @db.DateTime(0)

  @@map("interview_slot")
}

model SlotType {
  id             Int              @id
  short_name     String?          @db.VarChar(100)
  name           String?          @db.VarChar(100)
  created_at     DateTime?        @default(now()) @db.DateTime(0)
  created_by     Int?
  updated_at     DateTime?        @default(now()) @db.DateTime(0)
  updated_by     Int?
  AllBookingSlot AllBookingSlot[]

  @@map("bs_slot_type")
}

model AllBookingSlot {
  id                      Int                 @id
  slot_type               Int?
  status                  Int?                @default(1) @db.TinyInt
  slot_time               String?             @db.VarChar(45)
  appointment_type        Int?
  start_time              DateTime?           @db.DateTime(0)
  end_time                DateTime?           @db.DateTime(0)
  duration                Int?                @db.SmallInt
  created_at              DateTime?           @default(now()) @db.DateTime(0)
  created_by              Int?
  updated_at              DateTime?           @default(now()) @db.DateTime(0)
  updated_by              Int?
  bs_appointment_type_ref AppointmentTypeRef? @relation(fields: [appointment_type], references: [id], onDelete: NoAction, onUpdate: NoAction)
  bs_slot_type            SlotType?           @relation(fields: [slot_type], references: [id], onDelete: NoAction, onUpdate: NoAction)
  BookingHistory          BookingHistory[]
  BookingStatus           BookingStatus[]
  SlotCount               SlotCount[]

  @@index([appointment_type], map: "bs_all_booking_slot_appointment_type_fkey")
  @@index([slot_type], map: "bs_all_booking_slot_slot_type_fkey")
  @@map("bs_all_booking_slot")
}

model SlotCount {
  id                  Int            @id
  all_booking_slot_id Int
  count               Int
  Date                DateTime?      @default(now()) @db.DateTime(0)
  created_at          DateTime?      @default(now()) @db.DateTime(0)
  created_by          Int?
  updated_at          DateTime?      @default(now()) @db.DateTime(0)
  updated_by          Int?
  bs_all_booking_slot AllBookingSlot @relation(fields: [all_booking_slot_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([all_booking_slot_id], map: "bs_slot_count_all_booking_slot_id_fkey")
  @@map("bs_slot_count")
}

model BookingHistory {
  id                      Int                 @id @default(autoincrement())
  booking_id              Int?
  date                    DateTime?           @db.Date
  slot_time_id            Int?
  appointment_type_id     Int?
  booking_status_id       Int?
  withdraw_reason         String              @db.Text
  special_note            String?             @db.VarChar(95)
  created_at              DateTime?           @default(now()) @db.DateTime(0)
  created_by              Int?
  updated_at              DateTime?           @default(now()) @db.DateTime(0)
  updated_by              Int?
  candidate_id            Int?
  interviewer_id          Int?
  bs_appointment_type_ref AppointmentTypeRef? @relation(fields: [appointment_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  bs_booking_status_ref   BookingStatusRef?   @relation(fields: [booking_status_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user                    User?               @relation("candidateBooking", fields: [candidate_id], references: [tsp_id])
  interviewer             User?               @relation("interviewerBooking", fields: [interviewer_id], references: [tsp_id])
  bs_booking_status       BookingStatus?      @relation(fields: [booking_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  bs_all_booking_slot     AllBookingSlot?     @relation(fields: [slot_time_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([appointment_type_id], map: "bs_booking_history_appointment_type_id_fkey")
  @@index([booking_status_id], map: "bs_booking_history_booking_status_id_fkey")
  @@index([candidate_id], map: "bs_booking_history_candidate_id_fkey")
  @@index([slot_time_id], map: "bs_booking_history_slot_time_id_fkey")
  @@map("bs_booking_history")
}

model VpMeetingLink {
  id         Int       @id @default(autoincrement())
  url        String    @db.VarChar(256)
  user_id    Int       @unique
  status     Int       @default(1)
  created_at DateTime? @default(now()) @db.DateTime(0)
  created_by Int?
  updated_at DateTime? @default(now()) @db.DateTime(0)
  updated_by Int?
  user       User      @relation(fields: [user_id], references: [tsp_id], onDelete: NoAction, onUpdate: NoAction)

  @@index([user_id], map: "bs_vp_meeting_link_user_id_fkey")
  @@map("bs_vp_meeting_link")
}

model BookingStatusRef {
  id             Int              @id
  status         String?          @db.Text
  created_at     DateTime?        @default(now()) @db.DateTime(0)
  created_by     Int?
  updated_at     DateTime?        @default(now()) @db.DateTime(0)
  updated_by     Int?
  BookingHistory BookingHistory[]
  BookingStatus  BookingStatus[]
  piCallLogs     PiCallLog[]

  @@map("bs_booking_status_ref")
}

model AppointmentTypeRef {
  id                            Int                             @id
  type                          String?                         @db.VarChar(45)
  event_title                   String?                         @db.VarChar(100)
  event_description             String?                         @db.Text
  number_of_attempts            Int?
  noshow_threshold              Int?
  re_attempt_days               Int?
  reschedule_time_hours         Int?
  enabled                       Int?                            @default(1) @db.TinyInt
  event_duration                Int?                            @db.SmallInt
  candi_reschedule_limit        Int?
  candi_join_btn_time           Int?                            @db.SmallInt
  candi_edit_btn_time           Int?                            @db.SmallInt
  candi_slot_booking_btn_time   Int?                            @db.SmallInt
  int_check_btn_time            Int?                            @db.SmallInt
  int_slot_available_btn_time   Int?                            @db.SmallInt
  created_at                    DateTime?                       @default(now()) @db.DateTime(0)
  created_by                    Int?
  updated_at                    DateTime?                       @default(now()) @db.DateTime(0)
  updated_by                    Int?
  AllBookingSlot                AllBookingSlot[]
  BookingHistory                BookingHistory[]
  BookingStatus                 BookingStatus[]
  InterviewerAppointmentTypeRef InterviewerAppointmentTypeRef[]

  @@map("bs_appointment_type_ref")
}

model InterviewerAppointmentTypeRef {
  id                      Int                 @id @default(autoincrement())
  user_id                 Int
  status                  Int                 @default(0) @db.TinyInt
  appointment_type        Int
  created_at              DateTime?           @default(now()) @db.DateTime(0)
  created_by              Int?
  updated_at              DateTime?           @default(now()) @db.DateTime(0)
  updated_by              Int?
  bs_appointment_type_ref AppointmentTypeRef? @relation(fields: [appointment_type], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user                    User?               @relation(fields: [user_id], references: [tsp_id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([user_id, appointment_type])
  @@index([appointment_type], map: "bs_interviewer_appointment_type_ref_appointment_type_fkey")
  @@index([user_id], map: "bs_interviewer_appointment_type_ref_user_id_fkey")
  @@map("bs_interviewer_appointment_type_ref")
}

model BookingStatus {
  id                      Int                 @id @default(autoincrement())
  interviewer_id          Int
  time_slot_id            Int
  candidate_id            Int?
  status                  Int?
  date                    DateTime?           @db.Date
  created_at              DateTime?           @default(now()) @db.DateTime(0)
  updated_at              DateTime?           @default(now()) @db.DateTime(0)
  appointment_type_ref_id Int?
  created_by              Int?
  updated_by              Int?
  date_slot_inter         String?             @db.VarChar(45)
  appointment_type_ref    AppointmentTypeRef? @relation(fields: [appointment_type_ref_id], references: [id])
  candidate               User?               @relation("candidate ", fields: [candidate_id], references: [tsp_id])
  interviewer             User                @relation("interviewer", fields: [interviewer_id], references: [tsp_id])
  bs_booking_status_ref   BookingStatusRef?   @relation(fields: [status], references: [id], onDelete: NoAction, onUpdate: NoAction)
  bs_all_booking_slot     AllBookingSlot      @relation(fields: [time_slot_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  piRefs                  PiRef[]
  teachingInterview       TeachingInterview[]
  BookingHistory          BookingHistory[]
  initialAssessment       InitialAssessment[]
  ftAssessment            FtAssessment[]

  @@index([appointment_type_ref_id], map: "bs_booking_status_appointment_type_ref_id_fkey")
  @@index([candidate_id], map: "bs_booking_status_candidate_id_fkey")
  @@index([interviewer_id], map: "bs_booking_status_interviewer_id_fkey")
  @@index([status], map: "bs_booking_status_status_fkey")
  @@index([time_slot_id], map: "bs_booking_status_time_slot_id_fkey")
  @@map("bs_booking_status")
}

model ApssIncidentLogTable {
  id         Int       @id @default(autoincrement())
  created_by Int?
  created_at DateTime? @default(now()) @db.DateTime(0)
  system     String?   @db.VarChar(45)
  action     String?   @db.VarChar(45)
  comment    String?   @db.VarChar(100)
  dataSet    String?   @map("data_set") @db.Text

  @@map("bs_incident_log_table")
}

model CandidateLevel {
  id                Int       @id @default(autoincrement())
  candidate_id      Int       @unique
  level             Int?
  step1             String?   @db.VarChar(10)
  step1UpdatedAt    DateTime? @map("step1_updated_at") @db.DateTime(0)
  step2             String?   @db.VarChar(10)
  step2UpdatedAt    DateTime? @map("step2_updated_at") @db.DateTime(0)
  step3             String?   @db.VarChar(10)
  step3UpdatedAt    DateTime? @map("step3_updated_at") @db.DateTime(0)
  step4             String?   @db.VarChar(10)
  step4UpdatedAt    DateTime? @map("step4_updated_at") @db.DateTime(0)
  step5             String?   @db.VarChar(10)
  step5UpdatedAt    DateTime? @map("step5_updated_at") @db.DateTime(0)
  step6             String?   @db.VarChar(10)
  step6UpdatedAt    DateTime? @map("step6_updated_at") @db.DateTime(0)
  step7             String?   @db.VarChar(10)
  step7UpdatedAt    DateTime? @map("step7_updated_at") @db.DateTime(0)
  step8             String?   @db.VarChar(10)
  step8UpdatedAt    DateTime? @map("step8_updated_at") @db.DateTime(0)
  createdAt         DateTime  @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt         DateTime  @default(now()) @updatedAt @map("updated_at") @db.DateTime(0)
  specialNote       String?   @map("special_note") @db.VarChar(45)
  manuallyCreatedOn DateTime? @map("manually_created_on") @db.Date
  ftLvl1Enabled     Int?      @default(0) @map("ft_lvl1_enabled") @db.TinyInt
  ftLvl1EnabledAt   DateTime? @map("ft_lvl1_enabled_at") @db.DateTime(0)
  ftLvl1Completed   Int?      @map("ft_lvl1_completed") @db.TinyInt
  ftLvl1CompletedAt DateTime? @map("ft_lvl1_completed_at") @db.DateTime(0)
  ftLvl2Enabled     Int?      @default(0) @map("ft_lvl2_enabled") @db.TinyInt
  ftLvl2EnabledAt   DateTime? @map("ft_lvl2_enabled_at") @db.DateTime(0)
  ftLvl2Completed   Int?      @map("ft_lvl2_completed") @db.TinyInt
  ftLvl2CompletedAt DateTime? @map("ft_lvl2_completed_at") @db.DateTime(0)
  trainingStatus    String?   @map("training_status") @db.VarChar(45)
  failedState       Int?      @default(0) @map("failed_state") @db.TinyInt
  failedLevel       String?   @map("failed_level") @db.VarChar(20)
  failedAt          DateTime? @map("failed_at") @db.DateTime(0)

  candidate User @relation(fields: [candidate_id], references: [tsp_id])

  @@index([candidate_id], map: "bs_candi_level_candidate_id_fkey")
  @@map("bs_candidate_level")
}

model PiRef {
  id              Int         @id @default(autoincrement())
  bookingStatusId Int?        @map("booking_status_id")
  tspId           Int?        @map("tsp_id")
  createdAt       DateTime?   @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt       DateTime?   @default(now()) @map("updated_at") @db.DateTime(0)
  updatedBy       Int?        @map("updated_by")
  user            User?       @relation(fields: [tspId], references: [tsp_id])
  piCallLogs      PiCallLog[]
  piDatas         PiData[]

  bookingStatus BookingStatus? @relation(fields: [bookingStatusId], references: [id])

  @@map("pi_ref")
}

model PiCallLog {
  id          Int       @id @default(autoincrement())
  piRefId     Int?      @map("pi_ref_id")
  callAttempt Int       @map("call_attempt")
  piStatus    Int       @map("pi_status")
  date        DateTime?
  createdAt   DateTime? @default(now()) @map("created_at") @db.DateTime(0)
  createdBy   Int?      @map("created_by")
  piRef       PiRef?    @relation(fields: [piRefId], references: [id])

  BookingStatusRef BookingStatusRef? @relation(fields: [piStatus], references: [id])

  @@index([piRefId], map: "pi_call_log_pi_ref_id_fkey")
  @@map("pi_call_log")
}

model PiData {
  id                     Int       @id @default(autoincrement())
  piRefId                Int?      @map("pi_ref_id")
  languageCheck          String?   @map("language_check") @db.VarChar(15)
  grammar                Int?
  pronounciation         Int?
  sentenceFormation      Int?      @map("sentence_formation")
  languageReason         String?   @map("language_reason") @db.VarChar(110)
  languageOther          String?   @map("language_other") @db.VarChar(230)
  mathCheck              String?   @map("math_check") @db.VarChar(15)
  simpleMathematics      Int?      @map("simple_mathematics")
  mathReason             String?   @map("math_reason") @db.VarChar(110)
  mathOther              String?   @map("math_other") @db.VarChar(230)
  educationQualification String?   @map("education_qualification") @db.VarChar(45)
  cityStatus             String?   @map("city_status") @db.VarChar(45)
  workStatus             String?   @map("work_status") @db.VarChar(45)
  paymentMethodStatus    String?   @map("payment_method_status") @db.VarChar(45)
  overallComments        String?   @map("overall_comments") @db.VarChar(770)
  finalOutcome           String?   @map("final_outcome") @db.VarChar(45)
  finalReason            String?   @map("final_reason") @db.VarChar(110)
  finalReasonOther       String?   @map("final_reason_other") @db.VarChar(770)
  adminAdditionalComment String?   @map("admin_additional_comment") @db.VarChar(770)
  createdAt              DateTime? @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt              DateTime? @default(now()) @map("updated_at") @db.DateTime(0)
  updatedBy              Int?      @map("updated_by")
  bsBookingId            Int?      @map("bs_booking_id")
  piRef                  PiRef?    @relation(fields: [piRefId], references: [id])

  @@map("pi_data")
}

model DemoAssessment {
  id                           Int       @id @default(autoincrement())
  tspId                        Int?      @map("tsp_id")
  name                         String?   @db.VarChar(100)
  batch                        String?   @db.VarChar(20)
  email                        String?   @db.VarChar(50)
  attempt                      String?   @db.VarChar(20)
  primaryAttendance            String?   @map("primary_attendance") @db.VarChar(20)
  demoDate                     DateTime? @map("demo_date") @db.Date
  attendanceComment            String?   @map("attendance_comment") @db.Text
  audioTechIssues              String?   @map("audio_tech_issues") @db.VarChar(300)
  equipmentLocationIssues      String?   @map("equipment_location_issues") @db.VarChar(100)
  speedTestLink                String?   @map("speed_test_link") @db.VarChar(220)
  technicalComment             String?   @map("technical_comment") @db.Text
  microphone                   Int?
  conceptualExplanation        Int?      @map("conceptual_explanation")
  skOverallRatings             Int?      @map("sk_overall_ratings")
  skComment                    String?   @map("sk_comment") @db.Text
  preAssessment                Int?      @map("pre_assessment")
  adaptation                   Int?
  postAssessment               Int?      @map("post_assessment")
  sctOverallRating             Int?      @map("sct_overall_rating")
  sctAssessmentComment         String?   @map("sct_assessment_comment") @db.Text
  interactionEngagement        Int?      @map("interaction_engagement")
  interactionEffort            Int?      @map("interaction_effort")
  interactionProfessionalism   Int?      @map("interaction_professionalism")
  interactionOverallRating     Int?      @map("interaction_overall_rating")
  interactionComment           String?   @map("interaction_comment") @db.Text
  vocabulary                   Int?
  pronunciation                Int?
  grammar                      Int?
  rateOfSpeech                 Int?      @map("rate_of_speech")
  comprehension                Int?
  languageOverallRating        Int?      @map("language_overall_rating")
  languageComment              String?   @map("language_comment") @db.Text
  identifyingWww               Int?      @map("identifying_www")
  identifyingEbi               Int?      @map("identifying_ebi")
  positiveMindset              Int?      @map("positive_mindset")
  reflectionOverallRating      Int?      @map("reflection_overall_rating")
  reflectionComment            String?   @map("reflection_comment") @db.Text
  sessionFlow                  Int?      @map("session_flow")
  classroomResources           Int?      @map("classroom_resources")
  sessionOps                   Int?      @map("session_ops")
  familiarityOverallRating     Int?      @map("familiarity_overall_rating")
  familiarityComment           String?   @map("familiarity_comment") @db.Text
  whatWentWell                 String?   @map("what_went_well") @db.Text
  whatNeedsToBeImproved        String?   @map("what_needs_to_be_improved") @db.Text
  finalOutcome                 String?   @map("final_outcome") @db.VarChar(50)
  failReason1                  String?   @map("fail_reason_1") @db.VarChar(50)
  failReason2                  String?   @map("fail_reason_2") @db.VarChar(50)
  finalDecision                String?   @map("final_decision") @db.VarChar(50)
  finalComment                 String?   @map("final_comment") @db.Text
  finalReason                  String?   @map("final_reason") @db.VarChar(50)
  createdAt                    DateTime? @default(now()) @map("created_at") @db.DateTime(0)
  createdBy                    Int?      @map("created_by")
  updatedAt                    DateTime? @default(now()) @map("updated_at") @db.DateTime(0)
  updatedBy                    Int?      @map("updated_by")
  triggeredBy                  Int?      @map("triggered_by")
  triggeredAt                  DateTime? @map("triggered_at") @db.DateTime(0)
  emailStatus                  Int?      @map("email_status") @db.TinyInt
  tiRecordId                   Int?      @map("ti_record_id")
  telentlmsId                  Int?      @map("telentlms_id")
  sessionRating                Int?      @map("session_rating")
  bsBookingId                  Int?      @map("bs_booking_id")
  overallSessionRating         String?   @map("overall_session_rating") @db.VarChar(50)
  positiveActionsPOne          String?   @map("positive_actions_p_one") @db.VarChar(50)
  positiveActionsPOneComment   String?   @map("positive_actions_p_one_comment") @db.Text
  positiveActionsPTwo          String?   @map("positive_actions_p_two") @db.VarChar(50)
  positiveActionsPTwoComment   String?   @map("positive_actions_p_two_comment") @db.Text
  positiveActionsPThree        String?   @map("positive_actions_p_three") @db.VarChar(50)
  positiveActionsPThreeComment String?   @map("positive_actions_p_three_comment") @db.Text
  focusAreaPOne                String?   @map("focus_area_p_one") @db.VarChar(50)
  focusAreaPOneComment         String?   @map("focus_area_p_one_comment") @db.Text
  focusAreaPTwo                String?   @map("focus_area_p_two") @db.VarChar(50)
  focusAreaPTwoComment         String?   @map("focus_area_p_two_comment") @db.Text
  focusAreaPThree              String?   @map("focus_area_p_three") @db.VarChar(50)
  focusAreaPThreeComment       String?   @map("focus_area_p_three_comment") @db.Text
  user                         User?     @relation(fields: [tspId], references: [tsp_id], onDelete: NoAction, onUpdate: NoAction)
  faCreatedBy                  User?     @relation("faCreatedBy", fields: [createdBy], references: [tsp_id])
  faUpdatedBy                  User?     @relation("faUpdatedBy", fields: [updatedBy], references: [tsp_id])
  faTriggeredBy                User?     @relation("faTriggeredBy", fields: [triggeredBy], references: [tsp_id])

  @@map("demo_assessment")
}

model DemoTalentlms {
  tsp_id            Int?
  email             String?   @db.VarChar(100)
  course_completion Decimal?  @db.Decimal(5, 2)
  course_score_avg  Decimal?  @db.Decimal(5, 2)
  attendance        Decimal?  @db.Decimal(5, 2)
  cpd_familiarity   Decimal?  @db.Decimal(5, 2)
  cpd_sct           Decimal?  @db.Decimal(5, 2)
  cpd_language      Decimal?  @db.Decimal(5, 2)
  cpd_sk            Decimal?  @db.Decimal(5, 2)
  cpd_reflection    Decimal?  @db.Decimal(5, 2)
  cpd               Decimal?  @db.Decimal(5, 2)
  ti_record_id      Int?
  created_at        DateTime? @default(now()) @db.DateTime(0)
  updated_at        DateTime? @default(now()) @db.DateTime(0)
  id                Int       @id @default(autoincrement())
  copied            Int?      @default(0) @db.TinyInt
  user              User?     @relation(fields: [tsp_id], references: [tsp_id], onDelete: NoAction, onUpdate: NoAction)

  @@index([tsp_id], map: "demo_talentlms_tsp_id_fkey")
  @@map("demo_talentlms")
}

model DemoTalentlmsRejects {
  tsp_id            String?   @db.VarChar(100)
  email             String?   @db.VarChar(100)
  course_completion Decimal?  @db.Decimal(5, 2)
  course_score_avg  Decimal?  @db.Decimal(5, 2)
  attendance        Decimal?  @db.Decimal(5, 2)
  cpd_familiarity   Decimal?  @db.Decimal(5, 2)
  cpd_sct           Decimal?  @db.Decimal(5, 2)
  cpd_language      Decimal?  @db.Decimal(5, 2)
  cpd_sk            Decimal?  @db.Decimal(5, 2)
  cpd_reflection    Decimal?  @db.Decimal(5, 2)
  cpd               Decimal?  @db.Decimal(5, 2)
  ti_record_id      Int?
  created_at        DateTime? @default(now()) @db.DateTime(0)
  updated_at        DateTime? @default(now()) @db.DateTime(0)
  id                Int       @id @default(autoincrement())
  copied            Int?      @db.TinyInt

  @@map("demo_talentlms_rejects")
}

model TutorBatchList {
  id                    Int       @id @default(autoincrement())
  batchName             String    @unique @map("batch_name") @db.VarChar(45)
  batchActive           Int       @default(1) @map("batch_active") @db.TinyInt
  teamLeadTspId         Int?      @map("team_lead_tsp_id")
  teamLeadName          String?   @map("team_lead_name") @db.VarChar(100)
  trainingBrief1Date    DateTime? @map("training_brief1_date") @db.Date
  trainingBrief1Time    String?   @map("training_brief1_time") @db.VarChar(45)
  trainingBrief1Link    String?   @map("training_brief1_link") @db.VarChar(220)
  level1StandupCallDate DateTime? @map("level1_standup_call_date") @db.Date
  level1StandupCallTime String?   @map("level1_standup_call_time") @db.VarChar(45)
  level1StandupCallLink String?   @map("level1_standup_call_link") @db.VarChar(220)
  level2StandupCallDate DateTime? @map("level2_standup_call_date") @db.Date
  level2StandupCallTime String?   @map("level2_standup_call_time") @db.VarChar(45)
  level2StandupCallLink String?   @map("level2_standup_call_link") @db.VarChar(220)
  created_at            DateTime  @default(now()) @db.DateTime(0)
  created_by            Int?
  updated_at            DateTime  @default(now()) @db.DateTime(0)
  updated_by            Int?

  @@map("tutor_batch_list")
}

model TeachingInterview {
  id                          Int       @id @default(autoincrement())
  tspId                       Int?      @map("tsp_id")
  date                        DateTime? @db.Date
  attendance                  String?   @db.VarChar(20)
  attendComment               String?   @map("attend_comment") @db.Text
  workingPlace                String?   @map("working_place") @db.VarChar(50)
  preparation                 String?   @db.VarChar(150)
  slideUsed                   String?   @map("slide_used") @db.VarChar(20)
  safeguardingQuestion        String?   @map("safeguarding_question") @db.VarChar(20)
  safeguarding                String?   @db.VarChar(20)
  safeguardingComment         String?   @map("safeguarding_comment") @db.Text
  lanVocabulary               String?   @map("lan_vocabulary") @db.VarChar(20)
  lanPronunciation            String?   @map("lan_pronunciation") @db.VarChar(20)
  lanComprehension            String?   @map("lan_comprehension") @db.VarChar(20)
  lanGrammar                  String?   @map("lan_grammar") @db.VarChar(20)
  lanRateOfSpeech             String?   @map("lan_rate_of_speech") @db.VarChar(20)
  lanComment                  String?   @map("lan_comment") @db.Text
  lanPillarRate               String?   @map("lan_pillar_rate") @db.VarChar(20)
  skMistakes                  String?   @map("sk_mistakes") @db.VarChar(20)
  skConceptual                String?   @map("sk_conceptual") @db.VarChar(20)
  skKnowledgePillarRate       String?   @map("sk_knowledge_pillar_rate") @db.VarChar(20)
  skKnowledgeComment          String?   @map("sk_knowledge_comment") @db.Text
  assesPreAssessment          String?   @map("asses_pre_assessment") @db.VarChar(20)
  assesAdaptation             String?   @map("asses_adaptation") @db.VarChar(20)
  assesPostAssessment         String?   @map("asses_post_assessment") @db.VarChar(20)
  assesAssessmentPillarRating String?   @map("asses_assessment_pillar_rating") @db.VarChar(20)
  assesAssessmentComment      String?   @map("asses_assessment_comment") @db.Text
  intToneOfVoice              String?   @map("int_tone_of_voice") @db.VarChar(20)
  intProfessionalInteraction  String?   @map("int_professional_interaction") @db.VarChar(20)
  intInteractionPillarRating  String?   @map("int_interaction_pillar_rating") @db.VarChar(20)
  intInteractionComment       String?   @map("int_interaction_comment") @db.Text
  familiarityPreparedTopic    String?   @map("familiarity_prepared_topic") @db.VarChar(20)
  familiarityResources        String?   @map("familiarity_resources") @db.VarChar(20)
  familiarityPillarRating     String?   @map("familiarity_pillar_rating") @db.VarChar(20)
  familiarityComment          String?   @map("familiarity_comment") @db.Text
  strength                    String?   @db.VarChar(50)
  improvement                 String?   @db.VarChar(50)
  additionalComment           String?   @map("additional_comment") @db.Text
  subjectKnowledgeQuestion    String?   @map("subject_knowledge_question") @db.VarChar(20)
  subjectKnowledge            String?   @map("subject_knowledge") @db.VarChar(50)
  subjectKnowledgeComment     String?   @map("subject_knowledge_comment") @db.Text
  redflag                     String?   @db.VarChar(240)
  redflagComment              String?   @map("redflag_comment") @db.Text
  secondOpinion               String?   @map("second_opinion") @db.VarChar(150)
  generalComment              String?   @map("general_comment") @db.Text
  status                      String?   @db.VarChar(50)
  passTarget1Pillar           String?   @map("pass_target_1_pillar") @db.VarChar(150)
  passTarget1Targets          String?   @map("pass_target_1_targets") @db.VarChar(150)
  passExplain                 String?   @map("pass_explain") @db.Text
  passTarget2Pillar           String?   @map("pass_target_2_pillar") @db.VarChar(150)
  passTarget2Targets          String?   @map("pass_target_2_targets") @db.VarChar(150)
  passExplain2                String?   @map("pass_explain_2") @db.Text
  failReason1                 String?   @map("fail_reason_1") @db.VarChar(150)
  failReason2                 String?   @map("fail_reason_2") @db.VarChar(150)
  failComment                 String?   @map("fail_comment") @db.Text
  incompleteCompletedUntil    String?   @map("incomplete_completed_until") @db.VarChar(150)
  incompleteComment           String?   @map("incomplete_comment") @db.Text
  emailStatus                 Boolean?  @map("email_status")
  tutorEmail                  String?   @map("tutor_email") @db.VarChar(150)
  tutorName                   String?   @map("tutor_name") @db.VarChar(150)
  demoAttempt                 Int?      @default(0) @map("demo_attempt") @db.TinyInt
  bsBookingId                 Int?      @map("bs_booking_id")
  orientationDate             DateTime? @map("orientation_date") @db.Date
  orientationTime             String?   @map("orientation_time") @db.VarChar(45)
  orientationUrl              String?   @map("orientation_url") @db.VarChar(240)
  reconsiderReason            String?   @map("reconsider_reason") @db.Text
  createdBy                   Int?      @map("created_by")
  createdAt                   DateTime  @default(now()) @map("created_at") @db.DateTime(0)

  user          User?          @relation(fields: [tspId], references: [tsp_id])
  tiCreatedBy   User?          @relation("tiCreatedBy", fields: [createdBy], references: [tsp_id])
  bookingStatus BookingStatus? @relation(fields: [bsBookingId], references: [id])

  @@map("teaching_interview")
}

model FlexiCandidate {
  id                Int                  @id @default(autoincrement())
  tsp_id            Int                  @unique
  flexi_cadidate_id String               @db.VarChar(75)
  created_at        DateTime             @default(now())
  user              User                 @relation(fields: [tsp_id], references: [tsp_id], onDelete: NoAction, onUpdate: NoAction)
  FlexiExam         FlexiCandidateExam[]

  @@map("flexi_candidates")
}

model FlexiCandidateExam {
  id                        Int                         @id @default(autoincrement())
  flexi_candidate_id        Int
  flexi_exam_id             Int
  exam_status               Int
  created_at                DateTime                    @default(now())
  updated_at                DateTime                    @default(now())
  FlexiCandidate            FlexiCandidate              @relation(fields: [flexi_candidate_id], references: [id])
  FlexiExam                 FlexiExam                   @relation(fields: [flexi_exam_id], references: [id])
  FlexiCandidateExamDetails FlexiCandidateExamDetails[]

  @@index([flexi_candidate_id], map: "flexi_candidate_exams_flexi_candidate_id_fkey")
  @@index([flexi_exam_id], map: "flexi_candidate_exams_flexi_exam_id_fkey")
  @@map("flexi_candidate_exams")
}

model FlexiExam {
  id             Int                  @id @default(autoincrement())
  exam_id        String               @unique @db.VarChar(75)
  exam_name      String               @db.VarChar(75)
  exam_type      String               @db.VarChar(75)
  active_status  Boolean
  created_at     DateTime             @default(now())
  updated_at     DateTime             @default(now())
  updated_by     Int?
  FlexiCandidate FlexiCandidateExam[]

  @@map("flexi_exams")
}

model FlexiCandidateExamDetails {
  id                      Int                @id @default(autoincrement())
  flexi_candidate_exam_id Int
  flexi_exam_id           String             @db.VarChar(75)
  flexi_response_id       String             @db.VarChar(75)
  quiz_name               String             @db.VarChar(75)
  flexi_candidate_id      String             @db.VarChar(75)
  exam_submitted_date     DateTime
  points                  Float
  available_points        Float
  percentage_score        Float
  grade                   String             @db.VarChar(2)
  pass                    Boolean
  attempt                 Int
  created_at              DateTime           @default(now())
  FlexiCandidateExam      FlexiCandidateExam @relation(fields: [flexi_candidate_exam_id], references: [id])

  @@index([flexi_candidate_exam_id], map: "flexi_candidate_exam_details_flexi_candidate_exam_id_fkey")
  @@map("flexi_candidate_exam_details")
}

model GraRegistrationData {
  id            Int      @id @default(autoincrement())
  tspId         Int?     @unique
  whichPartner  String?  @map("which_partner") @db.VarChar(150)
  knewAboutUs   String?  @map("knew_about_us") @db.VarChar(250)
  bankStatus    String?  @map("bank_status") @db.VarChar(150)
  progress      Int?
  documentsList String?  @map("documents_list") @db.VarChar(300)
  detailsStatus String?  @map("details_status") @db.VarChar(20)
  created_at    DateTime @default(now()) @db.DateTime(0)
  updatedAt     DateTime @default(now()) @updatedAt @map("updated_at") @db.DateTime(0)

  user User? @relation(fields: [tspId], references: [tsp_id])

  @@map("gra_registration_data")
}

model ValidationBooking {
  id               Int     @id @default(autoincrement())
  validation_name  String? @db.VarChar(45)
  validation_value Int

  createdAt DateTime @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at") @db.DateTime(0)

  @@map("bs_validation")
}

model EducationResult {
  id         Int     @id @default(autoincrement())
  tspId      Int?    @unique @map("tsp_id")
  score      Int?
  bonus      Boolean @default(false)
  examStatus String? @map("exam_status") @db.VarChar(10)

  user User? @relation(fields: [tspId], references: [tsp_id])

  @@map("education_results")
}

model tutor_agg {
  tutor_id                      BigInt
  tsl_platform_name             String? @db.Text
  launched                      BigInt?
  delivered                     BigInt?
  los_attempted                 BigInt?
  los_completed                 BigInt?
  psq_attempted                 BigInt?
  psq_correct                   BigInt?
  All_good                      BigInt?
  Initial_Problem               BigInt?
  Sound_dropped_once            BigInt?
  Sound_droping_throughout      BigInt?
  Student_can_not_hear_tutor    BigInt?
  Tutor_can_not_hear_student    BigInt?
  No_Audio                      BigInt?
  Student_voice_too_low         BigInt?
  High_background_noise         BigInt?
  All_good_connection           BigInt?
  Student_unable_to_use_tools   BigInt?
  Unable_to_see_annotation      BigInt?
  All_good_workspace            BigInt?
  Unable_to_see_slides          BigInt?
  Not_available                 BigInt?
  Distracted                    BigInt?
  Not_engaged                   BigInt?
  Ready_to_learn                BigInt?
  Very_focused                  BigInt?
  no_feedbacks                  BigInt?
  valid_feed_backs              BigInt?
  Usefulness                    Float?
  Enjoyability                  Float?
  Understandability             Float?
  Independence                  Float?
  U_Hardly_ever                 BigInt?
  U_Occassionally               BigInt?
  U_About_half_the_time         BigInt?
  U_Usually                     BigInt?
  U_Nearly_always               BigInt?
  E_Hardly_ever                 BigInt?
  E_Occassionally               BigInt?
  E_About_half_the_time         BigInt?
  E_Usually                     BigInt?
  E_Nearly_always               BigInt?
  UN_Hardly_ever                BigInt?
  UN_Occassionally              BigInt?
  UN_About_half_the_time        BigInt?
  UN_Usually                    BigInt?
  UN_Nearly_always              BigInt?
  I_Hardly_ever                 BigInt?
  I_Occassionally               BigInt?
  I_About_half_the_time         BigInt?
  I_Usually                     BigInt?
  I_Nearly_always               BigInt?
  Spoke_at_the_right_speed      BigInt?
  Correct_volume                BigInt?
  Used_words_i_understood       BigInt?
  Clear_explanations            BigInt?
  Clear_speech                  BigInt?
  Paused_between_sentences      BigInt?
  Used_short_sentence           BigInt?
  Sound_Problems                BigInt?
  Classroom_was_noisy           BigInt?
  Spoke_too_fast                BigInt?
  Used_long_sentences           BigInt?
  Spoke_too_loudly              BigInt?
  Spoke_too_quietly             BigInt?
  Couldnt_understand_some_words BigInt?
  Confusing_explanations        BigInt?
  min_date                      String? @db.Text
  max_date                      String? @db.Text

  @@ignore
}

model AuditorNote {
  id          Int    @id @default(autoincrement())
  text        String
  auditorId   Int?   @map("auditor_id")
  candidateId Int?   @map("candidate_id")

  createdAt DateTime @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at") @db.DateTime(0)

  auditor   User? @relation("hris_auditor_note_auditor", fields: [auditorId], references: [tsp_id])
  candidate User? @relation("hris_auditor_note_candidate", fields: [candidateId], references: [tsp_id])

  @@map("hris_auditor_note")
}

//AQAS system(GAA)
model SesRevampTemplate {
  id                    Int                   @id @default(autoincrement())
  name                  String?               @db.VarChar(64)
  description           String?               @db.Text
  created_at            DateTime              @db.DateTime(0)
  created_by            Int
  updated_at            DateTime              @default(now()) @db.DateTime(0)
  updated_by            String                @db.VarChar(5)
  ses_revamp_evaluation SesRevampEvaluation[] @relation("ses_revamp_evaluationToses_revamp_template")

  @@map("ses_revamp_template")
}

model sessions_for_evaluation_v3 {
  session_date                 DateTime? @db.Date
  session_time                 String?   @db.Text
  pupil_id                     Int?
  school_id                    Int?
  session_id                   Int       @id
  tutor_name                   String?   @db.Text
  tutor_id                     Int?
  tutor_status                 String?   @db.Text
  audio_status                 String?   @db.Text
  redflag                      String?   @db.Text
  type                         String?   @db.Text
  programme                    String?   @db.Text
  learning_objective           String?   @db.Text
  teaching_span                Int?
  lo_suitability               String?   @db.Text
  session_link                 String?   @db.Text
  tutor_centre                 String?   @db.Text
  tutor_center                 String?   @db.Text
  audio_connection             String?   @db.Text
  work_space_status            String?   @db.Text
  studend_attended             Int?
  student_tutor_attended       Int?
  tutor_attended               Int?
  session_evaluation_status    Int?      @default(1)
  updated_by                   Int?
  updated_at                   DateTime? @db.DateTime(0)
  pupil_name                   String?   @db.Text
  s2s_needs_more_work          Float?
  s2s_new_content_learnt       Float?
  s2s_knowledge_reinforced     Float?
  s2s_not_taught               Float?
  time_lost                    String?   @db.Text
  understandability            Int?
  usefulness                   Int?
  enjoyability                 Int?
  student_engagement           String?   @db.Text
  no_learning_happened         String?   @db.Text
  year_group                   Int?
  negative_pupil_comments      String?   @db.Text
  rlos                         String?   @db.Text
  batch                        String?   @db.Text
  business_unit                String?   @db.Text
  evaluation_id                Int?
  investigation_id             Int?
  ses_abandon_reason           String?   @db.Text
  ses_created_user_id          Int?
  session_investigation_status Int?      @default(1)
  sis_abandon_reason           String?   @db.Text
  sis_created_user_id          Int?
  student_effort_points        Int?
  session_type                 String?   @db.Char(255)
  type_old                     String?   @map("_type")
  mage_created_at              String?   @map("_mage_created_at") @db.Char(52)
  mage_updated_at              String?   @map("_mage_updated_at") @db.Char(52)
}

model sd_new_tutor_evaluation {
  tutor_evaluation_id  Int       @id @default(autoincrement())
  tutor_id             Int
  session_id_1         Int?
  session_id_2         Int?
  session_id_3         Int?
  evaluation_1_comment String?   @db.Text
  evaluation_2_comment String?   @db.Text
  evaluation_3_comment String?   @db.Text
  target_pillar        String?   @db.VarChar(45)
  target_criteria      String?   @db.VarChar(45)
  target_focus         String?   @db.VarChar(45)
  target_comment       String?   @db.Text
  strengths_pillar     String?   @db.VarChar(45)
  strengths_criteria   String?   @db.VarChar(45)
  strengths_comment    String?   @db.VarChar(45)
  email_flag           Int?      @db.TinyInt
  created_at           DateTime? @db.DateTime(0)
  updated_at           DateTime? @default(now()) @db.DateTime(0)
  updated_by           Int?
  completed_at         DateTime? @db.DateTime(0)
  submitted_at         DateTime? @db.DateTime(0)
  submitted_by         Int?
  ses_1_ratings        String?   @db.VarChar(100)
  ses_2_ratings        String?   @db.VarChar(100)
  ses_3_ratings        String?   @db.VarChar(100)
  cumulative_rating    String?   @db.VarChar(100)
  overall_status       String?   @db.VarChar(40)
  other_comments       String?   @db.Text
  evaluation_status    Boolean?  @default(false)
}

model sd_new_targets {
  target_id           String    @id @db.VarChar(45)
  tutor_evaluation_id Int
  type                String?   @db.VarChar(45)
  pillar              String?   @db.VarChar(45)
  criteria            String?   @db.VarChar(45)
  comment_1           String?   @db.Text
  comment_2           String?   @db.Text
  status              String?   @db.VarChar(45)
  updated_by          Int?
  updated_at          DateTime? @default(now()) @db.DateTime(0)
}

//New tabls
model SesRevampEvaluation {
  evaluation_id              Int                          @id @default(autoincrement())
  tutor_id                   Int
  other_comments             String?                      @db.Text
  cumulative_rating          String?                      @db.Text
  overall_evaluation_status  String?                      @db.VarChar(255)
  evaluation_status          Int?                         @default(1)
  email_flag                 String?                      @db.VarChar(16)
  created_at                 DateTime?                    @db.DateTime(0)
  created_by                 Int
  updated_at                 DateTime                     @default(now()) @db.DateTime(0)
  updated_by                 Int
  submitted_at               DateTime?                    @db.DateTime(0)
  submitted_by               Int?
  editable_count             Int                          @default(0)
  template_id                Int
  issue_register_case_id     String?                      @db.VarChar(255)
  point_of_investigation     String?                      @db.Text
  required_action            String?                      @db.Text
  completed_at               DateTime?                    @db.DateTime(0)
  final_email_sent_at        DateTime?                    @db.DateTime(0)
  notify_email_sent_at       DateTime?                    @db.DateTime(0)
  edited_at                  DateTime?                    @db.DateTime(0)
  users_3                    User                         @relation(fields: [created_by], references: [tsp_id])
  ses_revamp_template        SesRevampTemplate            @relation("ses_revamp_evaluationToses_revamp_template", fields: [template_id], references: [id])
  sesRevampEvaluationDetail  SesRevampEvaluationDetail?
  sesRevampSessionEvaluation SesRevampSessionEvaluation[]
  sesRevampTarget            SesRevampTarget[]
  sesRevampTimespans         SesRevampTimespans[]

  @@index([template_id], map: "ses_revamp_evaluation_template_id_fkey")
  @@index([created_by], map: "ses_revamp_evaluation_created_by_fkey")
  @@map("ses_revamp_evaluation")
}

model SesRevampEvaluationDetail {
  id                    Int                 @id @default(autoincrement())
  evaluation_id         Int                 @unique
  reason_for_evaluation String?             @db.Text
  link_to_feedback_call String?             @db.Text
  feedback_attendance   String?             @db.Text
  feedback_date         DateTime?           @db.Date
  sr_completion         String?             @db.Text
  comment_reflection    String?             @db.Text
  tutor_effort          String?             @db.Text
  tutor_mindset         String?             @db.Text
  tutor_mindset_comment String?             @db.Text
  tutor_comm_skill      String?             @db.Text
  tutor_comm_skill_comm String?             @db.Text
  quality_refl_notes    String?             @db.Text
  created_at            DateTime            @db.DateTime(0)
  created_by            Int
  updated_at            DateTime            @default(now()) @db.DateTime(0)
  updated_by            Int
  sesRevampEvaluation   SesRevampEvaluation @relation(fields: [evaluation_id], references: [evaluation_id])

  @@map("ses_revamp_evaluation_detail")
}

model SesRevampMetaData {
  id           Int      @id @unique @default(autoincrement())
  category     String   @db.Text
  sub_category String   @db.Text
  value_name   String   @db.Text
  value        String   @db.Text
  status       String   @db.VarChar(16)
  created_at   DateTime @db.DateTime(0)
  created_by   Int
  updated_at   DateTime @default(now()) @db.DateTime(0)
  updated_by   Int

  @@map("ses_revamp_meta_data")
}

model SesRevampSessionEvaluation {
  id                         Int                  @id @default(autoincrement())
  session_id                 Int
  evaluation_id              Int
  evaluation_session_status  Int?
  evaluation_session_comment String?              @db.Text
  evaluation_session_rating  String?              @db.Text
  pupilsProgress             String?              @db.Text
  created_at                 DateTime             @db.DateTime(0)
  created_by                 Int
  updated_at                 DateTime             @default(now()) @db.DateTime(0)
  updated_by                 Int
  sess_eval_id               String               @unique
  lo_evaluated               String?              @db.Text
  pupil_id                   Int?
  school_id                  Int?
  date_time                  DateTime?            @db.DateTime(0)
  programme                  String?              @db.Text
  pupil_name                 String?              @db.Text
  simsRaise                  Boolean?
  sesRevampEvaluation        SesRevampEvaluation  @relation(fields: [evaluation_id], references: [evaluation_id])
  sesRevampTimespans         SesRevampTimespans[]

  @@index([evaluation_id], map: "ses_revamp_session_evaluation_evaluation_id_fkey")
  @@map("ses_revamp_session_evaluation")
}

model SesRevampTimespans {
  id                         String                     @id @db.VarChar(128)
  evaluation_id              Int
  session_id                 Int
  from_time                  String                     @db.VarChar(20)
  to_time                    String                     @db.VarChar(20)
  created_at                 DateTime                   @db.DateTime(0)
  created_by                 Int
  updated_at                 DateTime                   @default(now()) @db.DateTime(0)
  updated_by                 Int
  sess_eval_id               String
  sesRevampEvaluation        SesRevampEvaluation        @relation(fields: [evaluation_id], references: [evaluation_id])
  sesRevampSessionEvaluation SesRevampSessionEvaluation @relation(fields: [sess_eval_id], references: [sess_eval_id])

  @@index([evaluation_id], map: "ses_revamp_timespans_evaluation_id_fkey")
  @@index([sess_eval_id], map: "ses_revamp_timespans_sess_eval_id_fkey")
  @@map("ses_revamp_timespans")
}

model SesRevampTarget {
  id                  String              @id @db.VarChar(128)
  evaluation_id       Int
  type                String?             @db.VarChar(32)
  pillar              String?             @db.VarChar(512)
  criteria            String?             @db.Text
  comment1            String?             @map("comment_1") @db.Text
  comment2            String?             @map("comment_2") @db.Text
  status              String?             @db.VarChar(16)
  created_at          DateTime            @db.DateTime(0)
  created_by          Int
  updated_at          DateTime            @default(now()) @db.DateTime(0)
  updated_by          Int
  sesRevampEvaluation SesRevampEvaluation @relation(fields: [evaluation_id], references: [evaluation_id])

  @@index([evaluation_id], map: "se_revamp_target_evaluation_id_fkey")
  @@map("ses_revamp_target")
}

model temp_non_tutor_directory {
  hr_tsp_id     BigInt  @id
  short_name    String? @db.Text
  tutor_id      BigInt?
  tsg_email     String? @db.Text
  role_profile  String? @db.Text
  supervisor    String? @db.Text
  supervisor_id Int?
}

// Access managment tables for non-tutor systems

model AccessSystemModulesRef {
  id                    Int                     @id @default(autoincrement())
  systemName            String?                 @map("system_name") @db.VarChar(45)
  moduleName            String?                 @map("module_name") @db.VarChar(45)
  permissionName        String?                 @map("permission_name") @db.VarChar(45)
  accessGroupsOnModules AccessGroupsOnModules[]
  accessUsersOnModules  AccessUsersOnModules[]

  @@map("access_system_modules_ref")
}

model AccessGroupsRef {
  id                    Int                     @id @default(autoincrement())
  description           String?                 @db.VarChar(100)
  accessGroupsOnModules AccessGroupsOnModules[]
  accessUsersOnGroups   AccessUsersOnGroups[]

  @@map("access_groups_ref")
}

model AccessGroupsOnModules {
  id                     Int                    @id @default(autoincrement())
  groupId                Int                    @map("group_id")
  moduleId               Int                    @map("module_id")
  description            String?                @db.VarChar(45)
  accessSystemModulesRef AccessSystemModulesRef @relation(fields: [moduleId], references: [id])
  accessGroupsRef        AccessGroupsRef        @relation(fields: [groupId], references: [id])

  @@unique([groupId, moduleId])
  @@map("access_groups_on_modules")
}

model AccessUsersOnGroups {
  id              Int             @id @default(autoincrement())
  tspId           Int             @map("tsp_id")
  groupId         Int             @map("group_id")
  authorization   Int             @default(1)
  updatedBy       Int?            @map("updated_by")
  updatedAt       DateTime        @default(now()) @map("updated_at") @db.DateTime(0)
  user            User            @relation(fields: [tspId], references: [tsp_id])
  accessGroupsRef AccessGroupsRef @relation(fields: [groupId], references: [id])

  @@unique([tspId, groupId])
  @@map("access_users_on_groups")
}

model AccessUsersOnModules {
  id                     Int                    @id @default(autoincrement())
  tspId                  Int                    @map("tsp_id")
  moduleId               Int                    @map("module_id")
  authorization          Int                    @default(1)
  updatedBy              Int?                   @map("updated_by")
  updatedAt              DateTime               @default(now()) @map("updated_at") @db.DateTime(0)
  user                   User                   @relation(fields: [tspId], references: [tsp_id])
  accessSystemModulesRef AccessSystemModulesRef @relation(fields: [moduleId], references: [id])

  @@unique([tspId, moduleId])
  @@map("access_users_on_modules")
}

//this table will be removed soon. just here till tms is setup
model laravel_master_directory_v2 {
  hr_tsp_id                                                 BigInt    @id
  nic                                                       String?   @db.Text
  epf                                                       String?   @db.Text
  full_name                                                 String?   @db.Text
  name_with_initias                                         String?   @db.Text
  short_name                                                String?   @db.Text
  preferred_name                                            String?   @db.Text
  status                                                    String?   @db.Text
  status_reason                                             String?   @db.Text
  contract_type                                             String?   @db.Text
  exp_code_or_pay_grade                                     BigInt?
  role_profile                                              String?   @db.Text
  management_level                                          String?   @db.Text
  batch                                                     String?   @db.Text
  supervisor                                                String?   @db.Text
  supervisor_id                                             Int?
  division                                                  String?   @db.Text
  division_head                                             String?   @db.Text
  department                                                String?   @db.Text
  sub_department                                            String?   @db.Text
  joining_date_or_contract_start_date                       String?   @db.Text
  contract_end_date                                         String?   @db.Text
  contract_number                                           BigInt?
  employment_type                                           String?   @db.Text
  gender                                                    String?   @db.Text
  dob                                                       String?   @db.Text
  religion                                                  String?   @db.Text
  marital_status                                            String?   @db.Text
  current_address                                           String?   @db.Text
  current_address_city                                      String?   @db.Text
  permanat_address                                          String?   @db.Text
  permanat_address_district                                 String?   @db.Text
  permanent_address_province                                String?   @db.Text
  contact_no                                                BigInt?
  emergency_contact_person                                  String?   @db.Text
  relationship_to_emergency_contact_person                  String?   @db.Text
  emergency_contact_number                                  BigInt?
  tsg_email                                                 String?   @db.Text
  personal_email_address                                    String?   @db.Text
  bank                                                      String?   @db.Text
  bank_branch                                               String?   @db.Text
  branch_code                                               String?   @db.Text
  name_as_per_bank                                          String?   @db.Text
  bank_account_no                                           String?   @db.Text
  b_card                                                    String?   @db.Text
  resignation_given_date                                    String?   @db.Text
  lwd                                                       String?   @db.Text
  resignation_withdrawal_date                               String?   @db.Text
  pcc_status                                                String?   @db.Text
  pcc_submitted_date                                        String?   @db.Text
  pcc_issued_date                                           String?   @db.Text
  pcc_reference_no                                          String?   @db.Text
  tutor_id                                                  BigInt?
  ops_tutor_status                                          String?   @db.Text
  tsl_platform_name                                         String?   @db.Text
  omc_contract_type                                         String?   @db.Text
  omc_tsl_contract_time                                     String?   @db.Text
  omc_session_availability_count                            String?   @db.Text
  omc_previous_performance_score                            String?   @db.Text
  tutor_pc_type_laptop_desktop                              String?   @db.Text
  tutor_internet_connection                                 String?   @db.Text
  tutor_headset_model                                       String?   @db.Text
  omc_if_inactive_reason_for_resignation                    String?   @db.Text
  tutor_supply_center                                       String?   @db.Text
  ops_manager_operation                                     String?   @db.Text
  academic_coach                                            String?   @db.Text
  academic_coach_secondary                                  String?   @db.Text
  academic_line_manager                                     String?   @db.Text
  academic_ops_manager                                      String?   @db.Text
  academic_pip_status                                       String?   @db.Text
  ol_syllabus_type                                          String?   @db.Text
  ol_year                                                   String?   @db.Text
  ol_maths                                                  String?   @db.Text
  ol_english                                                String?   @db.Text
  al_syllabus_type                                          String?   @db.Text
  al_stream                                                 String?   @db.Text
  al_year                                                   String?   @db.Text
  al_subject_1                                              String?   @db.Text
  al_subject_1_result                                       String?   @db.Text
  al_subject_2                                              String?   @db.Text
  al_subject_2_result                                       String?   @db.Text
  al_subject_3                                              String?   @db.Text
  al_subject_3_result                                       String?   @db.Text
  al_subject_4                                              String?   @db.Text
  al_subject_4_result                                       String?   @db.Text
  al_other_subject                                          String?   @db.Text
  al_other_subject_result                                   String?   @db.Text
  highest_completed_qualification                           String?   @db.Text
  field_of_completed_qualification                          String?   @db.Text
  qualification_completed_year                              String?   @db.Text
  completed_course_duration                                 String?   @db.Text
  qualification_currently_studying_type                     String?   @db.Text
  field_of_qualification_currently_studying                 String?   @db.Text
  qualification_currently_studying_started_year             String?   @db.Text
  qualification_currently_studying_expected_completion_year String?   @db.Text
  currently_studying_course_duration                        String?   @db.Text
  main_occupation                                           String?   @db.Text
  teaching_experience                                       String?   @db.Text
  ntp_tutor_qualification_grouped                           String?   @db.Text
  ntp_tutor_subject_grouped                                 String?   @db.Text
  nt_status                                                 String?   @db.Text
  nt_reason                                                 String?   @db.Text
  submitted_at                                              String?   @db.Text
  last_updated_at                                           DateTime? @db.DateTime(0)
  date                                                      String?   @db.Text
  pupil_id                                                  BigInt?
  school_id                                                 BigInt?
  primary                                                   String?   @db.Text
  secondary                                                 String?   @db.Text
  shift                                                     String?   @db.Text
  absorbed_from_omt_ftc_internship_to_non_tutor_role        String?   @db.Text
  absorbed_from_omt_ftc_to_non_tutor_role_date              String?   @db.Text
  entity                                                    String?   @db.Text
  probation_start_date                                      String?   @db.Text
  probation_end_date                                        String?   @db.Text
  pcc_required                                              String?   @db.Text
}

// to be used for redirect authentication
model AccessAuthentication {
  id        Int       @id @default(autoincrement())
  tspId     Int       @map("tsp_id")
  key       String?   @db.VarChar(45)
  active    Boolean   @default(true)
  createdAt DateTime  @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt DateTime? @map("updated_at") @db.DateTime(0)

  @@unique([tspId])
  @@map("access_authentication")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model tsl_dir_temp {
  SUPPLY_CENTER                                                    String? @db.Text
  TSP_ID                                                           BigInt?
  TUTOR_ID                                                         BigInt?
  TUTOR_FIRST_NAME                                                 String? @db.Text
  TUTOR_LAST_NAME                                                  String? @db.Text
  TSL_PLATFORM_NAME                                                String? @db.Text
  GENDER                                                           String? @db.Text
  TUTOR_DOB                                                        String? @db.Text
  TUTOR_OCCUPATION                                                 String? @db.Text
  STATUS                                                           String? @db.Text
  TUTOR_START                                                      String? @db.Text
  TYPE                                                             String? @db.Text
  TUTOR_DROPOUT                                                    String? @db.Text
  TUTOR_DROPOUT_DATE                                               String? @db.Text
  TUTOR_DROPOUT_REASON                                             String? @db.Text
  WITHDRAWN_FROM_EVALUATION                                        String? @db.Text
  WITHDRAWAL_DATE                                                  String? @db.Text
  WITHDRAWAL_REASON                                                String? @db.Text
  MARITAL_STATUS                                                   String? @db.Text
  RELIGION                                                         String? @db.Text
  PCC_STATUS                                                       String? @db.Text
  PCC_EXPIRY                                                       String? @db.Text
  TUTOR_EMAIL                                                      String? @db.Text
  TUTOR_PHONE                                                      BigInt?
  TUTOR_REGION                                                     String? @db.Text
  EVALUATOR                                                        String? @db.Text
  TUTOR_TP_TRAINING                                                String? @db.Text
  SUPERVISOR                                                       String? @db.Text
  tutor_qualification_Highest_Completed                            String? @db.Text
  tutor_qualification_grouped_Highest_Completed                    String? @db.Text
  tutor_qualification_year_Highest_Completed                       BigInt?
  tutor_subject_Highest_Completed                                  String? @db.Text
  tutor_subject_grouped_Highest_Completed                          String? @db.Text
  Previous_Work_Experience_TSL                                     String? @db.Text
  Previous_Work_Experience_OnlineTutoring_Excluding_Asian_Syllabus String? @db.Text
  Previous_Work_Experience_NonTutoring                             Float?
  tutor_qualification_Currently_Following                          String? @db.Text
  tutor_qualification_grouped_Currently_Following                  String? @db.Text
  tutor_qualification_year_Currently_Following                     String? @db.Text
  tutor_subject_Currently_Following                                String? @db.Text
  tutor_subject_grouped_Currently_Following                        String? @db.Text

  @@ignore
}

model NonTutorDirectory {
  hr_tsp_id                                          Int       @id
  nic                                                String?   @db.Text
  epf                                                String?   @db.Text
  full_name                                          String?   @db.Text
  name_with_initias                                  String?   @db.Text
  short_name                                         String?   @db.Text
  preferred_name                                     String?   @db.Text
  status                                             String?   @db.Text
  status_reason                                      String?   @db.Text
  contract_type                                      String?   @db.Text
  job_title                                          String?   @db.Text
  management_level                                   String?   @db.Text
  supervisor                                         String?   @db.Text
  supervisor_id                                      Int?
  division                                           String?   @db.Text
  division_head                                      String?   @db.Text
  department                                         String?   @db.Text
  joining_date_or_contract_start_date                String?   @db.Text
  contract_end_date                                  String?   @db.Text
  contract_number                                    BigInt?
  gender                                             String?   @db.Text
  dob                                                String?   @db.Text
  religion                                           String?   @db.Text
  marital_status                                     String?   @db.Text
  current_address                                    String?   @db.Text
  current_address_city                               String?   @db.Text
  permanat_address                                   String?   @db.Text
  permanat_address_district                          String?   @db.Text
  permanent_address_province                         String?   @db.Text
  contact_no                                         String?
  emergency_contact_person                           String?   @db.Text
  relationship_to_emergency_contact_person           String?   @db.Text
  emergency_contact_number                           String?
  tsg_email                                          String?   @db.Text
  personal_email_address                             String?   @db.Text
  bank                                               String?   @db.Text
  bank_branch                                        String?   @db.Text
  branch_code                                        String?   @db.Text
  name_as_per_bank                                   String?   @db.Text
  bank_account_no                                    String?   @db.Text
  b_card                                             String?   @db.Text
  resignation_given_date                             String?   @db.Text
  lwd                                                String?   @db.Text
  resignation_withdrawal_date                        String?   @db.Text
  pcc_status                                         String?   @db.Text
  pcc_submitted_date                                 String?   @db.Text
  pcc_issued_date                                    String?   @db.Text
  pcc_reference_no                                   String?   @db.Text
  work_email                                         String?   @db.Text
  tutor_id                                           String?   @db.Text
  primary                                            String?   @db.Text
  secondary                                          String?   @db.Text
  exp_code_or_pay_grade                              String?   @db.Text
  shift                                              String?   @db.Text
  batch                                              String?   @db.Text
  sub_department                                     String?   @db.Text
  absorbed_from_omt_ftc_internship_to_non_tutor_role BigInt?
  absorbed_from_omt_ftc_to_non_tutor_role_date       String?   @db.Text
  contract_start_date                                String?   @db.Text
  probation_start_date                               String?   @db.Text
  probation_end_date                                 String?   @db.Text
  employment_type                                    String?   @db.Text
  entity                                             String?   @db.Text
  location                                           String?   @db.Text
  residence_country                                  String?   @db.Text
  bank_swift_code                                    String?   @db.Text
  pcc_required                                       String?   @db.Text
  time_stamp                                         String?   @db.Text
  with_effective                                     String?   @db.Text
  movement_updated_in_hris__tutor                    String?   @db.Text
  final_approval                                     Boolean?
  id                                                 String?   @db.Text
  hr_entry_state                                     String?   @db.Text
  approval_status                                    String?   @db.Text
  updated_by                                         String?   @db.Text
  reason                                             String?   @db.Text
  update_at                                          DateTime? @db.DateTime(0)
  entity_76                                          String?   @db.Text
  status_description                                 String?   @db.Text
  user                                               User?     @relation(fields: [hr_tsp_id], references: [tsp_id])

  simsCollaborators SimsCollaborators[]
  leaveApplications NTHRISLeaveApplications[]
  leaveEntitlements NTHRISLeaveEntitlements[]
  profileStatus     NTHRISProfileProgress?    @relation("nontutor_profile_status")
  profileAuditor    NTHRISProfileProgress[]   @relation("nontutor_profile_auditor")
  jobAuditor        NTHRISProfileProgress[]   @relation("nontutor_job_auditor")
  jobFiller         NTHRISProfileProgress[]   @relation("nontutor_job_filler")

  @@map("non_tutor_directory")
}

model HrisPccCron {
  id            Int      @id @default(autoincrement())
  tspId         Int      @map("tsp_id")
  workEmail     String?  @map("work_email") @db.VarChar(100)
  firstName     String?  @map("first_name") @db.VarChar(100)
  pccExpireDate String?  @map("pcc_expire_date") @db.VarChar(20)
  emailSubject  String?  @map("email_subject") @db.VarChar(100)
  emailBcc      String?  @map("email_bcc") @db.VarChar(200)
  countMail     Int?     @map("count_mail")
  createdAt     DateTime @default(now()) @map("created_at") @db.DateTime(0)
  user          User     @relation(fields: [tspId], references: [tsp_id], onDelete: NoAction, onUpdate: NoAction)

  @@map("hris_pcc_cron")
}

model ApprovedDbsData {
  tspId                Int       @id @map("tsp_id")
  isPcApplied          Int       @default(0) @map("is_pc_applied") @db.TinyInt
  pcAppliedBy          Int?      @map("pc_applied_by")
  pcAppliedAt          DateTime? @map("pc_applied_at") @db.DateTime(0)
  pcCanceledAt         DateTime? @map("pc_canceled_at") @db.DateTime(0)
  pcReferenceNo        String?   @map("pc_reference_no") @db.VarChar(20)
  pcCompletionData     DateTime? @map("pc_completion_data") @db.Date
  pcReportUrl          String?   @map("pc_report_url") @db.VarChar(500)
  pcUploadedAtAg       DateTime? @map("pc_uploaded_at_ag") @db.DateTime(0)
  dbsCertificateNo     String?   @map("dbs_certificate_no") @db.VarChar(20)
  dbsIssuedDate        DateTime? @map("dbs_issued_date") @db.Date
  dbsExpiryDate        DateTime? @map("dbs_expiry_date") @db.Date
  dbsState             String?   @map("dbs_state") @db.VarChar(20)
  isPhysicalDbsChecked Int       @default(0) @map("is_physical_dbs_checked") @db.TinyInt
  physicalDbsCheckedBy Int?      @map("physical_dbs_checked_by")
  physicalDbsCheckedAt DateTime? @map("physical_dbs_checked_at") @db.DateTime(0)
  approvedBy           Int?      @map("approved_by")
  approvedAt           DateTime  @default(now()) @map("approved_at") @db.DateTime(0)
  user                 User      @relation(fields: [tspId], references: [tsp_id], onDelete: NoAction, onUpdate: NoAction)

  @@map("approved_dbs_data")
}

model HrisDbsData {
  id                      Int       @id @default(autoincrement())
  tspId                   Int       @map("tsp_id")
  isPcApplied             Int       @default(0) @map("is_pc_applied") @db.TinyInt
  pcAppliedBy             Int?      @map("pc_applied_by")
  pcAppliedAt             DateTime? @map("pc_applied_at") @db.DateTime(0)
  pcCanceledAt            DateTime? @map("pc_canceled_at") @db.DateTime(0)
  pcReferenceNo           String?   @map("pc_reference_no") @db.VarChar(20)
  pcCompletionData        DateTime? @map("pc_completion_data") @db.Date
  pcReportUrl             String?   @map("pc_report_url") @db.VarChar(500)
  pcReportUrlStatus       String?   @map("pc_report_url_status") @db.VarChar(45)
  pcReportUrlRejectReason String?   @map("pc_report_url_reject_reason") @db.VarChar(200)
  pcUploadedAtAg          DateTime? @map("pc_uploaded_at_ag") @db.DateTime(0)
  dbsCertificateNo        String?   @map("dbs_certificate_no") @db.VarChar(20)
  dbsIssuedDate           DateTime? @map("dbs_issued_date") @db.Date
  dbsExpiryDate           DateTime? @map("dbs_expiry_date") @db.Date
  dbsState                String?   @map("dbs_state") @db.VarChar(20)
  isPhysicalDbsChecked    Int       @default(0) @map("is_physical_dbs_checked") @db.TinyInt
  physicalDbsCheckedBy    Int?      @map("physical_dbs_checked_by")
  physicalDbsCheckedAt    DateTime? @map("physical_dbs_checked_at") @db.DateTime(0)
  updatedBy               Int?      @map("updated_by")
  updatedAt               DateTime? @default(now()) @map("updated_at") @db.DateTime(0)
  user                    User      @relation(fields: [tspId], references: [tsp_id], onDelete: NoAction, onUpdate: NoAction)

  @@map("hris_dbs_data")
}

model TsgRehireStatus {
  id           Int       @id @default(autoincrement())
  name         String?   @db.VarChar(200)
  nic          String?   @db.VarChar(100)
  primaryEmail String?   @map("primary_email") @db.VarChar(100)
  rsOperations String?   @map("rs_operations") @db.VarChar(45)
  rsAcademic   String?   @map("rs_academic") @db.VarChar(45)
  hrResponse   String?   @map("hr_response") @db.VarChar(45)
  createdBy    Int?      @map("created_by")
  createdAt    DateTime? @default(now()) @map("created_at") @db.DateTime(0)

  @@map("tsg_rehire_status")
}

model HrisIncidentLogTable {
  id        Int       @id @default(autoincrement())
  createdAt DateTime? @default(now()) @map("created_at") @db.DateTime(0)
  system    String?   @db.VarChar(45)
  cron      String?   @db.VarChar(45)
  comment   String?   @db.VarChar(100)
  dataSet   String?   @map("data_set") @db.Text

  @@map("hris_incident_log_table")
}

model SesRevampUrlRedirectValidation {
  id         Int       @id @default(autoincrement())
  user_name  String?   @db.Text
  tag        String?   @db.Text
  level      Int?
  action     Int?
  tsp_id     Int?
  created_at DateTime? @db.DateTime(0)
  updated_at DateTime  @default(now()) @db.DateTime(0)

  @@map("ses_revamp_url_redirect_validation")
}

model CognitiveAndAffectiveSessionSuccess {
  row_id                           Int     @id
  date                             String?
  programme                        String?
  tutor_center                     String?
  week_commencing                  String?
  Launched                         Int?
  Attended                         Int?
  Atleast_one_LO_completed         Int?
  Atleast_one_LO_completed_percent Float?
  Total_LOs_attempted              Int?
  Total_LOs_completed              Int?
  WA_PSQ_attempted                 Int?
  WA_PSQ_attempted_percentage      Float?
  Total_PSQs_attempted             Int?
  WA_PSQ_correct                   Int?
  WA_PSQ_correct_percentage        Float?
  Total_PSQs_correct               Int?
  Audio_acceptable                 Int?
  Audio_unacceptable               Int?
  Audio_acceptable_percent         Float?
  Audio_unacceptable_percent       Float?
  Feedbacks_submitted              Int?
  AD_successful                    Int?
  Feedbacks_submitted_percent      Float?
  AD_successful_percent            Float?
  Useful                           Int?
  Enjoyable                        Int?
  Understandable                   Int?
  Independent                      Int?
  Submitted_reasons                Int?
  Sound_Problems                   Int?
  Spoke_too_fast                   Int?
  Used_long_sentences              Int?
  Spoke_too_loudly                 Int?
  Spoke_too_quietly                Int?
  Couldnt_understand_some_words    Int?
  Confusing_explanations           Int?

  @@map("cognitive_and_affective_session_success")
}

model SimsMaster {
  simsMasterId                  Int           @id @map("sims_master_id")
  ticketStatus                  Int           @map("ticket_status")
  ticketCloseDate               DateTime?     @map("ticket_close_date")
  mandatoryFields               Int?          @map("mandatory_fields")
  isEscalatedToHR               Int?          @map("is_escalated_to_hr")
  isCollaborateToOps            Int?          @map("is_collaborate_to_ops")
  isCollaborateToAca            Int?          @map("is_collaborate_to_aca")
  tutorID                       Int?          @map("tutor_id")
  tutorTspId                    Int?          @map("tutor_tsp_id")
  sessionId                     Int?          @map("session_id")
  pointOfInvestigation          Int?          @map("point_of_investigation")
  concernCategory               Int?          @map("concern_category")
  academicCycle                 Int?          @map("academic_cycle")
  impactLevel                   Int?          @map("impact_level")
  descriptionOfTheIncident      String?       @map("description_of_the_incident") @db.Text
  validityOfThecase             Int?          @map("validity_of_the_case")
  tutorError                    Int?          @map("tutor_error")
  tutorSuspension               Int?          @map("tutor_suspension")
  tutorSupportPlan              Int?          @map("tutor_support_plan")
  actionNotes                   String?       @map("action_notes") @db.Text
  actionCategory                Int?          @map("action_category")
  concernType                   Int?          @map("concern_type")
  escalatedToHRDate             DateTime?     @map("escalated_to_hr_date")
  tmsCaseId                     String?       @map("tms_case_id") @db.VarChar(64)
  suspensionStartDate           DateTime?     @map("suspension_start_date")
  suspensionEndDate             DateTime?     @map("suspension_end_date")
  suspensionPeriod              String?       @map("suspension_period") @db.VarChar(512)
  tutorRequestedCatchUp         Int?          @map("tutor_requested_catch_up")
  tutortCatchUp                 DateTime?     @map("tutort_catch_up")
  changeTheInitialDecision      Int?          @map("change_the_initial_decision")
  noteToIncludeInTheHR          String?       @map("note_to_include_in_the_hr") @db.Text
  tutorComments                 String?       @map("tutor_comments") @db.Text
  replyToTheTutorApplicableOnly String?       @map("reply_to_the_tutor_applicable_only") @db.Text
  toEmail                       String?       @map("to_email") @db.VarChar(256)
  ccEmail                       String?       @map("cc_email") @db.VarChar(256)
  subjectEmail                  String?       @map("subject_email") @db.VarChar(512)
  emailBody                     String?       @map("email_body") @db.Text
  relationshipManagerId         Int?          @map("relationship_manager_id")
  relationshipManagerName       String?       @map("relationship_manager_name") @db.Text
  incidentDate                  DateTime?     @map("incident_date")
  createdAt                     DateTime      @map("created_at") @db.DateTime(0)
  createdBy                     Int           @map("created_by")
  updatedAt                     DateTime?     @default(now()) @map("updated_at") @db.DateTime(0)
  updatedBy                     Int?          @map("updated_by")
  emailSentAt                   DateTime?     @map("email_sent_at") @db.DateTime(0)
  notesToHr                     String?       @map("notes_to_hr") @db.Text
  replyToTutorDate              DateTime?     @map("reply_to_tutor_date") @db.DateTime(0)
  isEmailSent                   Boolean       @default(false) @map("is_email_sent")
  isReplyEmailSent              Boolean       @default(false) @map("is_reply_email_sent")
  replyCCEmail                  String?       @map("reply_cc_email") @db.VarChar(256)
  replyEmailSubject             String?       @map("reply_email_subject") @db.VarChar(512)
  replyEmailBody                String?       @map("reply_email_body") @db.Text
  primaryEmailMessageId         String?       @map("primary_email_message_id") @db.VarChar(512)
  primaryEmailFileUrl           String?       @map("primary_mmail_file_url") @db.Text
  replyEmailFileUrl             String?       @map("reply_email_file_url") @db.Text
  pointOfInvestigationMeta      SimsMetaData? @relation("PointOfInvestigation", fields: [pointOfInvestigation], references: [id])
  concernCategoryMeta           SimsMetaData? @relation("ConcernCategory", fields: [concernCategory], references: [id])
  academicCycleMeta             SimsMetaData? @relation("AcademicCycle", fields: [academicCycle], references: [id])
  impactLevelMeta               SimsMetaData? @relation("ImpactLevel", fields: [impactLevel], references: [id])
  validityOfThecaseMeta         SimsMetaData? @relation("ValidityOfThecase", fields: [validityOfThecase], references: [id])
  tutorErrorMeta                SimsMetaData? @relation("tutorError", fields: [tutorError], references: [id])
  tutorSuspensionMeta           SimsMetaData? @relation("TutorSuspension", fields: [tutorSuspension], references: [id])
  tutorSupportPlanMeta          SimsMetaData? @relation("TutorSupportPlan", fields: [tutorSupportPlan], references: [id])
  actionCategoryMeta            SimsMetaData? @relation("ActionCategory", fields: [actionCategory], references: [id])
  concernTypeMeta               SimsMetaData? @relation("ConcernType", fields: [concernType], references: [id])
  tutorRequestedCatchUpMeta     SimsMetaData? @relation("TutorRequestedCatchUp", fields: [tutorRequestedCatchUp], references: [id])
  changeTheInitialDecisionMeta  SimsMetaData? @relation("ChangeTheInitialDecision", fields: [changeTheInitialDecision], references: [id])
  ticketStatusMeta              SimsMetaData? @relation("TicketStatus", fields: [ticketStatus], references: [id])
  userSimsMaster                User?         @relation("UserSimsMaster", fields: [tutorTspId], references: [tsp_id])
  userCreatedBy                 User          @relation("UserCreatedBy", fields: [createdBy], references: [tsp_id])
  userUpdatedBy                 User?         @relation("UserUpdatedBy", fields: [updatedBy], references: [tsp_id])
  userRelationshipManagerId     User?         @relation("UserRelationshipManagerId", fields: [relationshipManagerId], references: [tsp_id])

  simsCollaborators SimsCollaborators[]

  @@map("sims_master")
}

model SimsMetaData {
  id          Int      @id @unique @default(autoincrement()) @map("id")
  category    String   @map("category") @db.Text
  subCategory String   @map("sub_category") @db.Text
  valueName   String   @map("value_name") @db.Text
  value       String   @map("value") @db.Text
  status      String   @map("status") @db.VarChar(16)
  createdAt   DateTime @map("created_at") @db.DateTime(0)
  createdBy   Int      @map("created_by")
  updatedAt   DateTime @default(now()) @map("updated_at") @db.DateTime(0)
  updatedBy   Int      @map("updated_by")

  pointOfInvestigation     SimsMaster[] @relation("PointOfInvestigation")
  concernCategory          SimsMaster[] @relation("ConcernCategory")
  academicCycle            SimsMaster[] @relation("AcademicCycle")
  impactLevel              SimsMaster[] @relation("ImpactLevel")
  validityOfThecase        SimsMaster[] @relation("ValidityOfThecase")
  tutorError               SimsMaster[] @relation("tutorError")
  tutorSuspension          SimsMaster[] @relation("TutorSuspension")
  tutorSupportPlan         SimsMaster[] @relation("TutorSupportPlan")
  actionCategory           SimsMaster[] @relation("ActionCategory")
  concernType              SimsMaster[] @relation("ConcernType")
  tutorRequestedCatchUp    SimsMaster[] @relation("TutorRequestedCatchUp")
  changeTheInitialDecision SimsMaster[] @relation("ChangeTheInitialDecision")
  ticketStatus             SimsMaster[] @relation("TicketStatus")

  @@map("sims_meta_data")
}

model SimsCollaborators {
  simsCollaboratiorsId Int       @id @unique @default(autoincrement()) @map("sims_collaboratiors_id")
  simsMasterId         Int       @map("sims_master_id")
  tspId                Int       @map("tsp_id")
  collaboratorType     String    @map("collaborator_type") @db.VarChar(20)
  note                 String    @map("note")
  emailSendAt          DateTime? @map("email_sent_at")

  simsMaster        SimsMaster        @relation(fields: [simsMasterId], references: [simsMasterId])
  nonTutorDirectory NonTutorDirectory @relation(fields: [tspId], references: [hr_tsp_id])

  @@map("sims_collaborators")
}

model CapautSessionStatus {
  id                  Int                   @id
  code                String                @unique
  name                String
  CapautSessionsToday CapautSessionsToday[]
  GoaSessionsToday    GoaSessionsToday[]
  GoaSessionsFuture   GoaSessionsFuture[]

  @@map("capaut_session_status")
}

model CapautSessionsToday {
  sessionId            Int                  @id @unique @map("session_id")
  tutorId              BigInt?              @map("tutor_id")
  schoolId             Int?                 @map("school_id")
  studentId            Int?                 @map("student_id")
  sessionType          String?              @map("session_type") @db.VarChar(64)
  hourSlot             String?              @map("hour_slot") @db.VarChar(64)
  slot                 Int?                 @map("slot")
  date                 String?              @map("date") @db.VarChar(64)
  sessionDate          String?              @map("_date") @db.Char(52)
  goaSlotId            Int?                 @map("goa_slot_id")
  statusId             Int?                 @map("status_id")
  tspId                Int?                 @map("tsp_id")
  main_app__student_id Int?
  main_app__tutor_id   Int?
  mage_created_at      String?              @map("_mage_created_at") @db.Char(52)
  mage_updated_at      String?              @map("_mage_updated_at") @db.Char(52)
  goaSlot              GOASlot?             @relation(fields: [goaSlotId], references: [id])
  capautSessionStatus  CapautSessionStatus? @relation(fields: [statusId], references: [id])
  user                 User?                @relation(fields: [tspId], references: [tsp_id])

  @@map("capaut_sessions_today")
}

model CapautPastPupilData {
  tutorId     Int     @map("tutor_id")
  schoolId    Int?    @map("school_id")
  studentId   Int     @map("student_id")
  hourStatus  String? @map("hour_status") @db.VarChar(64)
  slot        Int     @map("slot")
  day         String? @map("day") @db.VarChar(64)
  sessionDate String  @map("session_date") @db.VarChar(64)

  @@id([tutorId, studentId, slot, sessionDate])
  @@map("capaut_past_pupil_data")
}

model UserTemporaryDisable {
  email     String
  attempts  Int
  type      Int
  createdAt DateTime @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt DateTime @default(now()) @map("updated_at") @db.DateTime(0)

  @@unique([email, type])
  @@map("user_temporary_disable")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model data_fusion_src_table {
  id               Int
  slot_type        Int?
  status           Int?
  slot_time        String?   @db.VarChar(45)
  appointment_type Int?
  created_at       DateTime? @default(now()) @db.DateTime(0)
  created_by       Int?
  updated_at       DateTime? @default(now()) @db.DateTime(0)
  updated_by       Int?

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model data_fusion_test {
  learning_session_id           Int?
  session_at                    DateTime? @db.Timestamp(0)
  student_id                    Int?
  session_reporting_state       String?   @db.VarChar(255)
  session_state                 String?   @db.VarChar(255)
  session_school_id             Int?
  session_school_is_test_school Boolean?
  programme_name                String?   @db.VarChar(255)
  programme_id                  Int?
  session_date                  DateTime? @db.Date

  @@ignore
}

model NTHRISLeaveApplications {
  id                  Int                  @id @default(autoincrement()) @map("id")
  managerId           Int                  @map("manager_id")
  tspId               Int                  @map("tsp_id")
  appliedDate         DateTime             @default(now()) @map("applied_date") @db.DateTime(0)
  leavePolicyId       Int                  @map("leave_policy_id")
  leaveDuration       String               @map("leave_duration") @db.VarChar(100)
  shift               String               @map("shift") @db.VarChar(100)
  shiftDuration       String               @default("") @map("shift_duration") @db.VarChar(100)
  fromDate            DateTime             @map("from_date") @db.Date
  toDate              DateTime             @map("to_date") @db.Date
  numOfDays           Decimal              @map("num_of_days") @db.Decimal(3, 1)
  reason              String               @map("reason") @db.Text
  status              Int                  @map("status") @db.SmallInt
  cancelRequestDate   DateTime?            @map("cancel_request_date") @db.DateTime(0)
  cancelRequestReason String?              @map("cancel_request_reason") @db.Text
  rejectApproveDate   DateTime?            @map("reject_approve_date") @db.DateTime(0)
  createdAt           DateTime             @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt           DateTime             @default(now()) @map("updated_at") @db.DateTime(0)
  leavePolicy         NTHRISLeavePolicies? @relation(fields: [leavePolicyId], references: [hr_policy_id])
  leaveUser           NonTutorDirectory?   @relation(fields: [tspId], references: [hr_tsp_id])
  leaveDates          NTHRISLeaveDates[]

  @@map("nthris_leave_applications")
}

model NTHRISLeaveDates {
  id                Int                     @id @default(autoincrement()) @map("id")
  leaveId           Int                     @map("leave_id")
  leaveDate         DateTime                @map("leave_date") @db.Date
  leaveApplications NTHRISLeaveApplications @relation(fields: [leaveId], references: [id])

  @@map("nthris_leave_dates")
}

model NTHRISLeaveMeta {
  id        Int      @id @default(autoincrement()) @map("id")
  metaType  String   @map("meta_type") @db.VarChar(20)
  metaValue Int      @map("meta_value") @db.SmallInt
  metaName  String   @map("meta_name") @db.VarChar(100)
  status    Int      @map("status") @db.SmallInt
  createdBy Int      @map("created_by")
  createdAt DateTime @default(now()) @map("created_at") @db.DateTime(0)
  updatedBy Int      @map("updated_by")
  updatedAt DateTime @default(now()) @map("updated_at") @db.DateTime(0)

  @@map("nthris_leave_meta")
}

model NTHRISLeavePolicies {
  id                Int                       @id @default(autoincrement()) @map("id")
  hr_policy_id      Int                       @unique @map("hr_policy_id")
  policy_name       String                    @map("policy_name") @db.VarChar(255)
  short_title       String                    @default("") @map("short_title") @db.VarChar(100)
  days_per_year     Int                       @map("days_per_year") @db.SmallInt
  status            Int                       @map("status") @db.SmallInt
  created_by        Int                       @map("created_by")
  created_at        DateTime                  @default(now()) @map("created_at") @db.DateTime(0)
  updated_by        Int                       @map("updated_by")
  updated_at        DateTime                  @default(now()) @map("updated_at") @db.DateTime(0)
  leaveEntitlements NTHRISLeaveEntitlements[]
  leaveApplications NTHRISLeaveApplications[]

  @@map("nthris_leave_policies")
}

model NTHRISLeaveEntitlements {
  id             Int                 @id @default(autoincrement()) @map("id")
  tsp_id         Int                 @map("tsp_id")
  policy_id      Int                 @map("policy_id")
  allocated_days Float               @map("allocated_days") @db.Float
  created_by     Int                 @map("created_by")
  created_at     DateTime            @default(now()) @map("created_at") @db.DateTime(0)
  leavePolicy    NTHRISLeavePolicies @relation(fields: [policy_id], references: [hr_policy_id])
  leaveUser      NonTutorDirectory   @relation(fields: [tsp_id], references: [hr_tsp_id])

  @@map("nthris_leave_entitlements")
}

model NTHRISProfileProgress {
  id                         Int                @id @default(autoincrement()) @map("id")
  tspId                      Int                @unique @map("tsp_id")
  profileCompleted           Boolean?           @map("profile_completed")
  lastFilledSection          String?            @map("last_filled_section") @db.VarChar(100)
  submittedToAudit           Boolean?           @map("submitted_to_audit")
  auditSubmitAt              DateTime?          @map("audit_submit_at")
  profileAuditStatus         String?            @default("") @map("profile_audit_status") @db.VarChar(100)
  profileAuditBy             Int?               @map("profile_audit_by")
  profileAuditAt             DateTime?          @map("profile_audit_at")
  jobSectionFilled           Boolean?           @map("job_section_filled")
  jobFilledBy                Int?               @map("job_filled_by")
  jobAuditStatus             String?            @default("") @map("job_audit_status") @db.VarChar(100)
  jobAuditBy                 Int?               @map("job_audit_by")
  jobAuditAt                 DateTime?          @map("job_audit_at")
  personalSectionFilled      Boolean?           @map("personal_section_filled")
  contactSectionFilled       Boolean?           @map("contact_section_filled")
  educationSectionFilled     Boolean?           @map("education_section_filled")
  qualificationSectionFilled Boolean?           @map("qualification_section_filled")
  experienceSectionFilled    Boolean?           @map("experience_section_filled")
  hardwareSectionFilled      Boolean?           @map("hardware_section_filled")
  bankSectionFilled          Boolean?           @map("bank_section_filled")
  r2wSectionFilled           Boolean?           @map("r2w_section_filled")
  referenceSectionFilled     Boolean?           @map("reference_section_filled")
  healthSectionFilled        Boolean?           @map("health_section_filled")
  finalDecision              String?            @default("") @map("final_decision") @db.VarChar(100)
  finalDecisionReason        String?            @map("final_decision_reason") @db.Text()
  updatedBy                  Int?               @map("updated_by")
  updatedAt                  DateTime?          @default(now()) @map("updated_at") @db.DateTime(0)
  nonTutor                   NonTutorDirectory  @relation("nontutor_profile_status", fields: [tspId], references: [hr_tsp_id])
  profileAuditor             NonTutorDirectory? @relation("nontutor_profile_auditor", fields: [profileAuditBy], references: [hr_tsp_id])
  jobAuditor                 NonTutorDirectory? @relation("nontutor_job_auditor", fields: [jobAuditBy], references: [hr_tsp_id])
  jobFiller                  NonTutorDirectory? @relation("nontutor_job_filler", fields: [jobFilledBy], references: [hr_tsp_id])

  @@map("nthris_profile_progress")
}

model lsDirectory {
  hrTspId        Int     @id @map("hr_tsp_id")
  epf            String? @map("epf") @db.VarChar(45)
  shortName      String? @map("short_name") @db.VarChar(100)
  status         String? @map("status") @db.VarChar(45)
  statusReason   String? @map("status_reason") @db.VarChar(45)
  contractType   String? @map("contract_type") @db.VarChar(45)
  batch          String? @map("batch") @db.VarChar(45)
  shift          String? @map("shift") @db.VarChar(45)
  supervisor     String? @map("supervisor") @db.VarChar(100)
  supervisorId   Int?    @map("supervisor_id")
  division       String? @map("division") @db.VarChar(45)
  employmentType String? @map("employment_type") @db.VarChar(45)
  gender         String? @map("gender") @db.VarChar(45)
  tsgEmail       String? @map("tsg_email") @db.VarChar(45)

  @@map("ls_directory")
}

model graCronTracker {
  tspId                                     Int       @id @map("tsp_id")
  handleCronRegistrationStep1               DateTime? @db.DateTime(0)
  handleCronQualificationAndProfiling       DateTime? @db.DateTime(0)
  handleCronOnlineAssessmentAfterOneDay     DateTime? @db.DateTime(0)
  handleCronOnlineAssessmentAfterTwoDays    DateTime? @db.DateTime(0)
  handleCronPhoneInterview                  DateTime? @db.DateTime(0)
  handleCronTeachingInterview               DateTime? @db.DateTime(0)
  handleCronReminderBeforeTeachingInterview DateTime? @db.DateTime(0)
  createdAt                                 DateTime? @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt                                 DateTime? @map("updated_at") @db.DateTime(0)
  user                                      User      @relation(fields: [tspId], references: [tsp_id], onDelete: NoAction, onUpdate: NoAction)

  @@map("gra_cron_tracker")
}

model csvCronRecipients {
  id              Int       @id @default(autoincrement())
  subject         String?   @default("") @db.VarChar(45)
  text            String?   @default("") @db.VarChar(100)
  active          Boolean   @default(true)
  frequency       String?   @default("") @db.VarChar(45)
  sqlQuery        String?   @map("sql_query") @db.Text
  recipientTspIds String?   @map("recipient_tsp_ids") @db.Text
  createdAt       DateTime? @default(now()) @map("created_at") @db.DateTime(0)
  createdBy       Int?      @map("created_by")

  @@map("csv_cron_recipients")
}

model systemErrorLog {
  id          Int       @id @default(autoincrement())
  system      String?   @db.VarChar(45)
  function    String?   @db.VarChar(45)
  subSystem   String?   @db.VarChar(45)
  location    String?   @db.VarChar(200)
  description String?   @db.Text
  createdAt   DateTime? @default(now()) @map("created_at") @db.DateTime(0)
  createdBy   Int?      @map("created_by")

  @@map("system_error_log")
}

model LmsUser {
  id               Int               @id @map("id")
  login            String?           @map("login") @db.VarChar(128)
  firstName        String?           @map("first_name") @db.VarChar(256)
  lastName         String?           @map("last_name") @db.VarChar(256)
  email            String?           @map("email") @db.VarChar(256)
  userType         String?           @map("user_type") @db.VarChar(128)
  status           String?           @map("status") @db.VarChar(64)
  deactivationDate DateTime?         @map("deactivation_date")
  level            Int?              @map("level")
  points           Int?              @map("points")
  createdOn        DateTime?         @map("created_on")
  lastUpdated      DateTime?         @map("last_updated")
  deleted          Int               @default(0) @db.TinyInt
  lmsCourseUser    LmsCourseUser[]
  lmsUnitProgress  LmsUnitProgress[]
  // hrisProgress     HrisProgress?

  @@map("lms_user")
}

model LmsCategory {
  id               Int         @id @map("id")
  name             String?     @map("name") @db.Text
  price            String?     @map("price") @db.VarChar(128)
  parentCategoryId Int?        @map("parent_category_id")
  lmsCourse        LmsCourse[]

  @@map("lms_category")
}

model LmsCourse {
  id                    Int             @id @map("id")
  name                  String?         @map("name") @db.Text
  code                  String?         @map("code") @db.VarChar(128)
  categoryId            Int?            @map("category_id")
  description           String?         @map("description") @db.Text
  price                 String?         @map("price") @db.VarChar(128)
  status                String?         @map("status") @db.VarChar(64)
  creationDate          DateTime?       @map("creation_date")
  lastUpdateOn          DateTime?       @map("last_update_on")
  creatorId             Int?            @map("creator_id")
  hideFromCatalog       Int?            @map("hide_from_catalog")
  timeLimit             Int?            @map("time_limit")
  startDatetime         DateTime?       @map("start_datetime")
  expirationDatetime    DateTime?       @map("expiration_datetime")
  level                 Int?            @map("level")
  shared                Int?            @map("shared")
  sharedUrl             String?         @map("shared_url") @db.Text
  certification         String?         @map("certification") @db.Text
  certificationDuration String?         @map("certification_duration") @db.Text
  lmsCategory           LmsCategory?    @relation(fields: [categoryId], references: [id])
  lmsCourseUser         LmsCourseUser[]
  lmsCourseUnit         LmsCourseUnit[]

  @@map("lms_course")
}

model LmsCourseUser {
  courseId             Int        @map("course_id")
  userId               Int        @map("user_id")
  name                 String?    @map("name") @db.Text
  role                 String?    @map("role") @db.VarChar(128)
  enrolledOn           DateTime?  @map("enrolled_on")
  enrolledOnTimestamp  DateTime?  @map("enrolled_on_timestamp")
  completedOn          DateTime?  @map("completed_on")
  completedOnTimestamp DateTime?  @map("completed_on_timestamp")
  completionPercentage Int?       @map("completion_percentage")
  expiredOn            DateTime?  @map("expired_on")
  expiredOnTimestamp   DateTime?  @map("expired_on_timestamp")
  totalTime            String?    @map("total_time") @db.VarChar(128)
  totalTimeSeconds     Int?       @map("total_time_seconds")
  lmsCourse            LmsCourse? @relation(fields: [courseId], references: [id])
  lmsUser              LmsUser?   @relation(fields: [userId], references: [id])

  @@id([courseId, userId])
  @@unique([courseId, userId])
  @@map("lms_course_user")
}

model LmsCourseUnit {
  courseId Int     @map("course_id")
  unitId   Int     @map("unit_id")
  type     String? @map("type") @db.VarChar(512)
  name     String? @map("name") @db.Text
  url      String? @map("url") @db.Text
  order    Int     @default(0)

  lmsCourse       LmsCourse?        @relation(fields: [courseId], references: [id])
  lmsUnitProgress LmsUnitProgress[]

  @@id([courseId, unitId])
  @@unique([courseId, unitId])
  @@map("lms_course_unit")
}

model LmsUnitProgress {
  courseId      Int            @map("course_id")
  unitId        Int            @map("unit_id")
  userId        Int            @map("user_id")
  status        String?        @map("status") @db.VarChar(128)
  score         Float?         @map("score") @db.Double
  deleted       Int            @default(0) @db.TinyInt
  lmsCourseUnit LmsCourseUnit? @relation(fields: [courseId, unitId], references: [courseId, unitId])
  lmsUser       LmsUser?       @relation(fields: [userId], references: [id])

  @@id([courseId, unitId, userId])
  @@unique([courseId, unitId, userId])
  @@map("lms_unit_progress")
}

model GoaSessionsToday {
  sessionId           Int                  @id @unique @map("session_id")
  tutorId             BigInt?              @map("tutor_id")
  schoolId            Int?                 @map("school_id")
  studentId           Int?                 @map("student_id")
  sessionType         String?              @map("session_type") @db.VarChar(64)
  hourSlot            String?              @map("hour_slot") @db.VarChar(64)
  slot                Int?                 @map("slot")
  date                String?              @map("date") @db.VarChar(64)
  tspId               Int?                 @map("tsp_id")
  user                User?                @relation(fields: [tspId], references: [tsp_id])
  goaSlotId           Int?                 @map("goa_slot_id")
  goaSlot             GOASlot?             @relation(fields: [goaSlotId], references: [id])
  statusId            Int?                 @map("status_id")
  capautSessionStatus CapautSessionStatus? @relation(fields: [statusId], references: [id])

  @@map("goa_sessions_today")
}

model GoaSessionsFuture {
  sessionId           Int                  @id @unique @map("session_id")
  tutorId             BigInt?              @map("tutor_id")
  schoolId            Int?                 @map("school_id")
  studentId           Int?                 @map("student_id")
  sessionType         String?              @map("session_type") @db.Char(255)
  hourSlot            String?              @map("hour_slot") @db.Char(255)
  slot                Int?                 @map("slot")
  date                String?              @map("session_date") @db.Char(255)
  tspId               Int?                 @map("tsp_id")
  user                User?                @relation(fields: [tspId], references: [tsp_id])
  goaSlotId           Int?                 @map("goa_slot_id")
  goaSlot             GOASlot?             @relation(fields: [goaSlotId], references: [id])
  statusId            Int?                 @map("status_id")
  capautSessionStatus CapautSessionStatus? @relation(fields: [statusId], references: [id])
  session_updated_at  String?              @db.Char(52)
  mage_created_at     String?              @map("_mage_created_at") @db.Char(52)
  mage_updated_at     String?              @map("_mage_updated_at") @db.Char(52)

  @@map("goa_sessions_future")
}

model GoaTslReservationBooking {
  id                              Int                               @id @default(autoincrement()) @map("id")
  tslUuid                         String                            @map("tsl_uuid")
  startDate                       DateTime                          @map("start_date")
  endDate                         DateTime                          @map("end_date")
  schoolId                        Int                               @map("school_id")
  tutorPhase                      Int                               @map("tutor_phase")
  status                          Int                               @map("status")
  createdAt                       DateTime?                         @default(now()) @map("created_at") @db.DateTime(0)
  createdBy                       Int?                              @map("created_by")
  updatedAt                       DateTime?                         @map("updated_at") @db.DateTime(0)
  updatedBy                       Int?                              @map("updated_by")
  goaTslReservationBookingDetails GoaTslReservationBookingDetails[]
  tutorPhaseGoaMetaData           GoaMetaData?                      @relation("TutorPhaseReservationBooking", fields: [tutorPhase], references: [id])
  statusGoaMetaData               GoaMetaData?                      @relation("StatusReservationBooking", fields: [status], references: [id])

  @@map("goa_tsl_reservation_booking")
}

model GoaTslReservationBookingDetails {
  id                         Int                       @id @default(autoincrement()) @map("id")
  timeSlotUK                 String                    @map("time_slot_uk")
  slotId                     Int?                      @map("slot_id") // TSG Slot id
  week                       Int                       @map("week")
  numberOfStudents           Int                       @map("number_of_students")
  createdAt                  DateTime?                 @default(now()) @map("created_at") @db.DateTime(0)
  createdBy                  Int?                      @map("created_by")
  updatedAt                  DateTime?                 @map("updated_at") @db.DateTime(0)
  updatedBy                  Int?                      @map("updated_by")
  goaTslReservationBookingId Int                       @map("goa_tsl_reservation_booking_id")
  slot                       GOASlot?                  @relation(fields: [slotId], references: [id])
  GOATSLReservationBooking   GoaTslReservationBooking? @relation(fields: [goaTslReservationBookingId], references: [id])
  goaTslBookingTutors        GoaTslBookingTutors[]

  @@map("goa_tsl_reservation_booking_details")
}

model GoaTslBookingTutors {
  id                                Int                              @id @default(autoincrement()) @map("id")
  tslTutorId                        Int                              @map("tsl_tutor_id")
  lastSlotStatusId                  Int?                             @map("last_slot_status_id")
  createdAt                         DateTime?                        @default(now()) @map("created_at") @db.DateTime(0)
  createdBy                         Int?                             @map("created_by")
  updatedAt                         DateTime?                        @map("updated_at") @db.DateTime(0)
  updatedBy                         Int?                             @map("updated_by")
  goaTslReservationBookingDetailsId Int                              @map("goa_tsl_reservation_booking_details_id")
  gOATSLReservationBookingDetails   GoaTslReservationBookingDetails? @relation(fields: [goaTslReservationBookingDetailsId], references: [id])

  @@map("goa_tsl_booking_tutors")
}

model GoaMetaData {
  id           Int      @id @unique @default(autoincrement())
  category     String   @db.Text
  sub_category String   @db.Text
  name         String   @db.Text
  value        String   @db.Text
  status       String   @db.VarChar(16)
  created_at   DateTime @db.DateTime(0)
  created_by   Int
  updated_at   DateTime @default(now()) @db.DateTime(0)
  updated_by   Int

  tutorPhaseReservationBooking GoaTslReservationBooking[] @relation("TutorPhaseReservationBooking")
  statusReservationBooking     GoaTslReservationBooking[] @relation("StatusReservationBooking")
  goaTslLaunchedDetails        goaTslLaunchedDetails[]
  GoaTslBookedDetails          GoaTslBookedDetails[]      @relation("TutorPhaseBookedDetails")
  GoaTslstatus                 GoaTslBookedDetails[]      @relation("StatusBookedDetails")

  @@map("goa_meta_data")
}

model goa_gbq_temp_booked_sessions_v2 {
  unique_key           String?   @db.Text
  effective_date       DateTime? @db.Date
  booked_session_count BigInt?
  business_unit        String?   @db.Text
  slot_id              BigInt?
  hour_status_id       BigInt?
  created_at           DateTime? @db.Timestamp(0)
  created_by           BigInt?

  @@ignore
}

model gbq_temp_sessions_for_evaluation_v3 {
  session_date             DateTime? @db.Date
  session_time             String?   @db.Text
  pupil_id                 BigInt?
  school_id                BigInt?
  session_id               BigInt?
  tutor_name               String?   @db.Text
  tutor_id                 BigInt?
  tutor_status             String?   @db.Text
  audio_status             String?   @db.Text
  redflag                  String?   @db.Text
  type                     String?   @db.Text
  programme                String?   @db.Text
  learning_objective       String?   @db.Text
  teaching_span            BigInt?
  lo_suitability           String?   @db.Text
  session_link             String?   @db.Text
  tutor_centre             String?   @db.Text
  audio_connection         String?   @db.Text
  work_space_status        String?   @db.Text
  studend_attended         BigInt?
  student_tutor_attended   BigInt?
  tutor_attended           BigInt?
  pupil_name               String?   @db.Text
  s2s_needs_more_work      Float?
  s2s_new_content_learnt   Float?
  s2s_knowledge_reinforced Float?
  s2s_not_taught           Float?
  time_lost                String?   @db.Text
  understandability        BigInt?
  usefulness               BigInt?
  enjoyability             BigInt?
  student_engagement       String?   @db.Text
  no_learning_happened     String?   @db.Text
  year_group               BigInt?
  negative_pupil_comments  String?   @db.Text
  rlos                     String?   @db.Text
  batch                    String?   @db.Text
  business_unit            String?   @db.Text
  student_effort_points    BigInt?

  @@ignore
}

model gbq_sessions_for_evaluation_v3 {
  session_date                 DateTime? @db.Date
  session_time                 String?   @db.Text
  pupil_id                     Int?
  school_id                    Int?
  session_id                   Int       @id
  tutor_name                   String?   @db.Text
  tutor_id                     Int?
  tutor_status                 String?   @db.Text
  audio_status                 String?   @db.Text
  redflag                      String?   @db.Text
  type                         String?   @db.Text
  programme                    String?   @db.Text
  learning_objective           String?   @db.Text
  teaching_span                Int?
  lo_suitability               String?   @db.Text
  session_link                 String?   @db.Text
  tutor_centre                 String?   @db.Text
  audio_connection             String?   @db.Text
  work_space_status            String?   @db.Text
  studend_attended             Int?
  student_tutor_attended       Int?
  tutor_attended               Int?
  session_evaluation_status    Int?      @default(1)
  updated_by                   Int?
  updated_at                   DateTime? @db.DateTime(0)
  pupil_name                   String?   @db.Text
  s2s_needs_more_work          Float?
  s2s_new_content_learnt       Float?
  s2s_knowledge_reinforced     Float?
  s2s_not_taught               Float?
  time_lost                    String?   @db.Text
  understandability            Int?
  usefulness                   Int?
  enjoyability                 Int?
  student_engagement           String?   @db.Text
  no_learning_happened         String?   @db.Text
  year_group                   Int?
  negative_pupil_comments      String?   @db.Text
  rlos                         String?   @db.Text
  batch                        String?   @db.Text
  business_unit                String?   @db.Text
  evaluation_id                Int?
  investigation_id             Int?
  ses_abandon_reason           String?   @db.Text
  ses_created_user_id          Int?
  session_investigation_status Int?      @default(1)
  sis_abandon_reason           String?   @db.Text
  sis_created_user_id          Int?
  student_effort_points        Int?
  tutor_center                 String?   @db.Text
}

model gbq_temp_goa_launched_sessions {
  id                  BigInt?
  tsp_id              BigInt?
  slot_id             BigInt?
  effective_date      DateTime? @db.Date
  created_at          DateTime? @db.Date
  learning_session_id BigInt?
  slot_status_id      BigInt?

  @@ignore
}

model gbq_temp_sessions_for_evaluation_v4 {
  session_date             DateTime? @db.Date
  session_time             String?   @db.Text
  pupil_id                 BigInt?
  school_id                BigInt?
  session_id               BigInt?
  tutor_name               String?   @db.Text
  tutor_id                 BigInt?
  tutor_status             String?   @db.Text
  audio_status             String?   @db.Text
  redflag                  String?   @db.Text
  type                     String?   @db.Text
  programme                String?   @db.Text
  learning_objective       String?   @db.Text
  teaching_span            BigInt?
  lo_suitability           String?   @db.Text
  session_link             String?   @db.Text
  tutor_centre             String?   @db.Text
  audio_connection         String?   @db.Text
  work_space_status        String?   @db.Text
  studend_attended         BigInt?
  student_tutor_attended   BigInt?
  tutor_attended           BigInt?
  pupil_name               String?   @db.Text
  s2s_needs_more_work      Float?
  s2s_new_content_learnt   Float?
  s2s_knowledge_reinforced Float?
  s2s_not_taught           Float?
  time_lost                String?   @db.Text
  understandability        BigInt?
  usefulness               BigInt?
  enjoyability             BigInt?
  student_engagement       String?   @db.Text
  no_learning_happened     String?   @db.Text
  year_group               BigInt?
  negative_pupil_comments  String?   @db.Text
  rlos                     String?   @db.Text
  batch                    String?   @db.Text
  business_unit            String?   @db.Text
  student_effort_points    BigInt?

  @@ignore
}

model gbq_temp_tsl_user {
  tsp_id         Int    @id
  tsl_id         Int
  tsl_first_name String @db.VarChar(191)
  tsl_last_name  String @db.VarChar(191)
  tsl_full_name  String @db.VarChar(191)
  tsl_email      String @db.VarChar(191)
}

model gbq_temp_tsl_contract {
  id              Int      @id @default(autoincrement())
  tsl_user_id     Int
  contract_id     Int
  contract_status Int
  start_date      DateTime @db.DateTime(3)
  end_date        DateTime @db.DateTime(3)
}

model gbq_temp_capaut_sessions_today {
  session_id   Int     @id @unique @default(autoincrement())
  tutor_id     Int?
  school_id    Int?
  student_id   Int?
  session_type String? @db.VarChar(64)
  hour_slot    String? @db.VarChar(64)
  slot         Int?
  date         String? @db.VarChar(64)
}

model GRATimeRange {
  id        Int       @id @default(autoincrement())
  timeRange String    @map("time_range")
  status    String    @db.VarChar(45)
  required  Int       @default(0) @db.TinyInt
  createdAt DateTime  @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt DateTime  @default(now()) @map("updated_at") @db.DateTime(0)
  GRASlot   GRASlot[]

  @@map("gra_time_range")
}

model GRASlot {
  id          Int           @id @default(autoincrement())
  tspId       Int           @map("tsp_id")
  dateId      Int           @map("date_id")
  timeRangeId Int           @map("time_range_id")
  status      Int           @default(1) @db.TinyInt
  createdAt   DateTime      @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt   DateTime      @default(now()) @map("updated_at") @db.DateTime(0)
  user        User          @relation(fields: [tspId], references: [tsp_id])
  date        GOADaysOFWeek @relation(fields: [dateId], references: [id])
  timeRange   GRATimeRange  @relation(fields: [timeRangeId], references: [id])

  @@unique([tspId, dateId, timeRangeId])
  @@map("gra_slot")
}

model GoaTslBookedDetails {
  id               Int       @id @default(autoincrement())
  tslUuid          String?   @map("tsl_uuid")
  sessionId        Int       @unique @map("session_id") // TSL side data
  tutorId          BigInt?   @map("tutor_id") //  TSL side data
  tspId            Int?      @map("tsp_id") // TSG side data
  schoolId         Int?      @map("school_id") //  TSL side data
  studentId        Int?      @map("student_id") //  TSL side data
  studentName      String?   @map("student_name")
  tutorPhase       Int?      @map("tutor_phase") // TSG side data - prepare form looking at the session_planed_at and session_end_at
  hourSlot         String?   @map("hour_slot") @db.VarChar(64) // OH or HH - prepare form looking at the session_planed_at and session_end_at
  goaSlotId        Int?      @map("goa_slot_id") //Slot Id - TSG side data
  sessionDate      DateTime? @map("session_date") @db.Date //  TSL side data
  status           Int?      @map("status")
  createdAt        DateTime? @map("created_at") @db.DateTime(0)
  updatedAt        DateTime? @default(now()) @map("updated_at") @db.DateTime(0)
  sessionPlannedAt DateTime? @map("session_planned_at")
  sessionEndAt     DateTime? @map("session_end_at")

  tutorPhaseGoaMetaData GoaMetaData? @relation("TutorPhaseBookedDetails", fields: [tutorPhase], references: [id])
  statusGoaMetaData     GoaMetaData? @relation("StatusBookedDetails", fields: [status], references: [id])

  @@map("goa_tsl_booked_details")
}

model goaTslLaunchedDetails {
  id               Int       @id @default(autoincrement())
  sessionId        Int       @unique @map("session_id") // TSL side data
  tutorId          BigInt?   @map("tutor_id") //  TSL side data
  tspId            Int?      @map("tsp_id") // TSG side data
  schoolId         Int?      @map("school_id") //  TSL side data
  studentId        Int?      @map("student_id") //  TSL side data
  tutorPhase       Int?      @map("tutor_phase") // TSG side data - prepare form looking at the session_planed_at and session_end_at
  hourSlot         String?   @map("hour_slot") @db.VarChar(64) // OH or HH - prepare form looking at the session_planed_at and session_end_at
  goaSlotId        Int?      @map("goa_slot_id") //Slot Id - TSG side data
  sessionDate      DateTime? @map("session_date") @db.Date //  TSL side data
  createdAt        DateTime? @map("created_at") @db.DateTime(0)
  updatedAt        DateTime? @default(now()) @map("updated_at") @db.DateTime(0)
  sessionPlannedAt DateTime? @map("session_planned_at")
  sessionEndAt     DateTime? @map("session_end_at")

  tutorPhaseGoaMetaData GoaMetaData? @relation(fields: [tutorPhase], references: [id])

  @@map("goa_tsl_launched_details")
}

model InitialAssessment {
  id               Int            @id @default(autoincrement())
  tspId            Int?           @map("tsp_id")
  bsBookingId      Int?           @map("bs_booking_id")
  date             DateTime?      @db.Date
  attendance       String?        @db.VarChar(45)
  language         Int?
  subjectKnowledge Int?           @map("subject_knowledge")
  mindset          Int?
  commitment       String?        @db.VarChar(45)
  overallComments  String?        @map("overall_comments") @db.VarChar(770)
  finalOutcome     String?        @map("final_outcome") @db.VarChar(20)
  finalReason      String?        @map("final_reason") @db.VarChar(45)
  createdAt        DateTime       @default(now()) @map("created_at") @db.DateTime(0)
  createdBy        Int?           @map("created_by")
  user             User?          @relation(fields: [tspId], references: [tsp_id])
  iaCreatedBy      User?          @relation("iaCreatedBy", fields: [createdBy], references: [tsp_id])
  bookingStatus    BookingStatus? @relation(fields: [bsBookingId], references: [id])

  @@map("initial_assessment")
}

model FtAssessment {
  id                               Int       @id @default(autoincrement())
  foundationTrainingLevel          Int?      @map("foundation_training_level") @db.TinyInt
  tspId                            Int?      @map("tsp_id")
  bsBookingId                      Int?      @map("bs_booking_id")
  demoDate                         DateTime? @map("demo_date") @db.Date
  demoAttempt                      Int?      @map("demo_attempt") @db.TinyInt
  batch                            String?   @db.VarChar(20)
  attendance                       String?   @map("attendance") @db.VarChar(50)
  attendanceComment                String?   @map("attendance_comment") @db.VarChar(770)
  a1LocationCheck                  String?   @map("a1_location_check") @db.VarChar(150)
  a2Familiar1SessionPage           String?   @map("a2_familiar1_session_page") @db.VarChar(15)
  a2Familiar2LaunchSession         String?   @map("a2_familiar2_launch_session") @db.VarChar(15)
  a2Familiar3StudentProfile        String?   @map("a2_familiar3_student_profile") @db.VarChar(15)
  a2Familiar4Troubleshooting       String?   @map("a2_familiar4_troubleshooting") @db.VarChar(15)
  a2Familiar5NextLesson            String?   @map("a2_familiar5_next_lesson") @db.VarChar(15)
  a2Familiar6EndSession            String?   @map("a2_familiar6_end_session") @db.VarChar(15)
  a2Familiar7FillPsff              String?   @map("a2_familiar7_fill_psff") @db.VarChar(15)
  p1Environment                    String?   @map("p1_environment") @db.VarChar(12)
  p1EnvironmentComment             String?   @map("p1_environment_comment") @db.VarChar(770)
  p2NonSessionConduct              String?   @map("p2_non_session_conduct") @db.VarChar(12)
  p2NonSessionConductComment       String?   @map("p2_non_session_conduct_comment") @db.VarChar(770)
  p3InSessionConduct               String?   @map("p3_in_session_conduct") @db.VarChar(12)
  p3InSessionConductComment        String?   @map("p3_in_session_conduct_comment") @db.VarChar(770)
  p4Safeguarding                   String?   @map("p4_safeguarding") @db.VarChar(12)
  p4SafeguardingComment            String?   @map("p4_safeguarding_comment") @db.VarChar(770)
  p5Language                       String?   @map("p5_language") @db.VarChar(12)
  p5LanguageComment                String?   @map("p5_language_comment") @db.VarChar(770)
  p6SctInteraction                 String?   @map("p6_sct_interaction") @db.VarChar(12)
  p6SctInteractionComment          String?   @map("p6_sct_interaction_comment") @db.VarChar(770)
  p7SctAssessment                  String?   @map("p7_sct_assessment") @db.VarChar(12)
  p7SctAssessmentComment           String?   @map("p7_sct_assessment_comment") @db.VarChar(770)
  p8MathematicalInstruction        String?   @map("p8_mathematical_instruction") @db.VarChar(12)
  p8MathematicalInstructionComment String?   @map("p8_mathematical_instruction_comment") @db.VarChar(770)
  whatWentWellP1                   String?   @map("what_went_well_p1") @db.VarChar(90)
  whatWentWellP1Comment            String?   @map("what_went_well_p1_comment") @db.VarChar(770)
  whatWentWellP2                   String?   @map("what_went_well_p2") @db.VarChar(90)
  whatWentWellP2Comment            String?   @map("what_went_well_p2_comment") @db.VarChar(770)
  areaOfImprovementP1              String?   @map("area_of_improvement_p1") @db.VarChar(90)
  areaOfImprovementP1Comment       String?   @map("area_of_improvement_p1_comment") @db.VarChar(770)
  areaOfImprovementP2              String?   @map("area_of_improvement_p2") @db.VarChar(90)
  areaOfImprovementP2Comment       String?   @map("area_of_improvement_p2_comment") @db.VarChar(770)
  monitoringComment                String?   @map("monitoring_comment") @db.VarChar(770)
  generalComment                   String?   @map("general_comment") @db.VarChar(770)
  finalOutcome                     String?   @map("final_outcome") @db.VarChar(50)
  failReason                       String?   @map("fail_reason") @db.VarChar(200)
  failReasonOther                  String?   @map("fail_reason_other") @db.VarChar(770)
  saveDraft                        Int?      @default(1) @map("save_draft") @db.TinyInt
  emailSent                        Int?      @default(0) @map("email_sent") @db.TinyInt
  createdAt                        DateTime? @default(now()) @map("created_at") @db.DateTime(0)
  createdBy                        Int?      @map("created_by")
  updatedAt                        DateTime? @default(now()) @map("updated_at") @db.DateTime(0)
  updatedBy                        Int?      @map("updated_by")
  triggeredBy                      Int?      @map("triggered_by")
  triggeredAt                      DateTime? @map("triggered_at") @db.DateTime(0)

  user           User?          @relation(fields: [tspId], references: [tsp_id], onDelete: NoAction, onUpdate: NoAction)
  ftaCreatedBy   User?          @relation("ftaCreatedBy", fields: [createdBy], references: [tsp_id])
  ftaUpdatedBy   User?          @relation("ftaUpdatedBy", fields: [updatedBy], references: [tsp_id])
  ftaTriggeredBy User?          @relation("ftaTriggeredBy", fields: [triggeredBy], references: [tsp_id])
  bookingStatus  BookingStatus? @relation(fields: [bsBookingId], references: [id])

  @@map("ft_assessment")
}

model BsTutorJourneyTracker {
  id             Int       @id @default(autoincrement())
  tspId          Int       @map("tsp_id")
  system         String?   @db.VarChar(20)
  journeyLevel   String?   @map("journey_level") @db.VarChar(20)
  journeyOutcome String?   @map("journey_outcome") @db.VarChar(20)
  specialNote    String?   @map("special_note") @db.VarChar(45)
  createdAt      DateTime? @default(now()) @map("created_at") @db.DateTime(0)
  createdBy      Int?      @map("created_by")

  user           User? @relation(fields: [tspId], references: [tsp_id], onDelete: NoAction, onUpdate: NoAction)
  bstjtCreatedBy User? @relation("bstjtCreatedBy", fields: [createdBy], references: [tsp_id])

  @@map("bs_tutor_journey_tracker")
}
