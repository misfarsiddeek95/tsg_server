
-- difference between the two is that,  @db.DateTime(0) << tells:
-- The 0 parameter sets the precision of the DateTime column. Setting it to 0 means that the column will not have fractional seconds 
-- ex: 2023-06-04 08:05:29, 2023-06-04 08:05:29.800
approvedAt    DateTime  @default(now()) @map("approved_at")
approvedAt    DateTime  @default(now()) @map("approved_at") @db.DateTime(0)

-- meanwhile @Date makes sure only date is saved & not time_lost
end_date      DateTime  @db.Date

-- to store boolean value, may use either of:
isTrue    Boolean   @default(true)
isTrue    Int       @default(0) @db.TinyInt

-- difference between DateTime & Timestamp is almost none.
-- This annotation provides a hint to Prisma about the column type in the database, specifically indicating that it should be of type Timestamp or DateTime
-- For general use and to ensure compatibility with most database types, it is recommended to use DateTime instead of Timestamp as the column type hint in Prisma models.
created_at  DateTime?   @default(now()) @db.Timestamp(0)
created_at  DateTime?   @default(now()) @db.DateTime(0)

